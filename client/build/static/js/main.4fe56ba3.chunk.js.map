{"version":3,"sources":["Storage/LocalDatabase.ts","Assets/Images/Logo/app_logo.png","Helpers/helpGetRegexValidators.ts","Component/PhotoField/PhotoField.tsx","Hooks/UseFileConverter.ts","Hooks/UseFetch.ts","Services/Actions/UserActions.ts","Services/Actions/PageActions.ts","Component/Formik/FormikRadio.tsx","Component/Mask/MaskedPhoneNumber.tsx","Hooks/UseInterval.ts","Services/Api/UserApi.ts","Services/Api/StudentApi.ts","Services/Actions/StudentActions.ts","Component/Formik/FormikInputField.tsx","Helpers/helperErrorMessage.ts","Views/LoginPortal/styles.ts","Views/LoginPortal/LoginPortal.tsx","Helpers/importImagesFromFolder.ts","Views/LoginPortal/FieldPassword.tsx","Views/LoginPortal/FieldUsername.tsx","Helpers/AppConfig.ts","Views/RegisterStudentViews/RegisterStudentView.tsx","Views/RegisterStudentViews/styles.ts","Component/LoadingButton/styles.ts","Component/LoadingButton/index.tsx","Assets/Images/Login sync /.(png|jpg|jpe?g|svg|gif)$","Assets/Images/Login/background.jpg","Assets/Images/Login/background2.jpg","Assets/Images/Login/mohammad-shahhosseini-cPWUODAvXjk-unsplash.jpg","Assets/Images/Login/neonbrand-zFSo6bnZJTw-unsplash.jpg","Assets/Images/Login/step1.jpg","Assets/Images/Login/step2.jpg","Component/SuccessDialog.tsx","Component/PageLoader.tsx","Component/PagePrompt.tsx","Component/PageSnackbar.tsx","Hooks/UseDebounce.ts","Component/CustomAvatar.tsx","Component/Formik/FormikAutocomplete.tsx","Component/Formik/FormikSelect.tsx","Hooks/UseScheduleGenerator.ts","Services/Api/CourseApi.ts","Services/Api/ClassSessionApi.ts","Services/Api/ClassApi.ts","Services/Actions/ClassActions.ts","Component/InfoDialog.tsx","Views/AdminViews/AdminClassView/AddClassAdminView.tsx","Hooks/UseTimeSlot.ts","Component/DataTableSearch.tsx","Component/DataTableSort.tsx","Component/IconButtonPopper/IconButtonPopper.tsx","Component/LinearLoadingProgress.tsx","Hooks/useFilter.ts","Styles/GlobalStyles.ts","Views/AdminViews/AdminClassView/DataTableClassAdminView.tsx","Views/AdminViews/AdminCourseView/AddCourseAdminView.tsx","Services/Actions/CourseActions.ts","Hooks/UseDateParser.ts","Views/AdminViews/AdminCourseView/DataTableCourseAdminView.tsx","Views/AdminViews/AdminDashboardView/DashboardAdminView.tsx","Views/AdminViews/AdminStudentView/DatatableStudentAdminView.tsx","Services/Api/TutorApi.ts","ValidationSchema/AddAdminTutorSchema.ts","Views/AdminViews/AdminTutorView/AddAdminTutorView.tsx","Services/Actions/TutorActions.ts","Views/AdminViews/AdminTutorView/DataTableAdminTutorView.tsx","Services/Api/AdminApi.ts","Views/AdminViews/CoAdminView/AddCoAdminView.tsx","Services/Actions/AdminActions.ts","Views/AdminViews/CoAdminView/DataTableCoAdminView.tsx","Services/Api/RoomApi.ts","Views/AdminViews/Room/AddRoomAdminView.tsx","Services/Actions/RoomActions.ts","Views/AdminViews/Room/DataTableRoomAdminView.tsx","Routes/AdminRoutes.tsx","Component/CustomTabs.tsx","Component/FormDialog/FormDialog.tsx","Services/Api/ClassSessionTaskApi.ts","Services/Actions/ClassSessionTaskActions.ts","Component/HookForm/DateFieldHookForm.tsx","Component/HookForm/TextFieldHookForm.tsx","Views/SharedViews/Tasks/EditTaskDialog.tsx","Views/SharedViews/Tasks/EditQues.tsx","Views/SharedViews/Tasks/ManageTaskQuesView.tsx","Views/SharedViews/Tasks/ViewSubmissionDialog.tsx","Views/SharedViews/Tasks/ManageTaskSubmit.tsx","Views/SharedViews/Tasks/ManageTaskView.tsx","Routes/Layout/Body.tsx","Component/Message/styles.ts","Component/Message/Message.tsx","Component/Notification/styles.ts","Component/Notification/Notification.tsx","Component/PageLinks.tsx","Component/TaskMenu/styles.ts","Component/TaskMenu/TaskMenu.tsx","Component/UserProfile/styles.ts","Component/UserProfile/UserProfile.tsx","Routes/Layout/Header.tsx","Component/NavLinks/NavSidebarDropDown.tsx","Routes/Layout/MobileSidebar.tsx","Routes/Layout/Layout.tsx","Component/MiniCalendar/MiniCalendar.tsx","Views/TutorViews/styles.ts","Services/Actions/ClassSessionActions.ts","Views/TutorViews/CalendarTutorView.tsx","Views/TutorViews/ClassTutorViews/DataClassTutorView.tsx","Services/Api/ClassStudentApi.ts","Services/Actions/ClassStudentActions.ts","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionVideoConf.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/DialogSessionEnd.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionDtls.tsx","Styles/MaterialStyles/StyledBadge.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionTabs.tsx","Views/TutorViews/ManageClassTutorViews/styles.ts","Views/TutorViews/ManageClassTutorViews/ManageClassSession/DialogAddTask.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionTasks.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSelectedSessionTutorView.tsx","Component/LinkTabs.tsx","Component/FileViewer.tsx","Helpers/convertObjectToFormData.ts","Services/Api/ClassMaterialApi.ts","Services/Actions/ClassMaterialActions.ts","Views/TutorViews/ManageClassTutorViews/ManageClassMaterialTutorView.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSessionTutorView.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassStudentTutorView.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassTaskTutorView.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassTutorView.tsx","Routes/TutorRoutes.tsx","Component/PageSuccessPrompt.tsx","Views/StudentViews/ClassStudentView/DataTableClassStudentView.tsx","Views/StudentViews/HomeStudentView/styles.ts","Views/StudentViews/HomeStudentView/HomeStudentView.tsx","Views/StudentViews/TutorRatingStudentView/TutorRatingStudentView.tsx","Routes/StudentRoutes.tsx","Routes/Routes.tsx","Services/Reducers/UserReducer.ts","Services/Reducers/PageReducer.ts","Services/Reducers/TutorReducer.ts","Services/Reducers/CourseReducer.ts","Services/Reducers/RoomReducer.ts","Services/Reducers/AdminReducer.ts","Services/Reducers/ClassReducer.ts","Services/Reducers/StudentReducer.ts","Services/Reducers/ClassSessionReducer.ts","Services/Reducers/ClassStudentReducer.ts","Services/Reducers/ClassMaterialReducer.ts","Services/Reducers/ClassSessionTaskReducer.ts","Services/Reducers/RootReducer.ts","Services/Store.ts","Theme/MuiTheme.tsx","App.tsx","index.tsx"],"names":["DbTutorPositions","DbCourseDurations","id","label","DbClassTypes","DbGradeLevels","DbAdminPositions","module","exports","validateEmail","validateMobile","validateUsernameLength","validateUsernameAllowedChar","validateUsernameBeginChar","validateUsernameEndChar","validateUsername","yup","required","matches","validatePassword","PhotoField","memo","selectedFile","handleChange","name","height","width","variant","useState","preview","setPreview","onSelectFile","useCallback","e","a","target","files","length","undefined","useEffect","objectUrl","URL","createObjectURL","revokeObjectURL","style","fontSize","fontWeight","color","marginBottom","StyledImageField","overlap","anchorOrigin","vertical","horizontal","badgeContent","title","className","backgroundColor","border","htmlFor","component","onChange","type","accept","src","boxShadow","display","justifyContent","textAlign","styled","Badge","fileToBase64","blob","Promise","resolve","reject","reader","FileReader","readAsBinaryString","onload","result","btoa","onerror","error","Axios","axios","create","PostFetch","endpoint","data","post","API_BASE_URL","headers","Authorization","getAccessToken","serverResponse","success","message","PostFileFetch","form_data","isRefreshing","refreshSubscribers","interceptors","response","use","config","status","originalRequest","removeToken","window","location","href","refresh_token","getRefreshToken","method","url","qs","stringify","grant_type","then","setTokens","access_token","onRrefreshed","catch","err","alert","subscribeTokenRefresh","token","cb","push","map","SetCurrentUserAction","dispatch","isLoading","CurrentUserApi","user","user_type","pathname","setGeneralPrompt","promptSettings","page_prompt","resetGeneralPrompt","open","custom_title","custom_subtitle","continue_callback","close_callback","setPageLinks","links","page_links","setSnackbar","msg","page_snackbar","options","setPageSuccessPromptAction","payload","page_success_prompt","FormikRadio","useField","field","meta","errorText","touched","transform","transformOrigin","aria-label","value","gridAutoFlow","alignItems","alignContent","marginTop","option","index","key","control","size","MaskedPhoneNumber","props","inputRef","other","ref","inputElement","placeholder","mask","showMask","guide","UseInterval","callbackFunc","delay","savedCallback","useRef","current","setInterval","clearInterval","API_DEFAULT_ROUTE","console","log","LoginApi","getStudentDataTableApi","BASE_URL","addStudentApi","getSingleStudentApi","admin_pk","setStudentDataTableApi","fetching_student_data_table","StudentApi","student_data_table","addStudentAction","onSuccess","page_loading","loading_message","show","toString","helperErrorMessage","FormikInputField","helperText","onError","errors","forEach","LoginStyles","Paper","theme","breakpoints","values","xs","md","p","palette","main","StyledImageBackground","div","authFormValues","username","password","images","importImagesFromFolder","require","LoginPortal","useTheme","useDispatch","currentBackground","setCurrentBackground","showPassword","setShowPassword","isAuthenticating","setIsAuthenticating","authError","setAuthError","history","useHistory","prev","handleTogglePassword","prevState","handleSubmit","formikHelpers","localStorage","setItem","APP_NAME","JSON","resetForm","gridArea","imgSrc","clsx","active","app_logo","alt","process","initialValues","onSubmit","loading","fullWidth","disableElevation","onClick","keys","FieldPassword","startAdornment","position","endAdornment","labelWidth","FieldUsername","autoFocus","temp_storage","getItem","parse","acess_token","removeItem","initFormValues","firstname","middlename","lastname","suffix","grade","gender","email","mob_no","picture","confirm_password","formSchema","max","nullable","moreThan","lessThan","complete_address","test","this","parent","RegisterSTudentView","formRef","successDialog","setSuccessDialog","pic","setPic","handleSetPic","logo","handleFormSubmit","formHelpers","validationSchema","innerRef","setFieldValue","setValues","container","spacing","justify","item","InputLabelProps","shrink","select","val","InputProps","inputComponent","multiline","rows","padding","StyledRegisterStudentView","StyledLoadingButton","LoadingButton","disabled","handleClick","children","Button","CircularProgress","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","Object","Transition","React","forwardRef","direction","SuccessDialog","StyledSuccessDialog","scroll","disableBackdropClick","disableEscapeKeyDown","TransitionComponent","PaperProps","margin","borderRadius","overflowY","justifyItems","gutterBottom","Dialog","PageLoader","useSelector","state","PageReducer","Backdrop","zIndex","modal","gridGap","Typography","PagePrompt","handleContinue","handleCancel","StyledPagePrompt","onEscapeKeyDown","DialogTitle","Avatar","DialogContent","paragraph","DialogActions","startIcon","PageSnackbar","enqueueSnackbar","useSnackbar","mounted","useDebounce","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","CustomAvatar","errorMessage","widthSpacing","heightSpacing","textTransform","letterSpacing","FormikAutocomplete","optKeyId","optKeyLabel","inputFieldName","selectFieldName","endPoint","other_payload","setOptions","inputField","inputMeta","inputArgs","setLoading","selectField","selectArgs","debouncedSearchTerm","fetchData","setValue","Autocomplete","filterSelectedOptions","loadingText","getOptionLabel","renderOption","charAt","event","newValue","inputValue","onInputChange","newInputValue","filterOptions","renderInput","params","TextField","FormikSelect","hasEmptyValue","MenuItem","ind","moment","extendMoment","Moment","getCourseDataTableApi","addCourseApi","updateCourseApi","getSingleCourseApi","course_pk","getCourseDurationApi","searchCourseApi","search","getClassSessionsApi","class_pk","getSingleClassSession","session_pk","startClassSessionApi","endClassSessionApi","getTutorFutureSessionsApi","tutor_pk","getTutorClassSessionCalendarApi","getStatsSessionCalendarApi","getAllMessage","saveMessage","hideMessage","getClassDataTableApi","getStudentEnrolledClassesApi","getStudentUnenrolledClassTableApi","getTutorClassTableApi","addClassApi","updateClassApi","approveClassApi","getSingleClassApi","setStudentEnrolledClassTable","fetch_student_enrolled_class_table","ClassApi","student_enrolled_class_table","setSelectedClassAction","fetching_selected_class","selected_class","approveClassAction","InfoDialog","handleSetOpen","class_desc","course_desc","course_duration","room_pk","room_desc","class_type","tutor_name","start_date","start_time","end_time","session_count","class_sessions","min","GetCourseDuration","useFormikContext","CourseApi","est_duration","fetchCourseDuration","GetTutorFutureSessions","handleSetTutorFutureSessions","ClassSessionApi","fetching","AddClassAdminView","reschedProps","setReschedProps","tutorFutureSession","setTutorFutureSessions","sessions","form_values","openTutorFutureSched","setOpenTutorFutureSched","handleSetOpenTutorFutureSched","link","Container","maxWidth","validateOnChange","validateOnBlur","submitCount","Grid","Tooltip","IconButton","v","i","Chip","Date","format","utils","DateFnsUtils","date","animateYearScrolling","disablePast","inputVariant","autoOk","ts","minutes","time_slots","initial_time","end","add","isSameOrBefore","isBefore","generateTimeSlot","session","schedulePayload","blocked_dates","counter","dates","temp_start_date","isoWeekday","conflict","bd","new_date_range","range","blocked_date_range","subtract","overlaps","toDate","generateDailyWeekDaysDates","render","arrayHelpers","onDelete","resched_date","dup","some","d","isSame","remove","onClose","opacity","handleReset","DataTableSearch","searchField","handleSetSearchField","minWidth","FormControl","OutlinedInput","InputAdornment","DataTableSort","selectedSortIndex","handleChagenSelectedSortIndex","initialTableSort","SelectProps","disableUnderline","sort","IconButtonPopper","buttonColor","iconColor","buttons","anchorEl","setAnchorEl","handleClose","Boolean","aria-describedby","currentTarget","Popover","PopperContent","btn","Icon","text","LinearLoadingProgress","LinearProgress","useFilter","defaultSearch","initialLimit","tableSearch","setTableSearch","setSearchField","tableLimit","setTableLimit","tablePage","setTablePage","tableCount","setTableCount","setSelectedSortIndex","activeSort","setActiveSort","handleSetTableSearch","newState","handleSetLimit","newLimit","handleSetPage","newPage","handleChangePage","newCount","page","handleChangeRowsPerPage","parseInt","foundSortItem","generateSearchFilters","StyledBox","StyledClassContainer","StyledDashboardItem","StyledOpenClasses","StyledEnrolledClass","StyledSessionTutorView","initialSearch","column","DataTableClassAdminView","table_loading","store","ClassReducer","fetching_class_data_table","data_table","class_data_table","table","begin","limit","filters","fetchTableData","to","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","preventDefault","gridTemplateColumns","closed_sessions","gridAutoColumns","sts_desc","sts_bgcolor","sts_color","sts_pk","notes","AddCourseAdminView","formValues","lg","InvalidDateToDefault","defaultString","toLowerCase","parseTimeOrDefault","time","moment_time","isValid","parseDateTimeOrDefault","tableColumns","align","DataTableCourseAdminView","CourseReducer","fetching_course_data_table","course_data_table","overflowX","TableContainer","minHeight","Table","stickyHeader","TableHead","TableRow","col","TableCell","TableBody","colSpan","row","whiteSpace","overflow","textOverflow","is_active","encoded_at","DashboardAdminView","wordSpacing","maxHeight","ResponsiveContainer","BarChart","top","right","left","bottom","barGap","uv","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","interval","textAnchor","Label","offset","YAxis","domain","ticks","Bar","fill","LabelList","DataTableStudentAdminView","StudentReducer","student_pk","getTutorDataTableApi","addTutorApi","getDummyTutorsApi","insertDummyTutorRatingsApi","birth_date","initialFormValues","prefix","bio","AddAdminTutorView","AddAdminTutorSchema","sm","disableFuture","DataTableAdminTutorView","TutorReducer","fetching_tutor_data_table","tutor_table","tutor_data_table","getAdminDataTableApi","addAdminApi","AddCoAdminView","DataTableCoAdminView","AdminReducer","fetching_admin_data_table","admin_data_table","getRoomDataTableApi","addRoomApi","updateRoomApi","getSingleRoomApi","searchRoomApi","AddRoomAdminView","RoomApi","DataTableRoomAdminView","RoomReducer","fetching_room_data_table","room_data_table","SysAdminRoutes","path","exact","CustomTab","tabs","desktop","useMediaQuery","up","StyledCustomTabs","Tabs","orientation","indicatorColor","textColor","borderRight","divider","borderBottom","Tab","RenderComponent","FormDialog","body","actions","fullScreen","descriptionElementRef","mobile","down","radResultNo","useParams","descriptionElement","focus","DialogTitleStyle","disableTypography","DialogContentStyle","DialogActionsStyle","primary","light","contrastText","common","white","getAllClassTask","getSingleClassTask","class_task_pk","addClassTask","updateClassTask","toggleSubmitClassTask","changeStatusClassTask","getAllClassTaskQues","getSingleClassTaskQues","task_ques_pk","updateClassTaskQues","getAllClassTaskSub","getAllStudentsSubmit","addClassTaskSub","updateTaskSub","fetch_all_class_task","ClassSessionTaskApi","all_class_task","toNull","single_class_task","fetch_single_class_task","fetch_all_class_task_ques","all_class_task_ques","fetch_all_class_task_sub","all_class_task_sub","fetch_all_student_submit","all_student_submit","DateFieldHookForm","useFormContext","error_message","hasOwnProperty","defaultValue","onBlur","disableToolbar","TextFieldHookForm","getValues","invalid","isTouched","isDirty","validate_task","Yup","task_title","task_desc","due_date","EditTaskDialog","task","handleSetOpenEditTask","form_edit_task","useForm","resolver","yupResolver","mode","defaultValues","handleSubmitFormTask","ClassSessionTaskActions","reset","noValidate","form","validate_task_ques","question","cor_answer","pnt","EditQues","task_ques","handleSetOpenEditQues","form_edit_task_ques","ManageTaskQuesView","ClassSessionTaskReducer","UserReducer","open_edit_ques","set_open_edit_ques","selected_task_ques","set_selected_task_ques","q","StudentQuestion","questions","useFieldArray","fields","append","prepend","swap","move","insert","ViewSubmissionDialog","selected_submission","handleViewSubmitDtls","element","is_correct","task_sub_pk","Checkbox","checked","answer","ManageTaskSubmit","view_submit_dtls","set_view_submit_dtls","selected_submit","set_selected_submit","s","student","answered_at","ManageTaskView","md_screen","open_edit_task","set_open_edit_task","set_tabls","allow_submit","status_dtls","Body","isOpenMobileHeader","StyledBody","header","StyledMessage","StyledMessagePopOver","Message","showZero","StyledNotification","StyledNotificationPopOver","Notification","PageLinks","StyledPageLinks","Breadcrumbs","AppBar","StyledTaskMenu","StyledTaskMenuPopOver","TaskMenu","StyledUserProfile","StyledPopOverContent","UserProfile","ProfileLink","handleLogout","fullname","Header","PageNavLinks","handleToggleHeader","handleToggleSidebar","isOpenMobileSidebar","StyledHeader","nav","activeClassName","sidebar","StyledNavSidebarDropdown","NavSidebarDropDown","isActive","navLinks","setOpen","Collapse","in","MobileSidebar","handleCloseMobileSidebar","StyledMobileSidebar","hasSubLinks","includes","parentKey","Drawer","generateNavLinks","Layout","reducers","setIsOpenMobileHeader","prevHeader","setIsOpenMobileSidebar","prevSidebar","MiniCalendar","StyledCalendarTutorView","setSingleClassSession","fetch_single_class_session","single_class_session","CalendarTutorView","calendarComponentRef","stats_class_session","ClassSessionReducer","fetch_stats_class_session","tutor_class_sessions","fetch_tutor_class_sessions","calEvents","setCalEvents","reloadEvents","setReloadEvents","month","getMonth","year","getFullYear","calendarEventParams","setCalendarEventParams","calendarTitle","setCalendarTitle","currentSelectedCalDate","setCurrentSelectedCalDate","handleSetCurrentSelectedCalDate","new_date","calendarApi","getApi","gotoDate","view","today","handleReloadEvents","settingPageLinks","events","sched","start","extendedProps","loadEvents","selected","onMonthChange","onYearChange","peekNextMonth","showMonthDropdown","showYearDropdown","fixedHeight","dropdownMode","inline","for_approval","approved","started","closed","seachText","schedulerLicenseKey","initialView","plugins","resourceTimeGridPlugin","resourceTimelinePlugin","dayGridPlugin","interactionPlugin","headerToolbar","eventMinHeight","dayMaxEventRows","stickyHeaderDates","stickyFooterScrollbar","aspectRatio","eventClick","arg","allDaySlot","selectable","eventContent","borderColor","timeText","DataClassTutorView","fetch_tutor_class_table","tutor_class_table","reloadTutorClassTable","setReloadTutorClassTable","handleApproveClass","load","action_buttons","setTblClassStudentsApi","enrollClassStudent","joinStudentToClassApi","blockClassStudentApi","class_stud_pk","reEnrollClassStudentApi","fetch_tbl_class_students","ClassStudentApi","tbl_class_students","SessionVideoConf","hash_pk","roomName","displayName","containerStyles","loadingComponent","errorComponent","configOverwrite","enableWelcomePage","prejoinPageEnabled","disableLogCollector","defaultLogLevel","onJitsi","loggerConfigOverwrite","interfaceConfigOverwrite","DISPLAY_WELCOME_FOOTER","GENERATE_ROOMNAMES_ON_WELCOME_PAGE","HIDE_INVITE_MORE_HEADER","HIDE_DEEP_LINKING_LOGO","SHOW_JITSI_WATERMARK","SHOW_WATERMARK_FOR_GUESTS","TOOLBAR_BUTTONS","allow","remarks","DialogSessionEnd","formMethods","endClassSessionAction","SessionDtls","open_dialog_end","set_open_dialog_end","ellapsed_time","set_ellapsed_time","handleSetDialogEnd","handleChangeEllapseTime","began","ended","ellapse","duration","diff","hours","seconds","startClassSessionAction","StyledBadge","withStyles","createStyles","badge","background","paper","animation","content","SessionTabs","socketRef","messagesEndRef","active_tab","set_active_tab","active_students","set_active_students","message_body","set_message_body","message_table","set_message_table","reload_messages","set_reload_messages","ClassStudentReducer","handleSetMessageBody","handleSubmitMessage","msg_body","emit","io","query","on","users","disconnect","reloadMessages","scrollIntoView","findIndex","stud","user_pk","student_details","user_id","sent_at","rowsMax","onKeyDown","shiftKey","ManageClassSelectedSessionTutorStyle","validate_add_task","DialogAddTask","form_create_task","open_add_ques","set_open_add_ques","set_questions","handleSetOpenAddQuest","form_add_task","handleSubmitFormAddTask","splice","SessionTasks","open_add_task","set_open_add_task","handleSetOpenAddTask","t","justifySelf","ManageClassSelectedSessionTutorView","ClassStudentActions","LinkTabs","RenderSwitchComponent","StyledLinkTabs","FileViwer","file","viewer","WebViewer","initialDoc","isReadOnly","instance","docViewer","FormData","getTblClassMaterialApi","addClassMaterialApi","deleteClassMaterialApi","mat_pk","fetch_class_material","ClassMaterialApi","tbl_class_materials","ManageClassMaterialTutorView","selectedMaterial","setSelectedMaterial","ClassMaterialReducer","openEnrollStudentModel","setOpenEnrollStudentModel","ClassMaterialActions","material","descrip","convertObjectToFormData","ManageClassSessionTutorView","fetch_class_sessions","getClassSessionsAction","parseDateAndDayOfWeekOrDefault","ManageClassStudentTutorView","student_name","ManageClassTaskTutorView","ManageClassTutorView","TutorRoutes","strict","Slide","PageSuccessPrompt","b","DataTableClassStudentView","fetch_student_unenrolled_class_table","student_unenrolled_class_table","enrolled_courses_table","fetch_enrolled_courses_table","refetchUnenrolledClasses","setRefetchUnenrolledClasses","course_pic","tutor_pic","c","is_ongoing","StyledHomeStudent","HomeStudentView","TutorRatingStudentView","rateTutors","setRateTutors","steps","setSteps","fetch_dummy_tutors","rated_tutor","StyledTutorRatingStudentView","Rating","rating","prevTutor","temp","foundTutor","k","step","insertDummyTutorRatingsAction","StudentRoutes","Routes","getUserInfo","defaultState","userLoading","action","reload_single_tutor","reload_tutor_paging","fetching_single_tutor","single_tutor","fetching_selected_course","selected_course","fetching_selected_room","selected_room","fetching_selected_admin","selected_admin","fetching_selected_student","selected_student","single_class_task_ques","fetch_single_class_task_ques","RootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","createMuiTheme","secondary","typography","button","fontFamily","join","responsiveFontSizes","App","notistackRef","createRef","maxSnack","dense","hideIconVariant","closeSnackbar","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4fe56ba3.chunk.js","sourcesContent":["export const DbTutorPositions = [\r\n  \"Tutor\",\r\n  \"Mentor\",\r\n  \"Professor\",\r\n  \"Teacher\",\r\n  \"Others\",\r\n];\r\n\r\nexport const DbCourseDurations = [\r\n  {\r\n    id: 30,\r\n    label: `30m`,\r\n  },\r\n  {\r\n    id: 60,\r\n    label: `60m | 1hr`,\r\n  },\r\n  {\r\n    id: 90,\r\n    label: `90m | 1hr & 30min`,\r\n  },\r\n  {\r\n    id: 120,\r\n    label: `120m | 2hrs`,\r\n  },\r\n  {\r\n    id: 150,\r\n    label: `150m | 2hrs & 30min`,\r\n  },\r\n  {\r\n    id: 180,\r\n    label: `180m | 3hrs`,\r\n  },\r\n  {\r\n    id: 210,\r\n    label: `210m | 3hrs 30min`,\r\n  },\r\n  {\r\n    id: 240,\r\n    label: `240m | 4hrs`,\r\n  },\r\n];\r\n\r\nexport const DbClassTypes = [\r\n  {\r\n    id: \"o\",\r\n    label: \"online\",\r\n  },\r\n  {\r\n    id: \"f\",\r\n    label: `face to face`,\r\n  },\r\n];\r\n\r\nexport const DbGradeLevels = [\r\n  {\r\n    id: 7,\r\n    label: \"Grade 7\",\r\n  },\r\n  {\r\n    id: 8,\r\n    label: \"Grade 8\",\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"Grade 9\",\r\n  },\r\n  {\r\n    id: 10,\r\n    label: \"Grade 10\",\r\n  },\r\n  {\r\n    id: 11,\r\n    label: \"Grade 11\",\r\n  },\r\n  {\r\n    id: 12,\r\n    label: \"Grade 12\",\r\n  },\r\n];\r\n\r\n// export const DbClassTypes = [\r\n//   {\r\n//     id: \"o\",\r\n//     label: \"online\",\r\n//   },\r\n//   {\r\n//     id: \"f\",\r\n//     label: `face to face`,\r\n//   },\r\n// ];\r\n\r\nexport const DbAdminPositions = [\"IT\", \"QMO\", \"HR\", \"Others\"];\r\n","module.exports = __webpack_public_path__ + \"static/media/app_logo.c76c6f3b.png\";","import * as yup from \"yup\";\r\n\r\nexport const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// export const validateMobile = /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/;\r\nexport const validateMobile = /^(\\+639)\\d{9}$/;\r\n\r\nexport const validateUsernameLength = /^(?=.{8,20}$)/;\r\nexport const validateUsernameAllowedChar = /[a-zA-Z0-9._]/;\r\nexport const validateUsernameBeginChar = /(?![_.])/;\r\nexport const validateUsernameEndChar = /(?<![_.])/;\r\n\r\nexport const validateUsername = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      validateUsernameBeginChar,\r\n      `${label} must not begin special characters period(.) or underscore(_)`\r\n    )\r\n    .matches(\r\n      validateUsernameAllowedChar,\r\n      `${label} must not contain special characters except (._)`\r\n    )\r\n    .matches(\r\n      validateUsernameLength,\r\n      `${label} must be 8 characters short and 20 characters long`\r\n    )\r\n    .matches(\r\n      validateUsernameEndChar,\r\n      `${label} must not end special characters period(.) or underscore(_)`\r\n    );\r\n\r\n  return validatedUsername;\r\n};\r\n\r\nexport const validatePassword = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&_*]{6,25}$/,\r\n      `${label} must be 6 to 25 characters long with numbers and special characters`\r\n    );\r\n  return validatedUsername;\r\n};\r\n","import { Avatar, Badge, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport ImageSearchIcon from \"@material-ui/icons/ImageSearch\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IPhotoField {\r\n  selectedFile: File | null;\r\n  handleChange: (e: File | null) => any;\r\n  name?: string;\r\n  label?: string;\r\n  height?: number;\r\n  width?: number;\r\n  variant?: any;\r\n}\r\n\r\nconst PhotoField: React.FC<IPhotoField> = memo(\r\n  ({ selectedFile, handleChange, name, label, height, width, variant }) => {\r\n    const [preview, setPreview] = useState<any>(null);\r\n\r\n    const onSelectFile = useCallback(\r\n      async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n          handleChange(undefined);\r\n          return;\r\n        }\r\n\r\n        if (e.target.files[0]) {\r\n          handleChange(e.target.files[0]);\r\n        }\r\n      },\r\n      [handleChange]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!selectedFile) {\r\n        setPreview(null);\r\n        return;\r\n      }\r\n\r\n      const objectUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(objectUrl);\r\n\r\n      return () => URL.revokeObjectURL(objectUrl);\r\n    }, [selectedFile]);\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            fontSize: \".78em\",\r\n            fontWeight: 400,\r\n            color: \"rgba(0,0,0,.7)\",\r\n            marginBottom: \"1em\",\r\n          }}\r\n        >\r\n          {label}\r\n        </div>\r\n\r\n        <StyledImageField\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          badgeContent={\r\n            <Tooltip title=\"Select a photo\">\r\n              <div className=\"btn-search-photo\">\r\n                <IconButton\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#e3f2fd\",\r\n                    border: `.01em solid #90caf9`,\r\n                  }}\r\n                  htmlFor={name}\r\n                  component=\"label\"\r\n                >\r\n                  <ImageSearchIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <input\r\n                  id={name}\r\n                  className=\"fileInput\"\r\n                  onChange={onSelectFile}\r\n                  type=\"file\"\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Avatar\r\n            src={preview}\r\n            style={{\r\n              height: height,\r\n              width: width,\r\n              backgroundColor: \"#fff\",\r\n              boxShadow: `0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n              0 2px 4px -1px rgba(0, 0, 0, 0.06)`,\r\n              border: \".01em solid rgba(0,0,0,.1)\",\r\n            }}\r\n            variant={variant ? variant : \"circle\"}\r\n          >\r\n            {!preview && (\r\n              <div\r\n                style={{\r\n                  display: \"grid\",\r\n                  justifyContent: \"center\",\r\n                  textAlign: \"center\",\r\n                  color: `rgba(0,0,0,.6)`,\r\n                  fontWeight: 600,\r\n                  fontSize: `.87em`,\r\n                }}\r\n              >\r\n                Upload an image\r\n              </div>\r\n            )}\r\n          </Avatar>\r\n        </StyledImageField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PhotoField;\r\n\r\nexport const StyledImageField = styled(Badge)`\r\n  .btn-search-photo {\r\n    display: grid;\r\n    grid-template-areas: \"content\";\r\n    .btn {\r\n      grid-area: content;\r\n    }\r\n    .fileInput {\r\n      grid-area: content;\r\n      display: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n","export const fileToBase64 = (blob: Blob): Promise<string | null> =>\r\n  new Promise((resolve, reject) => {\r\n    if (!blob) {\r\n      return resolve(null);\r\n    }\r\n    const reader: FileReader = new FileReader();\r\n    reader.readAsBinaryString(blob);\r\n\r\n    reader.onload = () => {\r\n      if (typeof reader.result === \"string\") {\r\n        return resolve(btoa(reader.result));\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error: any) => {\r\n      return resolve(null);\r\n    };\r\n  });\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport qs from \"qs\";\r\nimport {\r\n  API_BASE_URL,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  removeToken,\r\n  setTokens,\r\n} from \"../Helpers/AppConfig\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\n\r\nexport const Axios: AxiosInstance = axios.create();\r\n\r\nexport const GetFetch = async (endpoint: string): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.get(\r\n      API_BASE_URL + endpoint,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nexport const PostFetch = async (\r\n  endpoint: string,\r\n  data: any\r\n): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.post(\r\n      API_BASE_URL + endpoint,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nexport const PostFileFetch = async (\r\n  endpoint: string,\r\n  form_data: FormData\r\n): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.post(\r\n      API_BASE_URL + endpoint,\r\n      form_data,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers: Array<any> = [];\r\n\r\nAxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const {\r\n      config,\r\n      response: { status },\r\n    } = error;\r\n    const originalRequest = config;\r\n\r\n    if (status === 409) {\r\n      removeToken();\r\n      window.location.href = \"/login\";\r\n    }\r\n\r\n    if (status === 401) {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n\r\n        const refresh_token = getRefreshToken();\r\n\r\n        if (refresh_token) {\r\n          axios({\r\n            method: \"post\",\r\n            url: API_BASE_URL + `api/token`,\r\n            data: qs.stringify({\r\n              grant_type: \"refresh_token\",\r\n              refresh_token: refresh_token,\r\n            }),\r\n            headers: {\r\n              \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              setTokens(\r\n                response.data.access_token,\r\n                response.data.refresh_token\r\n              );\r\n\r\n              isRefreshing = false;\r\n              onRrefreshed(response.data.access_token);\r\n              refreshSubscribers = [];\r\n            })\r\n            .catch((err) => {\r\n              removeToken();\r\n              alert(\r\n                `Ops, it seems that your session is no longer valid. Please login again.`\r\n              );\r\n              window.location.href = \"/login\";\r\n            });\r\n        } else {\r\n          window.location.href = \"/login\";\r\n        }\r\n      }\r\n\r\n      const retryOrigReq = new Promise((resolve, reject) => {\r\n        subscribeTokenRefresh((token: any) => {\r\n          originalRequest.headers[\"Authorization\"] = \"Bearer \" + token;\r\n          resolve(axios(originalRequest));\r\n        });\r\n      });\r\n      return retryOrigReq;\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst subscribeTokenRefresh = (cb: any) => {\r\n  refreshSubscribers.push(cb);\r\n};\r\n\r\nconst onRrefreshed = (token: string) => {\r\n  refreshSubscribers.map((cb) => cb(token));\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport { CurrentUserApi } from \"../Api/UserApi\";\r\nimport IUserAuthenticate from \"../Interface/IAuth\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserActionTypes } from \"../Reducers/UserReducer\";\r\n\r\ninterface IActionAuthenticateUser {\r\n  user: IUserAuthenticate;\r\n  resetForm: () => void;\r\n}\r\n\r\nexport const SetCurrentUserAction = () => async (\r\n  dispatch: Dispatch<UserActionTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_LOADING_USER\",\r\n      isLoading: true,\r\n    });\r\n    const response: IServerResponse = await CurrentUserApi();\r\n    dispatch({\r\n      type: \"SET_LOADING_USER\",\r\n      isLoading: false,\r\n    });\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_CURRENT_USER\",\r\n        user: response.data,\r\n      });\r\n\r\n      const user_type = response?.data?.user_type;\r\n      if (\r\n        window.location.pathname === \"/login\" ||\r\n        window.location.pathname === \"/\"\r\n      ) {\r\n        if (user_type === \"admin\") {\r\n          window.location.href = \"/admin/calendar\";\r\n        } else if (user_type === \"tutor\") {\r\n          window.location.href = \"/tutor/home\";\r\n        } else if (user_type === \"student\") {\r\n          window.location.href = \"/student/home\";\r\n        }\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/login\") {\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n  } catch (error) {}\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  PagePromptTypes,\r\n  PageReducerTypes,\r\n  PageLoadingTypes,\r\n  PageLinkTypes,\r\n  PageSuccessPromptTypes,\r\n} from \"../Types/PageTypes\";\r\n\r\nexport const setGeneralPrompt = (promptSettings: PagePromptTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: promptSettings,\r\n  });\r\n};\r\n\r\nexport const resetGeneralPrompt = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: {\r\n      open: false,\r\n      custom_title: null,\r\n      custom_subtitle: null,\r\n      continue_callback: null,\r\n      close_callback: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const showPageLoading = (loadingSetting: PageLoadingTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  const { loading_message } = loadingSetting;\r\n\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: true,\r\n      loading_message: loading_message\r\n        ? loading_message\r\n        : \"We are processing your request, thank you for your patience.\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const closePageLoading = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: false,\r\n      loading_message: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageLinks = (links: Array<PageLinkTypes>) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LINKS\",\r\n    page_links: links,\r\n  });\r\n};\r\n\r\nexport const setSnackbar = (\r\n  msg: string,\r\n  type: \"error\" | \"success\" | \"warning\"\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SNACKBAR\",\r\n    page_snackbar: {\r\n      message: msg,\r\n      options: {\r\n        variant: type,\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageSuccessPromptAction = (\r\n  payload: PageSuccessPromptTypes\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SUCCESS_PROMPT\",\r\n    page_success_prompt: payload,\r\n  });\r\n};\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormControlProps,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface IOptions {\r\n  id: string | number;\r\n  label: string | number;\r\n}\r\n\r\ninterface IFormikRadio {\r\n  data: Array<IOptions>;\r\n  label: string;\r\n  name: string;\r\n  variant: \"vertical\" | \"horizontal\";\r\n  required?: boolean;\r\n}\r\n\r\nconst FormikRadio: React.FC<IFormikRadio> = memo(\r\n  ({ name, variant, label, data, required, ...props }) => {\r\n    const [field, meta] = useField(name);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n      <FormControl\r\n        required={required ? true : false}\r\n        error={!!errorText}\r\n        component=\"fieldset\"\r\n      >\r\n        <FormLabel\r\n          style={{\r\n            transform: \"translate(14px, -6px) scale(0.75)\",\r\n            transformOrigin: \" top left\",\r\n          }}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-label={name}\r\n          {...field}\r\n          value={field.value ? field.value : \"\"}\r\n          style={\r\n            variant === \"vertical\"\r\n              ? {\r\n                  display: \"grid\",\r\n                  gridAutoFlow: \"column\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  marginTop: `-5px`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          {data.map((option, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={option.id}\r\n              control={<Radio size=\"small\" color=\"primary\" />}\r\n              label={option.label}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n        <FormHelperText>{errorText}</FormHelperText>\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikRadio;\r\n","import React, { memo } from \"react\";\r\nimport MaskedInput from \"react-text-mask\";\r\n\r\nconst MaskedPhoneNumber = memo((props: any) => {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      placeholder={\"+639\"}\r\n      mask={[\r\n        \"+\",\r\n        \"6\",\r\n        \"3\",\r\n        \"9\",\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n      ]}\r\n      showMask\r\n      guide={false}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MaskedPhoneNumber;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst UseInterval = (callbackFunc: () => void, delay: number) => {\r\n  const savedCallback = useRef<() => void>();\r\n  useEffect(() => {\r\n    savedCallback.current = callbackFunc;\r\n  }, [callbackFunc]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (typeof savedCallback.current !== \"undefined\") {\r\n        savedCallback.current();\r\n      }\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n\r\nexport default UseInterval;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserLogin } from \"../Models/UserModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/users/`;\r\n\r\nexport const CurrentUserApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"currentUser\", null);\r\n  console.log(`repsonse`, response);\r\n  return response;\r\n};\r\n\r\nexport const LoginApi = async (\r\n  payload: UserLogin\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"login\", payload);\r\n  return response;\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { StudentModel } from \"../Models/StudentModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst BASE_URL = `api/student/`;\r\n\r\nconst getStudentDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getStudentDataTable\", payload);\r\n  return response;\r\n};\r\n\r\nconst addStudentApi = async (\r\n  payload: StudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"addStudent\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleStudentApi = async (\r\n  admin_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getSingleStudent\", {\r\n    admin_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getStudentDataTableApi,\r\n  addStudentApi,\r\n  getSingleStudentApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport StudentApi from \"../Api/StudentApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { StudentModel } from \"../Models/StudentModel\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { StudentReducerTypes } from \"../Types/StudentTypes\";\r\n\r\nexport const setStudentDataTableApi = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<StudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_student_data_table\",\r\n      fetching_student_data_table: true,\r\n    });\r\n    const response: IServerResponse = await StudentApi.getStudentDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_student_data_table\",\r\n      fetching_student_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_student_data_table\",\r\n        student_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedStudentAction = (student_pk: string) => async (\r\n  dispatch: Dispatch<StudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_student\",\r\n      fetching_selected_student: true,\r\n    });\r\n    const response: IServerResponse = await StudentApi.getSingleStudentApi(\r\n      student_pk\r\n    );\r\n    dispatch({\r\n      type: \"fetching_selected_student\",\r\n      fetching_selected_student: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_student\",\r\n        selected_student: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addStudentAction = (\r\n  payload: StudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.addStudentApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst FormikInputField = (props: TextFieldProps) => {\r\n  const [field, meta] = useField(\r\n    typeof props.name !== \"undefined\" ? props.name : \"\"\r\n  );\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      error={!!errorText}\r\n      helperText={errorText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikInputField;\r\n","import { Dispatch } from \"react\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\nimport { PageReducerTypes } from \"../Services/Types/PageTypes\";\r\n\r\nconst helperErrorMessage = (\r\n  dispatch: Dispatch<PageReducerTypes>,\r\n  response: IServerResponse,\r\n  onError?: () => any\r\n) => {\r\n  if (response.message && typeof response.message === \"string\") {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: response.message.toString(),\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  response?.errors?.forEach((err) => {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: ` ${err} `,\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  });\r\n  if (typeof onError === \"function\") {\r\n    onError();\r\n  }\r\n};\r\n\r\nexport default helperErrorMessage;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginStyles = styled(Paper)`\r\n  min-height: 100vh;\r\n  min-width: 100vw;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-areas: \"login\";\r\n  background: #314755;\r\n  background: linear-gradient(to left, #26a0da, #314755);\r\n\r\n  .login-container {\r\n    background-color: #fff;\r\n    align-self: center;\r\n    justify-self: center;\r\n    display: grid;\r\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.56);\r\n    z-index: 2;\r\n    /* grid-gap: 1em; */\r\n    border-radius: 7px !important;\r\n    overflow: hidden !important;\r\n    perspective: 1px;\r\n    overflow: hidden;\r\n    opacity: 0.9;\r\n\r\n    @media all and (min-width: ${(props) =>\r\n        props.theme.breakpoints.values.xs}px) {\r\n      grid-auto-columns: 1fr;\r\n      /* grid-auto-columns: 30em 25em; */\r\n      min-height: auto;\r\n      align-self: start;\r\n      /* justify-self: center; */\r\n\r\n      border-radius: unset;\r\n      grid-auto-flow: row;\r\n      grid-auto-rows: 13em 1fr;\r\n      margin-top: 2em;\r\n      margin-bottom: 2em;\r\n\r\n      .slider-ctnr {\r\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n\r\n    @media all and (min-width: ${(props) =>\r\n        props.theme.breakpoints.values.md}px) {\r\n      grid-auto-columns: 33em 25em;\r\n      grid-auto-flow: column !important;\r\n      grid-auto-rows: unset !important;\r\n      align-self: center !important;\r\n      min-height: unset !important;\r\n    }\r\n\r\n    .slider-ctnr {\r\n      display: grid;\r\n      grid-template-areas: \"slides\";\r\n\r\n      .slides {\r\n        height: 100%;\r\n        width: 100%;\r\n        grid-area: slides;\r\n      }\r\n    }\r\n\r\n    .form-ctnr {\r\n      display: grid;\r\n      /* justify-content: center; */\r\n      align-items: start;\r\n      align-content: start;\r\n      padding: 1em 2em;\r\n      padding-bottom: 0.3em;\r\n      /* padding-top: 0; */\r\n\r\n      .header {\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n        justify-items: center;\r\n        /* text-align: center; */\r\n\r\n        .brand-logo {\r\n          height: 4em;\r\n\r\n          width: 4em;\r\n        }\r\n        .brand-name {\r\n          padding: 0.5em 0;\r\n          text-align: center;\r\n        }\r\n      }\r\n\r\n      .error {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        justify-items: start;\r\n        justify-content: start;\r\n        align-items: center;\r\n        font-size: 0.8em;\r\n        font-weight: 500;\r\n        max-width: 90%;\r\n        color: ${(p) => p.theme.palette.error.main};\r\n      }\r\n\r\n      .body {\r\n        display: grid;\r\n        grid-gap: 1em;\r\n        align-content: start;\r\n\r\n        .body-title {\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          justify-items: start;\r\n          align-items: center;\r\n        }\r\n\r\n        .form {\r\n          display: grid;\r\n          grid-gap: 1em;\r\n          align-content: start;\r\n          align-items: start;\r\n\r\n          .forgetpass {\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0;\r\n            font-size: 0.7rem;\r\n            margin-top: -10px;\r\n            &:hover {\r\n              color: blue !important;\r\n            }\r\n\r\n            a {\r\n              color: #333 !important;\r\n              text-decoration: none !important;\r\n            }\r\n          }\r\n\r\n          .buttons {\r\n            margin-top: 1em;\r\n            display: grid;\r\n            grid-auto-flow: row;\r\n            grid-gap: 0.5em;\r\n            .submit-btn {\r\n            }\r\n            .MuiButtonBase-root {\r\n              border-radius: 35px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer {\r\n        margin-top: 1em;\r\n        border-top: 1px solid black;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        grid-gap: 0.4em;\r\n        .title {\r\n          justify-self: center;\r\n          background-color: #ecfffb;\r\n          margin-top: -10px;\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          padding: 0 0.5em;\r\n        }\r\n\r\n        .tuo_logo {\r\n          height: 35px;\r\n          width: 35px;\r\n        }\r\n\r\n        .tuo-name {\r\n          font-weight: 500;\r\n          font-size: 0.8em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImageBackground = styled.div<{ src: any }>`\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4)),\r\n    url(\"${(p: any) => p.src}\") no-repeat center center;\r\n  opacity: 0;\r\n  background-size: cover;\r\n  margin-left: 0;\r\n\r\n  transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -webkit-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -moz-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -o-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  .app-name {\r\n    display: grid;\r\n    align-content: end;\r\n    align-items: end;\r\n    text-shadow: 0 3px 0 black;\r\n    color: #fff;\r\n    padding: 0.5em;\r\n    /* font-size: 2.1em; */\r\n    /* font-weight: 900; */\r\n    text-align: center;\r\n  }\r\n  &.active {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { Avatar, Button } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport app_logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport LoadingButton from \"../../Component/LoadingButton\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport importImagesFromFolder from \"../../Helpers/importImagesFromFolder\";\r\nimport UseInterval from \"../../Hooks/UseInterval\";\r\nimport { ILoginPortalAuthFormValues } from \"../../Interfaces/LoginPortalInterface\";\r\nimport { SetCurrentUserAction } from \"../../Services/Actions/UserActions\";\r\nimport { LoginApi } from \"../../Services/Api/UserApi\";\r\nimport FieldPassword from \"./FieldPassword\";\r\nimport FieldUsername from \"./FieldUsername\";\r\nimport { LoginStyles, StyledImageBackground } from \"./styles\";\r\n\r\ninterface ILoginPortal {}\r\n\r\nconst authFormValues: ILoginPortalAuthFormValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst images: Array<any> = importImagesFromFolder(\r\n  require.context(\r\n    \"../../Assets/Images/Login/\",\r\n    true,\r\n    /\\.(png|jpg|jpe?g|svg|gif)$/\r\n  )\r\n);\r\n\r\nconst delaySec = 5000;\r\n\r\nexport const LoginPortal: FC<ILoginPortal> = memo(() => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [currentBackground, setCurrentBackground] = useState(0);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\r\n  const [authError, setAuthError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleChange = useCallback(() => {\r\n    setCurrentBackground((prev) => (prev === images.length - 1 ? 0 : prev + 1));\r\n  }, []);\r\n\r\n  const handleTogglePassword = useCallback(() => {\r\n    setShowPassword((prevState) => !prevState);\r\n  }, []);\r\n\r\n  UseInterval(handleChange, delaySec);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (\r\n      values: ILoginPortalAuthFormValues,\r\n      formikHelpers: FormikHelpers<ILoginPortalAuthFormValues>\r\n    ) => {\r\n      setIsAuthenticating(true);\r\n      const response = await LoginApi(values);\r\n      setIsAuthenticating(false);\r\n      if (response.success) {\r\n        localStorage.setItem(\r\n          APP_NAME,\r\n          JSON.stringify({\r\n            access_token: response.data.token,\r\n          })\r\n        );\r\n        dispatch(SetCurrentUserAction());\r\n      } else {\r\n        if (typeof response.message === \"string\") {\r\n          setAuthError(response.message);\r\n        }\r\n        formikHelpers.resetForm();\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <LoginStyles theme={theme}>\r\n      <div style={{ gridArea: \"login\" }} className=\"login-container\">\r\n        <div className=\"slider-ctnr\">\r\n          {images.map((imgSrc: any, index: number) => (\r\n            <StyledImageBackground\r\n              src={imgSrc}\r\n              key={index}\r\n              className={clsx(\"slides\", {\r\n                active: index === currentBackground,\r\n              })}\r\n            >\r\n              <h1 className=\"app-name\">{APP_NAME}</h1>\r\n            </StyledImageBackground>\r\n          ))}\r\n        </div>\r\n        <div className=\"form-ctnr\">\r\n          <section className=\"header\">\r\n            <img className=\"brand-logo\" src={app_logo} alt=\"\" />\r\n\r\n            <h2 className=\"brand-name\">{process.env.REACT_APP_CLIENT}</h2>\r\n          </section>\r\n\r\n          <section className=\"body\">\r\n            <small className=\"body-title\">\r\n              You can sign into your account here\r\n            </small>\r\n\r\n            {!!authError && <div className=\"error\">{authError}</div>}\r\n\r\n            <Formik initialValues={authFormValues} onSubmit={handleSubmit}>\r\n              <Form className=\"form\">\r\n                <FieldUsername />\r\n                <FieldPassword\r\n                  showPassword={showPassword}\r\n                  handleTogglePassword={handleTogglePassword}\r\n                />\r\n\r\n                {/* <NavLink to=\"/login\" className=\"forgetpass\">\r\n                  <div className=\"forget-text\">\r\n                    Let us help you if you <span>forgot your password?</span>\r\n                  </div>\r\n                </NavLink> */}\r\n                <div className=\"buttons\">\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    variant=\"contained\"\r\n                    // disableElevation\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    loading={isAuthenticating}\r\n                    fullWidth={true}\r\n                  >\r\n                    Log in\r\n                  </LoadingButton>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/student-registration`);\r\n                    }}\r\n                  >\r\n                    Create Student Account\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Formik>\r\n          </section>\r\n          <section className=\"footer\">\r\n            <div className=\"title\">Developed & Maintained By</div>\r\n            <Avatar className=\"tuo_logo\" src={app_logo} />\r\n            <div className=\"tuo-name\">{process?.env.REACT_APP_PROVIDER}</div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </LoginStyles>\r\n  );\r\n});\r\n\r\nexport default LoginPortal;\r\n","export const importImagesFromFolder = (src: any) => {\r\n  return src.keys().map(src);\r\n};\r\n\r\nexport default importImagesFromFolder;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\r\nimport VpnKeyRoundedIcon from \"@material-ui/icons/VpnKeyRounded\";\r\n\r\ninterface IFieldPassword {\r\n  showPassword: boolean;\r\n  handleTogglePassword: () => void;\r\n}\r\n\r\nexport const FieldPassword: FC<IFieldPassword> = memo(\r\n  ({ showPassword, handleTogglePassword }) => {\r\n    const [field] = useField({ name: \"password\" });\r\n    return (\r\n      <FormControl fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Password</InputLabel>\r\n        <OutlinedInput\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          id=\"outlined-adornment-amount\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <VpnKeyRoundedIcon fontSize=\"small\" />\r\n            </InputAdornment>\r\n          }\r\n          endAdornment={\r\n            <div>\r\n              {showPassword ? (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityOffRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              )}\r\n            </div>\r\n          }\r\n          labelWidth={75}\r\n          {...field}\r\n        />\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FieldPassword;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\ninterface IFieldUsername {}\r\n\r\nexport const FieldUsername: FC<IFieldUsername> = memo(() => {\r\n  const [field] = useField({ name: \"username\" });\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\">\r\n      <InputLabel htmlFor=\"outlined-adornment-amount\">Username</InputLabel>\r\n      <OutlinedInput\r\n        id=\"outlined-adornment-amount\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <PersonRoundedIcon fontSize=\"small\" />\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={80}\r\n        {...field}\r\n        autoFocus={true}\r\n      />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default FieldUsername;\r\n","export const APP_NAME: any = process.env.REACT_APP_NAME;\r\nexport const API_BASE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:4040/\"\r\n    : process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport const getAccessToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).access_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const getRefreshToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).refresh_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const setTokens = (acess_token: string, refresh_token: string) => {\r\n  localStorage.setItem(\r\n    APP_NAME,\r\n    JSON.stringify({\r\n      access_token: acess_token,\r\n      refresh_token: refresh_token,\r\n    })\r\n  );\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(APP_NAME);\r\n};\r\n","import { Button, Grid, MenuItem, TextField, useTheme } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport React, { FC, memo, useCallback, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport app_logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport FormikInputField from \"../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../Component/SuccessDialog\";\r\nimport {\r\n  validateEmail,\r\n  validateMobile,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../Hooks/UseFileConverter\";\r\nimport { setGeneralPrompt } from \"../../Services/Actions/PageActions\";\r\nimport { addStudentAction } from \"../../Services/Actions/StudentActions\";\r\nimport { StudentModel } from \"../../Services/Models/StudentModel\";\r\nimport { DbGradeLevels } from \"../../Storage/LocalDatabase\";\r\nimport { StyledRegisterStudentView } from \"./styles\";\r\n\r\ninterface IRegisterSTudentView {}\r\n\r\nconst initFormValues: StudentModel = {\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  grade: null,\r\n  gender: null,\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  picture: \"\",\r\n  user: {\r\n    username: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  },\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  middlename: yup.string().max(100).label(\"Midle Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  suffix: yup.string().max(10).label(\"Suffix\"),\r\n  grade: yup\r\n    .number()\r\n    .nullable()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(20)\r\n    .label(\"Grade Level\"),\r\n  email: yup\r\n    .string()\r\n    .required()\r\n    .label(\"Email Address\")\r\n    .matches(validateEmail, \"Email address has invalid format\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .label(\"Mobile Number\")\r\n    .matches(validateMobile, \"Mobile number has invalid format\"),\r\n  gender: yup.string().nullable().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n  user: yup.object({\r\n    username: validateUsername(\"Username\"),\r\n    password: validatePassword(\"Password\"),\r\n    confirm_password: yup\r\n      .string()\r\n      .required()\r\n      .label(\"Re-enter password\")\r\n      .test(\"Passwords do not much\", \"Passwords must match\", function (value) {\r\n        const { password } = this.parent;\r\n        return password === value;\r\n      }),\r\n  }),\r\n});\r\n\r\nexport const RegisterSTudentView: FC<IRegisterSTudentView> = memo(() => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const formRef = useRef<FormikProps<StudentModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (values, formHelpers: FormikHelpers<StudentModel>) => {\r\n      console.log(`values`, values);\r\n      values.picture = await fileToBase64(pic);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addStudentAction(values, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  return (\r\n    <StyledRegisterStudentView theme={theme}>\r\n      <div style={{ gridArea: \"login\" }} className=\"login-container\">\r\n        <div className=\"form-ctnr\">\r\n          <section className=\"header\">\r\n            <img className=\"brand-logo\" src={app_logo} alt=\"\" />\r\n            <h1>{process.env.REACT_APP_NAME}</h1>\r\n            <h3>{process.env.REACT_APP_CLIENT}</h3>\r\n\r\n            <div className=\"brand-name\">\r\n              We simply bring learnings in you. Start leaning now!\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"body\">\r\n            <div className=\"body-title\">\r\n              Fill-up all the required fields to create an account!\r\n            </div>\r\n\r\n            {/* {!!authError && <div className=\"error\">{authError}</div>} */}\r\n\r\n            <Formik\r\n              initialValues={initFormValues}\r\n              validationSchema={formSchema}\r\n              onSubmit={handleFormSubmit}\r\n              innerRef={formRef}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                setFieldValue,\r\n                handleChange,\r\n                setValues,\r\n              }) => (\r\n                <Form className=\"form\">\r\n                  <Grid container spacing={3}>\r\n                    <Grid xs={12} container justify=\"center\" item>\r\n                      <div>\r\n                        <PhotoField\r\n                          label=\"\"\r\n                          height={180}\r\n                          width={180}\r\n                          selectedFile={pic}\r\n                          name=\"pic\"\r\n                          handleChange={handleSetPic}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"form-title\">Personal Information</div>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        placeholder=\"Enter firstname name\"\r\n                        name=\"firstname\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Middle Name (optional)\"\r\n                        placeholder=\"Enter middle name\"\r\n                        name=\"middlename\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        placeholder=\"Enter last name\"\r\n                        name=\"lastname\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <FormikInputField\r\n                        label=\"Suffix (optional)\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      {(() => {\r\n                        const name = \"grade\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name] ? values[name] : \"\"}\r\n                            label=\"Grade Level\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                          >\r\n                            {DbGradeLevels.map((val, index) => (\r\n                              <MenuItem key={index} value={val.id}>\r\n                                {val.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Mobile Number\"\r\n                        placeholder=\"Mobile Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        placeholder=\"Enter email address\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Complete Address\"\r\n                          placeholder=\"Enter complete address\"\r\n                          name=\"complete_address\"\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={3}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"form-title\">Account Information</div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        label=\"Username\"\r\n                        placeholder=\"Enter username\"\r\n                        name=\"user.username\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Password\"\r\n                        placeholder=\"Enter password\"\r\n                        name=\"user.password\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Re-enter password\"\r\n                        placeholder=\"Re-enter password\"\r\n                        name=\"user.confirm_password\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      xs={12}\r\n                      spacing={2}\r\n                      justify=\"flex-end\"\r\n                      style={{\r\n                        padding: `2em 0`,\r\n                      }}\r\n                    >\r\n                      <Grid item>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Create Account\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          size=\"large\"\r\n                          onClick={() => {\r\n                            history.push(`/login`);\r\n                          }}\r\n                        >\r\n                          Go Back\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </section>\r\n          <section className=\"footer\">\r\n            <div className=\"title\">Developed & Maintained By</div>\r\n            <div className=\"tuo-name\">{process?.env.REACT_APP_PROVIDER}</div>\r\n          </section>\r\n\r\n          <SuccessDialog {...successDialog}>\r\n            <Button\r\n              color=\"primary\"\r\n              disableElevation={false}\r\n              onClick={() => {\r\n                history.push(`/login`);\r\n              }}\r\n            >\r\n              Go to Login Page\r\n            </Button>\r\n          </SuccessDialog>\r\n        </div>\r\n      </div>\r\n    </StyledRegisterStudentView>\r\n  );\r\n});\r\n\r\nexport default RegisterSTudentView;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledRegisterStudentView = styled.div`\r\n  min-height: 100vh;\r\n  /* min-width: 100vw; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: grid;\r\n  grid-template-areas: \"login\";\r\n  background: #314755;\r\n  background: linear-gradient(to left, #26a0da, #314755);\r\n\r\n  .login-container {\r\n    background-color: #fff;\r\n    align-self: center;\r\n    justify-self: center;\r\n    display: grid;\r\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.56),\r\n      0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n    z-index: 2;\r\n    border-radius: 15px;\r\n    perspective: 1px;\r\n    overflow: hidden;\r\n    margin: 2em 0 !important;\r\n    opacity: 0.9;\r\n    width: 600px;\r\n\r\n    .form-ctnr {\r\n      display: grid;\r\n      /* justify-content: center; */\r\n      align-items: start;\r\n      align-content: start;\r\n      grid-gap: 1em;\r\n      padding: 1em;\r\n      /* padding-top: 0; */\r\n\r\n      .header {\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n        justify-items: center;\r\n        /* text-align: center; */\r\n\r\n        .brand-logo {\r\n          height: 5em;\r\n          width: 5em;\r\n        }\r\n        .brand-name {\r\n          font-weight: 600;\r\n          padding: 0.5em 0;\r\n          font-size: 1em;\r\n        }\r\n      }\r\n\r\n      .error {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        justify-items: start;\r\n        justify-content: start;\r\n        align-items: center;\r\n        font-size: 0.8em;\r\n        font-weight: 500;\r\n        max-width: 90%;\r\n        color: ${(p) => p.theme.palette.error.main};\r\n      }\r\n\r\n      .body {\r\n        margin: 1em 0;\r\n        display: grid;\r\n        grid-gap: 1em;\r\n        align-content: start;\r\n\r\n        .body-title {\r\n          /* text-align: center; */\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          /* justify-content: center; */\r\n          justify-items: start;\r\n          align-items: center;\r\n          font-size: 0.87em;\r\n          font-weight: 500;\r\n          color: rgba(0, 0, 0, 0.7);\r\n        }\r\n\r\n        .form {\r\n          display: grid;\r\n          grid-gap: 1em;\r\n          align-content: start;\r\n          align-items: start;\r\n\r\n          .forgetpass {\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0;\r\n            font-size: 0.7rem;\r\n            margin-top: -10px;\r\n            &:hover {\r\n              color: blue !important;\r\n            }\r\n\r\n            a {\r\n              color: #333 !important;\r\n              text-decoration: none !important;\r\n            }\r\n          }\r\n\r\n          .buttons {\r\n            display: grid;\r\n            grid-auto-flow: row;\r\n            grid-gap: 0.5em;\r\n            .submit-btn {\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer {\r\n        margin-top: 1em;\r\n        border-top: 1px solid black;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        grid-gap: 0.4em;\r\n        .title {\r\n          justify-self: center;\r\n          background-color: #ecfffb;\r\n          margin-top: -10px;\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          padding: 0 0.5em;\r\n        }\r\n\r\n        .tuo_logo {\r\n          height: 35px;\r\n          width: 35px;\r\n        }\r\n\r\n        .tuo-name {\r\n          font-weight: 500;\r\n          font-size: 0.8em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoadingButton = styled.div`\r\n  display: grid;\r\n  grid-template-areas: \"combine\";\r\n  .btn {\r\n    grid-area: combine;\r\n  }\r\n  .loader {\r\n    font-weight: 900;\r\n    font-size: 2em;\r\n    z-index: 10;\r\n    grid-area: combine;\r\n    justify-self: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { StyledLoadingButton } from \"./styles\";\r\n\r\ninterface IProps {\r\n  // className :\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\r\n  variant: \"text\" | \"outlined\" | \"contained\" | undefined;\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  handleClick?: () => void;\r\n  fullWidth: boolean;\r\n  className?: string | undefined;\r\n  style?: any;\r\n}\r\n\r\nconst LoadingButton: React.FC<IProps> = ({\r\n  type,\r\n  color,\r\n  disabled,\r\n  loading,\r\n  variant,\r\n  handleClick,\r\n  size,\r\n  fullWidth,\r\n  className,\r\n  children,\r\n  style,\r\n}) => {\r\n  return (\r\n    <StyledLoadingButton>\r\n      <Button\r\n        className={`btn ${className}`}\r\n        type={type}\r\n        color={color}\r\n        variant={variant}\r\n        size={size}\r\n        disabled={disabled || loading}\r\n        onClick={handleClick}\r\n        fullWidth={fullWidth}\r\n        style={style}\r\n        disableElevation\r\n      >\r\n        {children}\r\n      </Button>\r\n      {loading && <CircularProgress size={22} className=\"loader\" />}\r\n    </StyledLoadingButton>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","var map = {\n\t\"./background.jpg\": 623,\n\t\"./background2.jpg\": 624,\n\t\"./mohammad-shahhosseini-cPWUODAvXjk-unsplash.jpg\": 625,\n\t\"./neonbrand-zFSo6bnZJTw-unsplash.jpg\": 626,\n\t\"./step1.jpg\": 627,\n\t\"./step2.jpg\": 628\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 622;","module.exports = __webpack_public_path__ + \"static/media/background.501f9372.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background2.0f9bf32d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mohammad-shahhosseini-cPWUODAvXjk-unsplash.3c52127e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neonbrand-zFSo6bnZJTw-unsplash.4da4d28d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step1.e15e7552.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step2.55d5f98f.jpg\";","import { Slide } from \"@material-ui/core\";\r\nimport {\r\n  Avatar,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface ISuccessDialog {\r\n  open: boolean;\r\n  message: string;\r\n}\r\n\r\nconst Transition: any = React.forwardRef(function Transition(\r\n  props: any,\r\n  ref: any\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const SuccessDialog: FC<ISuccessDialog> = memo(\r\n  ({ children, open, message }) => {\r\n    return (\r\n      <StyledSuccessDialog\r\n        open={open}\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            borderRadius: 10,\r\n            width: 400,\r\n            overflowY: \"visible\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              justifyItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"-50px\",\r\n            }}\r\n          >\r\n            <Avatar\r\n              style={{\r\n                height: \"3.5em\",\r\n                width: \"3.5em\",\r\n                backgroundColor: \"#8bc34a\",\r\n              }}\r\n            >\r\n              <CheckRoundedIcon fontSize=\"large\" />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent className=\"dialog-content\">\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Successful!\r\n          </Typography>\r\n          <Typography gutterBottom>{message}</Typography>\r\n        </DialogContent>\r\n        <div className=\"dialog-actions\">\r\n          <small>What do you want to do next?</small>\r\n          <>{children}</>\r\n        </div>\r\n      </StyledSuccessDialog>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SuccessDialog;\r\n\r\nconst StyledSuccessDialog = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-top: -15px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n  .dialog-actions {\r\n    margin: 1em;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    width: 100%;\r\n    justify-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\ninterface IPageLoader {}\r\n\r\nexport const PageLoader: FC<IPageLoader> = memo(() => {\r\n  const theme = useTheme();\r\n\r\n  const { show, loading_message } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_loading\r\n  );\r\n\r\n  return (\r\n    <Backdrop\r\n      style={{\r\n        zIndex: theme.zIndex.modal + 100,\r\n        color: \"#fff\",\r\n        display: \"grid\",\r\n        gridAutoFlow: \"column\",\r\n        gridGap: \"1em\",\r\n      }}\r\n      open={show}\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n      <Typography variant=\"subtitle1\">{loading_message}</Typography>\r\n    </Backdrop>\r\n  );\r\n});\r\n\r\nexport default PageLoader;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport React, { memo, useCallback, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { resetGeneralPrompt } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport WarningRoundedIcon from \"@material-ui/icons/WarningRounded\";\r\ninterface IPagePrompt {}\r\n\r\nexport const PagePrompt: FC<IPagePrompt> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    open,\r\n    custom_title,\r\n    custom_subtitle,\r\n    continue_callback,\r\n    close_callback,\r\n  } = useSelector((state: RootStore) => state.PageReducer.page_prompt);\r\n\r\n  const handleContinue = useCallback(() => {\r\n    if (continue_callback) {\r\n      dispatch(resetGeneralPrompt());\r\n\r\n      if (typeof continue_callback === \"function\") {\r\n        continue_callback();\r\n      }\r\n    }\r\n  }, [continue_callback, dispatch]);\r\n  const handleCancel = useCallback(() => {\r\n    dispatch(resetGeneralPrompt());\r\n    if (close_callback) {\r\n      if (typeof close_callback === \"function\") {\r\n        close_callback();\r\n      }\r\n    }\r\n  }, [close_callback, dispatch]);\r\n\r\n  return (\r\n    <StyledPagePrompt\r\n      open={open}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      onEscapeKeyDown={() => {\r\n        handleCancel();\r\n      }}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"-50px\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              height: \"3.5em\",\r\n              width: \"3.5em\",\r\n              backgroundColor: \"#ff9800\",\r\n            }}\r\n          >\r\n            <WarningRoundedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className=\"dialog-content\">\r\n        <Typography variant=\"h6\" paragraph={false}>\r\n          {custom_title\r\n            ? custom_title\r\n            : \"Are you sure that you want to continue?\"}\r\n        </Typography>\r\n        <Typography>\r\n          {custom_subtitle\r\n            ? custom_subtitle\r\n            : \"If you proceed, you won't be able to revert this process.\"}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions className=\"dialog-actions\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          startIcon={<CheckRoundedIcon fontSize=\"small\" />}\r\n          disableElevation\r\n          onClick={handleContinue}\r\n        >\r\n          Yes, Continue\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          startIcon={<CloseRoundedIcon fontSize=\"small\" />}\r\n          onClick={handleCancel}\r\n          disableElevation\r\n        >\r\n          No, Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </StyledPagePrompt>\r\n  );\r\n});\r\n\r\nexport default PagePrompt;\r\n\r\nconst StyledPagePrompt = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n    .big-text {\r\n      color: red;\r\n      font-weight: 600;\r\n      font-size: 1.1em;\r\n    }\r\n    .small-text {\r\n      font-size: 0.87em;\r\n    }\r\n  }\r\n`;\r\n","import { useSnackbar } from \"notistack\";\r\nimport { memo, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst PageSnackbar = memo(() => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { message, options } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_snackbar\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const triggerSnackbar = () => {\r\n      if (message) {\r\n        if (options) {\r\n          enqueueSnackbar(message, { ...options });\r\n        } else {\r\n          enqueueSnackbar(message);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && triggerSnackbar();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enqueueSnackbar, message, options]);\r\n\r\n  return null;\r\n});\r\n\r\nexport default PageSnackbar;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value ? value : \"\");\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { Avatar, useTheme } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\ninterface ICustomAvatar {\r\n  src: string | null;\r\n  errorMessage: string;\r\n  className?: string;\r\n  variant?: \"circle\" | \"rounded\" | \"square\";\r\n  widthSpacing?: number;\r\n  heightSpacing?: number;\r\n  style?: any;\r\n}\r\n\r\nconst CustomAvatar: React.FC<ICustomAvatar> = memo(\r\n  ({\r\n    src,\r\n    errorMessage,\r\n    className,\r\n    widthSpacing,\r\n    heightSpacing,\r\n    variant,\r\n    style,\r\n  }) => {\r\n    const theme = useTheme();\r\n    return src === \"\" || src === \"null\" || src === null ? (\r\n      <Avatar\r\n        className={className}\r\n        style={{\r\n          height: theme.spacing(heightSpacing ? heightSpacing : 5),\r\n          width: theme.spacing(widthSpacing ? widthSpacing : 5),\r\n          backgroundColor: `#1565c0`,\r\n          color: `#fff3e0`,\r\n          ...style,\r\n        }}\r\n        variant={variant}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: `.7em`,\r\n            fontWeight: 900,\r\n            letterSpacing: \".3pt\",\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </div>\r\n      </Avatar>\r\n    ) : (\r\n      <Avatar\r\n        className={className}\r\n        style={{\r\n          height: theme.spacing(heightSpacing ? heightSpacing : 5),\r\n          width: theme.spacing(widthSpacing ? widthSpacing : 5),\r\n          ...style,\r\n        }}\r\n        src={`data:image/jpg;base64,${src}`}\r\n        variant={variant}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomAvatar;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useField } from \"formik\";\r\nimport React, { useEffect, useState, memo, FC } from \"react\";\r\nimport useDebounce from \"../../Hooks/UseDebounce\";\r\nimport { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\n\r\ninterface IFormikAutocomplete {\r\n  label?: string;\r\n  optKeyId: string;\r\n  optKeyLabel: string;\r\n  inputFieldName: string;\r\n  selectFieldName: string;\r\n  endPoint: string;\r\n  className?: string;\r\n  rows?: string;\r\n  multiline?: string;\r\n  variant?: any;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  size?: \"small\" | \"medium\";\r\n  onSelectChange?: () => void;\r\n  other_payload?: any;\r\n}\r\n\r\nconst FormikAutocomplete: FC<IFormikAutocomplete> = memo(\r\n  ({\r\n    label,\r\n    optKeyId,\r\n    optKeyLabel,\r\n    inputFieldName,\r\n    selectFieldName,\r\n    endPoint,\r\n    className,\r\n    rows,\r\n    multiline,\r\n    variant,\r\n    required,\r\n    placeholder,\r\n    size,\r\n    other_payload,\r\n  }) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [inputField, inputMeta, inputArgs] = useField({\r\n      name: inputFieldName,\r\n    });\r\n    const errorText =\r\n      inputMeta.error && inputMeta.touched ? inputMeta.error : \"\";\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectField, selectMeta, selectArgs] = useField({\r\n      name: selectFieldName,\r\n    });\r\n\r\n    const debouncedSearchTerm = useDebounce(\r\n      selectField.value ? selectField.value : \"\",\r\n      500\r\n    );\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setLoading(true);\r\n        setOptions([]);\r\n\r\n        let payload: any = other_payload ? other_payload : {};\r\n\r\n        payload = {\r\n          ...payload,\r\n          value: selectField.value ? selectField.value : \"\",\r\n        };\r\n\r\n        const response = await PostFetch(endPoint, payload);\r\n        setLoading(false);\r\n        if (response.success) {\r\n          setOptions(response.data);\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof debouncedSearchTerm === \"string\" &&\r\n        debouncedSearchTerm !== null\r\n      ) {\r\n        fetchData();\r\n      } else {\r\n        setOptions([]);\r\n      }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n      selectArgs.setValue(selectField.value ? selectField.value : \"\");\r\n      return () => {};\r\n    }, []);\r\n\r\n    return (\r\n      <Autocomplete\r\n        // value={inputField?.value[optKeyId]}\r\n        options={options}\r\n        loading={loading}\r\n        filterSelectedOptions={true}\r\n        loadingText=\"Loading options\"\r\n        getOptionLabel={(option) => option[optKeyLabel]}\r\n        renderOption={(option, state) => {\r\n          if (option.picture) {\r\n            return (\r\n              <div className=\"autocomplete-picture\">\r\n                <CustomAvatar\r\n                  src={option.picture}\r\n                  errorMessage={option.label.charAt(0)}\r\n                  className=\"\"\r\n                />\r\n                {option.label}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <option>{option.label}</option>;\r\n          }\r\n        }}\r\n        onChange={(event, newValue) => {\r\n          if (newValue && typeof newValue !== \"undefined\") {\r\n            if (typeof newValue[optKeyId] === \"number\") {\r\n              inputArgs.setValue(newValue[optKeyId].toString());\r\n            } else {\r\n              inputArgs.setValue(newValue[optKeyId]);\r\n            }\r\n          } else {\r\n            inputArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        inputValue={selectField?.value ? selectField?.value : \"\"}\r\n        onInputChange={(event, newInputValue) => {\r\n          if (newInputValue) {\r\n            selectArgs.setValue(newInputValue);\r\n          } else {\r\n            selectArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        filterOptions={(options, state) => options}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            {...inputField}\r\n            {...size}\r\n            size={size}\r\n            helperText={errorText}\r\n            error={!!errorText}\r\n            label={label}\r\n            variant={variant}\r\n            // InputProps={{\r\n            //   ...inputField,\r\n            //   value: inputField.value ? inputField.value : \"\",\r\n            // }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            rows={rows}\r\n            multiline={multiline ? true : false}\r\n            required={required ? true : false}\r\n            placeholder={placeholder}\r\n            fullWidth\r\n          />\r\n        )}\r\n        className={className}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikAutocomplete;\r\n","import { MenuItem, TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface IOptions {\r\n  id: string | number;\r\n  label: string | number;\r\n}\r\n\r\ninterface IFormikSelect {\r\n  data: Array<IOptions>;\r\n  label: string;\r\n  name: string;\r\n  hasEmptyValue?: boolean;\r\n}\r\n\r\nexport const FormikSelect: React.FC<IFormikSelect & TextFieldProps> = ({\r\n  data,\r\n  name,\r\n  hasEmptyValue,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField({ name });\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      id=\"outlined-select-currency\"\r\n      error={!!errorText}\r\n      helperText={errorText}\r\n      {...props}\r\n      {...field}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      select\r\n    >\r\n      {hasEmptyValue === true && (\r\n        <MenuItem value={\"\"}>\r\n          <small>\r\n            <em>None</em>\r\n          </small>\r\n        </MenuItem>\r\n      )}\r\n\r\n      {data.map((val, ind) => (\r\n        <MenuItem key={ind} value={val.id}>\r\n          {val.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default FormikSelect;\r\n","import * as Moment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport { TutorFutureSessionModel } from \"../Services/Models/ClassSessionModel\";\r\n\r\nconst moment = extendMoment(Moment);\r\n\r\nexport interface IScheduleGeneratorPayload {\r\n  start_date: Date | null;\r\n  end_date: Date | null;\r\n  start_time: Date | null;\r\n  end_time: Date | null;\r\n  freq: \"daily\" | \"weekly\" | \"monthly\" | \"yearly\";\r\n  interval: number;\r\n  range_type: \"d\" | \"s\";\r\n  tilldate: Date | null;\r\n  tillsession: number;\r\n  daysofweek: Array<number>;\r\n}\r\n\r\nexport interface IGeneratedDates {\r\n  included?: boolean;\r\n  start_date: Date;\r\n  end_date?: Date;\r\n  start_time: Date | null;\r\n  end_time: Date | null;\r\n}\r\n\r\nexport const genDailyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genWeeklyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    daysofweek,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      let found: boolean = false;\r\n      for (let i: number = 0; i < daysofweek.length; i++) {\r\n        const dayOfWeekStartDate: number = moment(tempStartDate).day();\r\n        if (dayOfWeekStartDate === daysofweek[i]) {\r\n          found = true;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        dates.push({\r\n          included: true,\r\n          start_date: tempStartDate,\r\n          end_date: tempEndDate,\r\n          start_time: start_time,\r\n          end_time: end_time,\r\n        });\r\n      }\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"days\")\r\n          .toDate();\r\n      }\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      let found: boolean = false;\r\n\r\n      for (let i: number = 0; i < daysofweek.length; i++) {\r\n        const dayOfWeekStartDate: number = moment(tempStartDate).day();\r\n        if (dayOfWeekStartDate === daysofweek[i]) {\r\n          found = true;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        dates.push({\r\n          included: true,\r\n          start_date: tempStartDate,\r\n          end_date: tempEndDate,\r\n          start_time: start_time,\r\n          end_time: end_time,\r\n        });\r\n        counter++;\r\n      }\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"days\")\r\n          .toDate();\r\n      }\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genMonthlyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"months\")\r\n          .toDate();\r\n      }\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genYearlyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (\r\n    start_date === null ||\r\n    end_date === null ||\r\n    start_time === null ||\r\n    end_time === null\r\n  ) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\ninterface GenerateDailyWeekDaysDatesInterface {\r\n  start_date: Date;\r\n  start_time: string;\r\n  end_time: string;\r\n  session_count: number;\r\n  blocked_dates: Array<TutorFutureSessionModel>;\r\n}\r\n\r\ninterface DailyWeekDaysDatesResultInterface {\r\n  include: boolean;\r\n  session_date: Date;\r\n}\r\n\r\nexport const generateDailyWeekDaysDates = (\r\n  schedulePayload: GenerateDailyWeekDaysDatesInterface\r\n): Array<Date> => {\r\n  let {\r\n    start_date,\r\n    session_count,\r\n    start_time,\r\n    end_time,\r\n    blocked_dates,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<Date> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let temp_start_date = start_date;\r\n\r\n  if (session_count === null || session_count <= 0 || session_count > 10) {\r\n    return [];\r\n  }\r\n\r\n  do {\r\n    if (\r\n      moment(temp_start_date).isoWeekday() !== 6 &&\r\n      moment(temp_start_date).isoWeekday() !== 7\r\n    ) {\r\n      let conflict = false;\r\n\r\n      for (const bd of blocked_dates) {\r\n        const new_date_range = moment.range(\r\n          moment(\r\n            moment(temp_start_date).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              moment(start_time, \"hh:mm A\").format(\"HH:mm:ss\")\r\n          ),\r\n          moment(\r\n            moment(temp_start_date).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              moment(end_time, \"hh:mm A\").format(\"HH:mm:ss\")\r\n          )\r\n        );\r\n\r\n        const blocked_date_range = moment.range(\r\n          moment(\r\n            moment(new Date(bd.start_date)).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              bd.start_time\r\n          ).add(1, \"minutes\"),\r\n          moment(\r\n            moment(new Date(bd.start_date)).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              bd.end_time\r\n          ).subtract(1, \"minutes\")\r\n        );\r\n\r\n        if (new_date_range.overlaps(blocked_date_range)) {\r\n          // console.log(`conflict`);\r\n          // session_count++;\r\n          conflict = true;\r\n          break;\r\n        }\r\n\r\n        console.log(conflict, new_date_range, blocked_date_range);\r\n      }\r\n\r\n      if (!conflict) {\r\n        dates.push(moment(temp_start_date).toDate());\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    temp_start_date = moment(new Date(temp_start_date), \"DD/MM/YYYY\")\r\n      .add(1, \"days\")\r\n      .toDate();\r\n  } while (counter < session_count);\r\n\r\n  console.log(`dates`, dates);\r\n\r\n  return dates;\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { CourseModel } from \"../Models/CourseModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/course/`;\r\n\r\nconst getCourseDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getCourseDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addCourseApi = async (payload: CourseModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addCourse\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateCourseApi = async (\r\n  payload: CourseModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateCourse\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleCourseApi = async (\r\n  course_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleCourse\", {\r\n    course_pk: course_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getCourseDurationApi = async (\r\n  course_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getCourseDuration\", {\r\n    course_pk: course_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst searchCourseApi = async (search: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchCourse\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getCourseDataTableApi,\r\n  addCourseApi,\r\n  updateCourseApi,\r\n  getSingleCourseApi,\r\n  searchCourseApi,\r\n  getCourseDurationApi,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { FilterEventModel } from \"../Models/CaledarModels\";\r\nimport {\r\n  ClassSesMsgModel,\r\n  ClassSessionModel,\r\n} from \"../Models/ClassSessionModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classsession/`;\r\n\r\nconst getClassSessionsApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getClassSessions\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassSession = async (\r\n  session_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getSingleClassSession\",\r\n    {\r\n      session_pk: session_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst startClassSessionApi = async (\r\n  payload: ClassSessionModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"startClassSession\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst endClassSessionApi = async (\r\n  payload: ClassSessionModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"endClassSession\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorFutureSessionsApi = async (\r\n  tutor_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorFutureSessions\",\r\n    {\r\n      tutor_pk: tutor_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorClassSessionCalendarApi = async (\r\n  payload: FilterEventModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorClassSessionCalendar\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStatsSessionCalendarApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStatsSessionCalendar\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllMessage = async (session_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllMessage\", {\r\n    session_pk: session_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst saveMessage = async (\r\n  payload: ClassSesMsgModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"saveMessage\", payload);\r\n  return response;\r\n};\r\n\r\nconst hideMessage = async (\r\n  payload: ClassSesMsgModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"hideMessage\", payload);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getClassSessionsApi,\r\n  getTutorFutureSessionsApi,\r\n  getTutorClassSessionCalendarApi,\r\n  getStatsSessionCalendarApi,\r\n  startClassSessionApi,\r\n  endClassSessionApi,\r\n  getAllMessage,\r\n  saveMessage,\r\n  hideMessage,\r\n  getSingleClassSession,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { ClassModel } from \"../Models/ClassModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/class/`;\r\n\r\nconst getClassDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getClassDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentEnrolledClassesApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentEnrolledClasses\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentUnenrolledClassTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentUnenrolledClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorClassTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addClassApi = async (payload: ClassModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateClassApi = async (\r\n  payload: ClassModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst approveClassApi = async (class_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"approveClass\", {\r\n    class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleClass\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getClassDataTableApi,\r\n  addClassApi,\r\n  updateClassApi,\r\n  getSingleClassApi,\r\n  getTutorClassTableApi,\r\n  approveClassApi,\r\n  getStudentEnrolledClassesApi,\r\n  getStudentUnenrolledClassTableApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { ClassReducerTypes } from \"../Types/ClassTypes\";\r\nimport { ClassModel } from \"../Models/ClassModel\";\r\nimport ClassApi from \"../Api/ClassApi\";\r\n\r\nexport const setClassDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_class_data_table\",\r\n      fetching_class_data_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getClassDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_class_data_table\",\r\n      fetching_class_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_class_data_table\",\r\n        class_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setTutorClassTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_table\",\r\n      fetch_tutor_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getTutorClassTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_table\",\r\n      fetch_tutor_class_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tutor_class_table\",\r\n        tutor_class_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setStudentUnenrolledClassTable = (\r\n  payload: PaginationModel\r\n) => async (dispatch: Dispatch<ClassReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_unenrolled_class_table\",\r\n      fetch_student_unenrolled_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentUnenrolledClassTableApi(\r\n      payload\r\n    );\r\n\r\n    console.log(`unenroled`, response);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_unenrolled_class_table\",\r\n        student_unenrolled_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_unenrolled_class_table\",\r\n      fetch_student_unenrolled_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setStudentEnrolledClassTable = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_enrolled_class_table\",\r\n      fetch_student_enrolled_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentEnrolledClassesApi();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_enrolled_class_table\",\r\n        student_enrolled_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_enrolled_class_table\",\r\n      fetch_student_enrolled_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedClassAction = (course_pk: number) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_class\",\r\n      fetching_selected_class: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getSingleClassApi(\r\n      course_pk\r\n    );\r\n\r\n    console.log(`res`, response);\r\n    dispatch({\r\n      type: \"fetching_selected_class\",\r\n      fetching_selected_class: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_class\",\r\n        selected_class: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addClassAction = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.addClassApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const approveClassAction = (\r\n  class_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.approveClassApi(class_pk);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\nexport const updateClassAction = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.updateClassApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface InfoDialogInterface {\r\n  open: boolean;\r\n  handleSetOpen: (open: boolean) => void;\r\n  title: any;\r\n  width?: number;\r\n}\r\n\r\nexport const InfoDialog: FC<InfoDialogInterface> = memo(\r\n  ({ open, handleSetOpen, children, title, width }) => {\r\n    return (\r\n      <StyledPagePrompt\r\n        open={open}\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        onEscapeKeyDown={() => {\r\n          handleSetOpen(false);\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            borderRadius: 10,\r\n            width: width ? width : 400,\r\n            overflowY: \"visible\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              justifyItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {title}\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent className=\"dialog-content\">{children}</DialogContent>\r\n\r\n        <DialogActions className=\"dialog-actions\">\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            startIcon={<CloseRoundedIcon fontSize=\"small\" />}\r\n            onClick={() => handleSetOpen(false)}\r\n            disableElevation\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </StyledPagePrompt>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InfoDialog;\r\n\r\nconst StyledPagePrompt = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n    .big-text {\r\n      color: red;\r\n      font-weight: 600;\r\n      font-size: 1.1em;\r\n    }\r\n    .small-text {\r\n      font-size: 0.87em;\r\n    }\r\n  }\r\n`;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateRangeRoundedIcon from \"@material-ui/icons/DateRangeRounded\";\r\nimport EventNoteRoundedIcon from \"@material-ui/icons/EventNoteRounded\";\r\nimport {\r\n  FieldArray,\r\n  FieldArrayRenderProps,\r\n  Form,\r\n  Formik,\r\n  FormikProps,\r\n  useFormikContext,\r\n} from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikAutocomplete from \"../../../Component/Formik/FormikAutocomplete\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { generateDailyWeekDaysDates } from \"../../../Hooks/UseScheduleGenerator\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n  setSnackbar,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport CourseApi from \"../../../Services/Api/CourseApi\";\r\nimport ClassSessionApi from \"../../../Services/Api/ClassSessionApi\";\r\nimport {\r\n  DbClassTypes,\r\n  DbCourseDurations,\r\n} from \"../../../Storage/LocalDatabase\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  generateTimeSlot,\r\n  TimeSlotInterface,\r\n} from \"../../../Hooks/UseTimeSlot\";\r\nimport { addClassAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport {\r\n  ClassSessionModel,\r\n  TutorFutureSessionModel,\r\n} from \"../../../Services/Models/ClassSessionModel\";\r\nimport InfoDialog from \"../../../Component/InfoDialog\";\r\n\r\ninterface AddClassAdminViewInterface {}\r\n\r\nconst initFormValues: ClassModel = {\r\n  class_desc: \"\",\r\n  course_pk: null,\r\n  course_desc: \"\",\r\n  course_duration: 0,\r\n  room_pk: null,\r\n  room_desc: \"\",\r\n  class_type: \"\",\r\n  tutor_pk: null,\r\n  tutor_name: \"\",\r\n  start_date: null,\r\n  start_time: \"\",\r\n  end_time: \"\",\r\n  session_count: 0,\r\n  class_sessions: [],\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  class_desc: yup.string().required().max(255).label(\"Class Description\"),\r\n  course_pk: yup.string().nullable().required().max(255).label(\"Course\"),\r\n  course_desc: yup.string().required().max(255).label(\"Course\"),\r\n  course_duration: yup.string().required().max(255).label(\"Class Duration\"),\r\n  room_pk: yup.string().nullable().required().max(255).label(\"Room\"),\r\n  room_desc: yup.string().required().max(255).label(\"Room\"),\r\n  class_type: yup.string().required().max(255).label(\"Class Type\"),\r\n  tutor_pk: yup.string().nullable().required().max(255).label(\"Tutor\"),\r\n  tutor_name: yup.string().required().max(255).label(\"Tutor\"),\r\n  start_date: yup.date().nullable().required().label(\"Start Date\"),\r\n  start_time: yup.string().required().max(255).label(\"Start Time\"),\r\n  end_time: yup.string().required().max(255).label(\"End Time\"),\r\n  session_count: yup\r\n    .number()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(11)\r\n    .label(\"Number of sessions\"),\r\n  class_sessions: yup.array().min(1, \"Please select at least one date\"),\r\n});\r\n\r\ninterface ReschedRpopsInterface {\r\n  open: boolean;\r\n  index?: number;\r\n}\r\n\r\nconst GetCourseDuration = () => {\r\n  const { values, setFieldValue } = useFormikContext<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchCourseDuration = async () => {\r\n      if (!values.course_pk) {\r\n        setFieldValue(\"course_duration\", \"\");\r\n      } else {\r\n        const response = await CourseApi.getCourseDurationApi(values.course_pk);\r\n        if (response?.data?.est_duration) {\r\n          setFieldValue(\"course_duration\", response?.data?.est_duration);\r\n        } else {\r\n          setFieldValue(\"course_duration\", \"\");\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && fetchCourseDuration();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [setFieldValue, values.course_pk]);\r\n\r\n  return null;\r\n};\r\n\r\nconst GetTutorFutureSessions = ({ handleSetTutorFutureSessions }) => {\r\n  const { values, setFieldValue } = useFormikContext<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetching = async () => {\r\n      if (!values.tutor_pk) {\r\n        handleSetTutorFutureSessions([]);\r\n      } else {\r\n        setFieldValue(\"class_sessions\", []);\r\n        const response = await ClassSessionApi.getTutorFutureSessionsApi(\r\n          values.tutor_pk\r\n        );\r\n        if (response?.data) {\r\n          handleSetTutorFutureSessions(response.data);\r\n        } else {\r\n          handleSetTutorFutureSessions([]);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && fetching();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [handleSetTutorFutureSessions, setFieldValue, values.tutor_pk]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const AddClassAdminView: FC<AddClassAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<ClassModel> | null>(null);\r\n\r\n  const [reschedProps, setReschedProps] = useState<ReschedRpopsInterface>({\r\n    open: false,\r\n    index: null,\r\n  });\r\n\r\n  const [tutorFutureSession, setTutorFutureSessions] = useState<\r\n    Array<TutorFutureSessionModel>\r\n  >([]);\r\n\r\n  const handleSetTutorFutureSessions = useCallback(\r\n    (sessions: Array<TutorFutureSessionModel>) => {\r\n      setTutorFutureSessions(sessions);\r\n    },\r\n    []\r\n  );\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (form_values: ClassModel) => {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addClassAction(form_values, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [openTutorFutureSched, setOpenTutorFutureSched] = useState(false);\r\n  const handleSetOpenTutorFutureSched = (open: boolean) => {\r\n    setOpenTutorFutureSched(open);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/class\",\r\n            title: \"Class\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Class\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n          <Form className=\"clinic-adding-form\">\r\n            {/* <pre> {JSON.stringify(values, null, 2)}</pre>\r\n            <pre> {JSON.stringify(errors, null, 2)}</pre> */}\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Step 1: Fill-up the class main information\r\n                </div>\r\n              </div>\r\n              <GetCourseDuration />\r\n              <GetTutorFutureSessions\r\n                handleSetTutorFutureSessions={handleSetTutorFutureSessions}\r\n              />\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      name=\"class_desc\"\r\n                      label=\"Class Description\"\r\n                      placeholder=\"Enter the class description\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikSelect\r\n                      data={DbClassTypes}\r\n                      label=\"Class Type\"\r\n                      name=\"class_type\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Room\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"room_pk\"\r\n                      selectFieldName=\"room_desc\"\r\n                      endPoint=\"api/room/searchRoom\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select room\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Course\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"course_pk\"\r\n                      selectFieldName=\"course_desc\"\r\n                      endPoint=\"api/course/searchCourse\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select course\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikSelect\r\n                      data={DbCourseDurations}\r\n                      label=\"Duration\"\r\n                      name=\"course_duration\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikInputField\r\n                      name=\"session_count\"\r\n                      label=\"Number of Sessions\"\r\n                      placeholder=\"Enter the number of sessions\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"number\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={10} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Tutor\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"tutor_pk\"\r\n                      selectFieldName=\"tutor_name\"\r\n                      endPoint=\"api/tutor/searchTutor\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select room\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2} item>\r\n                    <Tooltip title=\"See this tutor's PRIOR SCHEDULE\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          if (values.tutor_pk > 0) {\r\n                            handleSetOpenTutorFutureSched(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <EventNoteRoundedIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    {openTutorFutureSched && (\r\n                      <InfoDialog\r\n                        open={openTutorFutureSched}\r\n                        handleSetOpen={handleSetOpenTutorFutureSched}\r\n                        // title=\r\n                        title={\r\n                          <span>\r\n                            These are the upcoming sessions of tutor{\" \"}\r\n                            <span\r\n                              style={{ fontWeight: 900 }}\r\n                            >{` ${values.tutor_name}`}</span>\r\n                          </span>\r\n                        }\r\n                        width={600}\r\n                      >\r\n                        <Grid container spacing={1}>\r\n                          {tutorFutureSession.length <= 0 && (\r\n                            <div className=\"color\">\r\n                              No upcoming sessions yet.\r\n                            </div>\r\n                          )}\r\n                          {tutorFutureSession.map((v, i) => (\r\n                            <Grid key={i} item>\r\n                              <Chip\r\n                                label={\r\n                                  moment(new Date(v.start_date)).format(\r\n                                    \"MM/DD/YYYY\"\r\n                                  ) +\r\n                                  \" \" +\r\n                                  v.start_time +\r\n                                  \" - \" +\r\n                                  v.end_time\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                      </InfoDialog>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    {(() => {\r\n                      const name = \"start_date\";\r\n                      const label = \"Start Date\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (date) => {\r\n                        setFieldValue(name, moment(date).format());\r\n                      };\r\n                      return (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                              value={values.start_date}\r\n                              onChange={handleChange}\r\n                              label={label}\r\n                              variant=\"inline\"\r\n                              animateYearScrolling={true}\r\n                              disablePast={true}\r\n                              format=\"MM/dd/yyyy\"\r\n                              placeholder=\"MM/DD/YYYY\"\r\n                              fullWidth={true}\r\n                              inputVariant=\"outlined\"\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                              autoOk={true}\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    {(() => {\r\n                      const label = \"Time Slot\";\r\n\r\n                      const handleChange = (ts: TimeSlotInterface) => {\r\n                        setFieldValue(\"start_time\", ts.start_time);\r\n                        setFieldValue(\"end_time\", ts.end_time);\r\n                      };\r\n\r\n                      const errorText =\r\n                        errors.start_time && touched.start_time\r\n                          ? errors.start_time\r\n                          : \"\";\r\n\r\n                      return (\r\n                        <TextField\r\n                          label={label}\r\n                          // value={`${values.start_time} - ${values.end_time}`}\r\n                          value={JSON.stringify({\r\n                            start_time: values.start_time,\r\n                            end_time: values.end_time,\r\n                          })}\r\n                          fullWidth\r\n                          onChange={(e: any) => {\r\n                            handleChange(JSON.parse(e.target.value));\r\n                          }}\r\n                          error={!!errorText}\r\n                          helperText={errorText}\r\n                          variant=\"outlined\"\r\n                          select\r\n                        >\r\n                          {generateTimeSlot(values?.course_duration).map(\r\n                            (val: any, ind) => (\r\n                              <MenuItem key={ind} value={JSON.stringify(val)}>\r\n                                {val.start_time} - {val.end_time}\r\n                              </MenuItem>\r\n                            )\r\n                          )}\r\n                        </TextField>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Step 2: Review prior class sessions\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"box-body\">\r\n                <Button\r\n                  startIcon={<DateRangeRoundedIcon />}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    const session: Array<ClassSessionModel> = [];\r\n\r\n                    generateDailyWeekDaysDates({\r\n                      session_count: values.session_count,\r\n                      start_date: values.start_date,\r\n                      start_time: values.start_time,\r\n                      end_time: values.end_time,\r\n                      blocked_dates: tutorFutureSession,\r\n                    }).map((value) =>\r\n                      session.push({\r\n                        start_date: value,\r\n                      })\r\n                    );\r\n\r\n                    setFieldValue(\"class_sessions\", session);\r\n                  }}\r\n                >\r\n                  Generate date sessions\r\n                </Button>\r\n                {(() => {\r\n                  const errorText =\r\n                    errors.session_count && touched.session_count\r\n                      ? errors.session_count\r\n                      : \"\";\r\n\r\n                  if (!!errorText) {\r\n                    return <div className=\"error\">{errors.session_count}</div>;\r\n                  }\r\n                })()}\r\n                <Grid container justify=\"center\" spacing={2}></Grid>\r\n                <FieldArray\r\n                  name=\"class_sessions\"\r\n                  render={(arrayHelpers: FieldArrayRenderProps) => {\r\n                    return (\r\n                      <Grid container item spacing={2}>\r\n                        {values?.class_sessions?.map((session, i) => (\r\n                          <Grid item key={i}>\r\n                            <Chip\r\n                              label={`\r\n                                    ${moment(session.start_date).format(\r\n                                      \"MM/DD/YYYY\"\r\n                                    )} \r\n                                    -\r\n                                    ${moment(session.start_date).format(\"dd\")}\r\n                                    `}\r\n                              onDelete={() => {\r\n                                setReschedProps({\r\n                                  open: true,\r\n                                  index: i,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        ))}\r\n\r\n                        {(() => {\r\n                          const label = \"Start Date\";\r\n                          const handleChange = (resched_date: Date) => {\r\n                            let dup = false;\r\n\r\n                            values.class_sessions.some((d, i) => {\r\n                              if (\r\n                                moment(d.start_date).isSame(\r\n                                  moment(resched_date)\r\n                                )\r\n                              ) {\r\n                                dup = true;\r\n                                return true;\r\n                              }\r\n                              return false;\r\n                            });\r\n\r\n                            if (!dup) {\r\n                              arrayHelpers.push(resched_date);\r\n                              arrayHelpers.remove(reschedProps.index);\r\n                            } else {\r\n                              dispatch(\r\n                                setSnackbar(\r\n                                  \"The date you selected has already been added.\",\r\n                                  \"error\"\r\n                                )\r\n                              );\r\n                            }\r\n\r\n                            setReschedProps({\r\n                              open: false,\r\n                            });\r\n                          };\r\n                          return (\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                  value={values.start_date}\r\n                                  onChange={handleChange}\r\n                                  onClose={() => {\r\n                                    setReschedProps({\r\n                                      open: false,\r\n                                      index: undefined,\r\n                                    });\r\n                                  }}\r\n                                  label={label}\r\n                                  variant=\"dialog\"\r\n                                  open={reschedProps.open}\r\n                                  animateYearScrolling={true}\r\n                                  disablePast={true}\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  placeholder=\"MM/DD/YYYY\"\r\n                                  inputVariant=\"outlined\"\r\n                                  style={{ display: `none`, opacity: 0 }}\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                                  autoOk={false}\r\n                                  // error={!!errorText}\r\n                                  // helperText={errorText}\r\n                                />\r\n                              </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      label=\"Notes/Notice\"\r\n                      name=\"notes\"\r\n                      placeholder=\"Write some notes here...\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      multiline={true}\r\n                      rows={6}\r\n                    />\r\n                  </Grid> */}\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Class\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/room`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/room`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddClassAdminView;\r\n","import moment from \"moment\";\r\n\r\nexport interface TimeSlotInterface {\r\n  start_time?: string;\r\n  end_time?: string;\r\n}\r\n\r\nexport const generateTimeSlot = (minutes: number): Array<TimeSlotInterface> => {\r\n  const time_slots: Array<TimeSlotInterface> = [];\r\n\r\n  if (!minutes) {\r\n    return time_slots;\r\n  }\r\n\r\n  let initial_time = moment(\"07:00\", \"hh:mm A\");\r\n\r\n  do {\r\n    const ts: TimeSlotInterface = {};\r\n    ts.start_time = initial_time.format(\"hh:mm A\");\r\n\r\n    const end = initial_time.add(minutes, \"minutes\");\r\n    ts.end_time = end.format(\"hh:mm A\");\r\n    initial_time = end;\r\n\r\n    if (initial_time.isSameOrBefore(moment(\"20:00\", \"hh:mm A\"))) {\r\n      time_slots.push(ts);\r\n    }\r\n  } while (initial_time.isBefore(moment(\"20:00\", \"hh:mm A\")));\r\n\r\n  return time_slots;\r\n};\r\n","import {\r\n  FormControl,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\ninterface IDataTableSearch {\r\n  onSubmit: (values: any) => void;\r\n  handleSetSearchField: (value: string) => void;\r\n  searchField: string;\r\n}\r\n\r\nexport const DataTableSearch: FC<IDataTableSearch> = memo(\r\n  ({ onSubmit, searchField, handleSetSearchField }) => {\r\n    return (\r\n      <form onSubmit={onSubmit} style={{ minWidth: 400 }}>\r\n        <FormControl fullWidth variant=\"outlined\">\r\n          <OutlinedInput\r\n            style={{ borderRadius: `30px` }}\r\n            id=\"outlined-adornment-amount\"\r\n            placeholder=\"Enter the keywords to search\"\r\n            endAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <IconButton type=\"submit\">\r\n                  <SearchRoundedIcon color=\"primary\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            autoFocus\r\n            value={searchField}\r\n            onChange={(e) => {\r\n              handleSetSearchField(e.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSearch;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\n\r\ninterface IDataTableSort {\r\n  selectedSortIndex: string | number;\r\n  handleChagenSelectedSortIndex: (e: any) => void;\r\n  initialTableSort: any;\r\n}\r\n\r\nexport const DataTableSort: FC<IDataTableSort> = memo(\r\n  ({ selectedSortIndex, handleChagenSelectedSortIndex, initialTableSort }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: `grid`,\r\n          gridAutoFlow: \"column\",\r\n          alignItems: `center`,\r\n          alignContent: `center`,\r\n          gridGap: `.7em`,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontWeight: 500,\r\n            fontSize: `.9em`,\r\n          }}\r\n        >\r\n          Sort By:\r\n        </div>\r\n\r\n        <TextField\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          select\r\n          // size=\"small\"\r\n          fullWidth\r\n          value={selectedSortIndex}\r\n          style={{ width: 150 }}\r\n          SelectProps={{\r\n            disableUnderline: true,\r\n          }}\r\n          onChange={(e) => {\r\n            handleChagenSelectedSortIndex(e.target.value);\r\n          }}\r\n        >\r\n          {initialTableSort.map((sort, index) => (\r\n            <MenuItem key={index} className=\"sort-item\" value={index}>\r\n              {sort.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSort;\r\n","import { Button, IconButton, Paper, Popover } from \"@material-ui/core\";\r\nimport MoreHorizRoundedIcon from \"@material-ui/icons/MoreHorizRounded\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IIconButtonPopper {\r\n  buttonColor?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  iconColor?:\r\n    | \"inherit\"\r\n    | \"disabled\"\r\n    | \"action\"\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"error\"\r\n    | undefined;\r\n  buttons: Array<IButtonItem>;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n}\r\n\r\ninterface IButtonItem {\r\n  text: string;\r\n  Icon?: any;\r\n  disabled?: boolean;\r\n  handleClick?: () => void;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n}\r\n\r\nconst IconButtonPopper: React.FC<IIconButtonPopper> = memo(\r\n  ({ buttonColor, className, iconColor, buttons, style }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n      null\r\n    );\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n      <div style={style} className={className}>\r\n        <IconButton\r\n          color={buttonColor}\r\n          // color={buttonColor}\r\n          aria-describedby={id}\r\n          onClick={handleClick}\r\n          // size=\"small\"\r\n          style={{\r\n            backgroundColor: `rgba(255, 255, 255, 0.9)`,\r\n            color: `#333`,\r\n          }}\r\n        >\r\n          <MoreHorizRoundedIcon color={iconColor} />\r\n        </IconButton>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <PopperContent>\r\n            {buttons.map((btn: IButtonItem, index: number) => (\r\n              <Button\r\n                key={index}\r\n                color={btn.color}\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  handleClose();\r\n                  if (typeof btn.handleClick !== \"undefined\") {\r\n                    btn.handleClick();\r\n                  }\r\n                }}\r\n                startIcon={btn.Icon ? <btn.Icon fontSize=\"small\" /> : null}\r\n                disableElevation\r\n                disabled={btn.disabled}\r\n              >\r\n                <span style={{ fontWeight: 700, fontSize: `.87em` }}>\r\n                  {btn.text}\r\n                </span>\r\n              </Button>\r\n            ))}\r\n          </PopperContent>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default IconButtonPopper;\r\n\r\nconst PopperContent = styled(Paper)`\r\n  padding: 1em 0.5em;\r\n  display: grid;\r\n  grid-gap: 0.5em;\r\n  min-width: 150px;\r\n\r\n  .btn {\r\n  }\r\n  .MuiButton-label {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    justify-content: start;\r\n    justify-items: start;\r\n    align-items: center;\r\n    align-content: center;\r\n  }\r\n`;\r\n","import { LinearProgress } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface ILinearLoadingProgress {\r\n  show: boolean;\r\n}\r\n\r\nconst LinearLoadingProgress: React.FC<ILinearLoadingProgress> = memo(\r\n  ({ show }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          opacity: show ? 1 : 0,\r\n        }}\r\n      >\r\n        <LinearProgress />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinearLoadingProgress;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst useFilter = (\r\n  defaultSearch: any,\r\n  initialTableSort: any,\r\n  initialLimit: any\r\n) => {\r\n  const [tableSearch, setTableSearch] = useState(defaultSearch);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  const [tableLimit, setTableLimit] = useState(\r\n    typeof initialLimit === \"number\" ? initialLimit : 25\r\n  );\r\n  const [tablePage, setTablePage] = useState(0);\r\n  const [tableCount, setTableCount] = useState(0);\r\n\r\n  if (initialTableSort.length <= 0) {\r\n    console.error(`please make sure that the sort has value`);\r\n  }\r\n\r\n  const [selectedSortIndex, setSelectedSortIndex] = useState(0);\r\n  const [activeSort, setActiveSort] = useState(null);\r\n\r\n  const handleChagenSelectedSortIndex = useCallback((index) => {\r\n    setSelectedSortIndex(index);\r\n  }, []);\r\n\r\n  const handleSetSearchField = useCallback((value) => {\r\n    setSearchField(value);\r\n  }, []);\r\n\r\n  const handleSetTableSearch = useCallback((newState) => {\r\n    setTableSearch(newState);\r\n  }, []);\r\n\r\n  const handleSetLimit = useCallback((newLimit) => {\r\n    setTableLimit(newLimit);\r\n  }, []);\r\n\r\n  const handleSetPage = useCallback((newPage) => {\r\n    setTablePage(newPage);\r\n  }, []);\r\n\r\n  const handleSetCount = useCallback((newCount) => {\r\n    setTableCount(newCount);\r\n  }, []);\r\n\r\n  const handleChangePage = useCallback(\r\n    (event, page) => {\r\n      handleSetPage(page);\r\n    },\r\n    [handleSetPage]\r\n  );\r\n\r\n  const handleChangeRowsPerPage = useCallback(\r\n    (event) => {\r\n      if (typeof event.target.value !== \"undefined\") {\r\n        handleSetLimit(parseInt(event.target.value));\r\n        handleSetPage(0);\r\n      }\r\n    },\r\n    [handleSetLimit, handleSetPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const generateSearchFilters = () => {\r\n      const foundSortItem = initialTableSort[selectedSortIndex];\r\n\r\n      if (foundSortItem) {\r\n        if (foundSortItem?.value) {\r\n          setActiveSort(foundSortItem?.value);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && generateSearchFilters();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [initialTableSort, selectedSortIndex]);\r\n\r\n  return [\r\n    tableSearch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableCount,\r\n    activeSort,\r\n    searchField,\r\n    selectedSortIndex,\r\n    handleSetTableSearch,\r\n    // handleSetLimit,\r\n    // handleSetPage,\r\n    // handleSetCount,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    handleChagenSelectedSortIndex,\r\n    handleSetSearchField,\r\n  ];\r\n};\r\n\r\nexport default useFilter;\r\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledTableData = styled.div`\r\n  /* display: grid; */\r\n  grid-gap: 1em;\r\n  align-content: start;\r\n  align-items: start;\r\n  justify-items: start;\r\n\r\n  @media all and (min-width: ${(props) =>\r\n      props.theme.breakpoints.values.xs}px) {\r\n    grid-auto-flow: row;\r\n    grid-auto-columns: auto;\r\n  }\r\n\r\n  @media all and (min-width: ${(props) =>\r\n      props.theme.breakpoints.values.md}px) {\r\n    /* grid-auto-columns: 250px 100%; */\r\n    grid-auto-flow: column;\r\n  }\r\n\r\n  .table-grid {\r\n    .table-ctnr {\r\n      box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledBox = styled.div`\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */\r\n  border-radius: 10px;\r\n  padding: 1em;\r\n  background-color: #fdfdfd;\r\n\r\n  .box-title {\r\n    padding: 0.5em 0;\r\n    /* border-bottom: 1px solid rgba(0, 0, 0, 0.2); */\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    letter-spacing: 0.3pt;\r\n    word-spacing: 0.3pt;\r\n  }\r\n\r\n  .box-body {\r\n    margin: 1em 0;\r\n  }\r\n`;\r\n\r\nexport const StyledClassContainer = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 0.5em;\r\n  border: 0.05em solid rgba(0, 0, 0, 0.05);\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  height: 100%;\r\n  overflow: hidden;\r\n  &:hover {\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n    transition: 0.3s all ease-in-out;\r\n  }\r\n\r\n  .image {\r\n    display: inline-block;\r\n    position: relative;\r\n    height: 150px;\r\n    width: 100%;\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n      image-rendering: -webkit-optimize-contrast;\r\n    }\r\n\r\n    .btn {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      margin: 0.5em;\r\n    }\r\n  }\r\n\r\n  .info-container {\r\n    display: grid;\r\n    padding: 1em;\r\n    padding-top: 0.35em;\r\n    grid-gap: 0.4em;\r\n    align-items: start;\r\n    align-content: start;\r\n\r\n    .title {\r\n      border-radius: 3px;\r\n      grid-gap: 0.1em;\r\n      display: grid;\r\n      .main {\r\n        font-size: 1.1em;\r\n        font-weight: 600;\r\n      }\r\n      .sub {\r\n        font-size: 0.75em;\r\n        opacity: 0.7;\r\n        font-weight: 600;\r\n      }\r\n    }\r\n\r\n    .tutor {\r\n      display: grid;\r\n      align-items: center;\r\n      justify-content: start;\r\n      grid-auto-flow: column;\r\n      grid-gap: 0.5em;\r\n      font-weight: 600;\r\n      font-size: 0.9em;\r\n    }\r\n\r\n    .details {\r\n      margin-top: 1em;\r\n      font-size: 0.9em;\r\n\r\n      > * {\r\n        padding: 4px 0;\r\n      }\r\n\r\n      .time,\r\n      .item {\r\n        font-size: 0.87em;\r\n      }\r\n    }\r\n  }\r\n\r\n  .footer-ctnr {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-content: center;\r\n    grid-gap: 0.5em;\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nexport const StyledDashboardItem = styled.div`\r\n  display: grid;\r\n  align-items: center;\r\n  align-content: center;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 1.5em 1em;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 4px #e3f2fd;\r\n  border: 0.01em solid #e3f2fd;\r\n  align-items: center;\r\n  align-content: center;\r\n  justify-items: center;\r\n  text-align: center;\r\n  width: 200px;\r\n\r\n  .value {\r\n    font-weight: 900;\r\n    font-size: 1.8em;\r\n  }\r\n  .label {\r\n    font-weight: 700;\r\n    font-size: 0.82em !important;\r\n  }\r\n`;\r\n\r\nexport const StyledOpenClasses = styled.div`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  border: 0.02em solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n\r\n  .class-item {\r\n    display: grid;\r\n    border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n    padding: 0.2em 0;\r\n    .label {\r\n      font-weight: 900;\r\n      font-size: 0.67em;\r\n      opacity: 0.4;\r\n    }\r\n    .value {\r\n      font-weight: 600 !important;\r\n      font-size: 0.9em !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledClassMaterial = styled.div`\r\n  .zc {\r\n  }\r\n`;\r\n\r\nexport const StyledEnrolledClass = styled.div`\r\n  .enrolled-classes {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-gap: 1em;\r\n\r\n    .class-item {\r\n      display: grid;\r\n      grid-gap: 0.3em;\r\n      padding: 1em;\r\n      border-radius: 7px;\r\n      background-color: #fcfcfc;\r\n      border: 0.05em solid rgba(0, 0, 0, 0.1);\r\n\r\n      .class-title {\r\n        font-weight: 500;\r\n        display: grid;\r\n        align-items: center;\r\n        justify-content: start;\r\n        align-content: start;\r\n        grid-gap: 0.5em;\r\n        grid-auto-flow: column;\r\n\r\n        .circle {\r\n          height: 7px;\r\n          width: 7px;\r\n          background-color: yellowgreen;\r\n          border-radius: 50%;\r\n          animation: beat 0.5s infinite alternate;\r\n        }\r\n\r\n        @keyframes beat {\r\n          to {\r\n            transform: scale(1.4);\r\n          }\r\n        }\r\n      }\r\n\r\n      .sub-title {\r\n        font-size: 0.77em;\r\n        font-weight: 600;\r\n        opacity: 0.8;\r\n        margin-left: 1.3em;\r\n      }\r\n      .tutor {\r\n        display: grid;\r\n        grid-gap: 0.5em;\r\n        grid-auto-flow: column;\r\n        justify-content: start;\r\n        align-items: center;\r\n        align-content: center;\r\n        font-size: 0.9em;\r\n        .img {\r\n          height: 30px;\r\n          width: 30px;\r\n        }\r\n      }\r\n      .time {\r\n        font-size: 0.83em;\r\n        font-weight: 500;\r\n        justify-self: end;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledSessionTutorView = styled(Paper)`\r\n  grid-template-areas: \"course_img course_desc\" \"tabs tabs\";\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-auto-columns: 220px 1fr;\r\n  padding: 1em;\r\n  /* border-color: #fff; */\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */\r\n  width: 100%;\r\n\r\n  .course_img {\r\n    grid-area: course_img;\r\n    justify-self: center;\r\n  }\r\n  .course-desc {\r\n    grid-area: course_desc;\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    justify-items: start;\r\n    justify-content: start;\r\n    align-items: start;\r\n    align-content: start;\r\n\r\n    .course-title {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-items: start;\r\n      align-items: center;\r\n      grid-gap: 0.8em;\r\n      font-size: 2em;\r\n      font-weight: 500;\r\n    }\r\n    .course-subtitle {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-items: start;\r\n      grid-gap: 0.8em;\r\n      font-size: 0.87em;\r\n      font-weight: 600;\r\n      /* opacity: 0.9; */\r\n    }\r\n  }\r\n\r\n  .tabs {\r\n    grid-area: tabs;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 1fr;\r\n    grid-gap: 1em;\r\n\r\n    /* border-top: 2px solid rgba(0, 0, 0, 0.1); */\r\n    /* padding-top: 1em; */\r\n\r\n    .links {\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n      font-size: 0.93em;\r\n      padding-right: 0;\r\n      min-height: 500px;\r\n      height: 100%;\r\n      /* border-right: 2px solid rgba(0, 0, 0, 0.1); */\r\n      align-content: start;\r\n      align-items: start;\r\n      /* justify-items: center; */\r\n\r\n      /* box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1); */\r\n\r\n      .link-item {\r\n        color: black !important;\r\n        height: 2em;\r\n        display: grid;\r\n        align-items: center;\r\n        /* transition: 0.1s border-right ease-in-out; */\r\n        /* padding: 0 3.5em; */\r\n        /* text-align: center; */\r\n\r\n        &.link-item-active {\r\n          color: #3d5af1 !important;\r\n          /* border-right: 2px solid #3d5af1; */\r\n          /* transition: 0.1s border-right ease-in-out; */\r\n        }\r\n      }\r\n    }\r\n\r\n    .tab-container {\r\n      width: 100%;\r\n\r\n      .class-tab {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setClassDataTableAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface DataTableClassAdminInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const DataTableClassAdminView: FC<DataTableClassAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetching_class_data_table\r\n    );\r\n    const data_table: Array<ClassModel & StatusMasterModel> = useSelector(\r\n      (store: RootStore) => store.ClassReducer.class_data_table?.table\r\n    );\r\n\r\n    console.log(data_table);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setClassDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/class\",\r\n              title: \"Classes\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/class/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Class\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={3}>\r\n            <LinearLoadingProgress show={table_loading} />\r\n            {data_table?.length < 1 && (\r\n              <span className=\"empty-rows\">No records found!</span>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                className=\"class-container\"\r\n                style={{\r\n                  display: `grid`,\r\n                  gridGap: `1em`,\r\n                  alignItems: `start`,\r\n                  alignContent: `start`,\r\n                  gridTemplateColumns: `repeat(auto-fill, minmax(min(15rem, 100%), 1fr))`,\r\n                }}\r\n              >\r\n                {data_table?.map((v, i) => (\r\n                  <StyledClassContainer key={i}>\r\n                    <div className=\"image\">\r\n                      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                      <img\r\n                        src={`data:image/jpg;base64,${v.pic}`}\r\n                        alt={`no image found`}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"info-container\">\r\n                      <NavLink\r\n                        to={`/admin/class/${v.class_pk}`}\r\n                        className=\"title\"\r\n                      >\r\n                        {v.class_desc}\r\n                        {\" - \"}\r\n                        {v.course_desc}\r\n                      </NavLink>\r\n\r\n                      <div className=\"time\">\r\n                        {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                        {\" - \"}\r\n                        {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"item\"\r\n                        style={{ textTransform: `capitalize` }}\r\n                      >\r\n                        {v.tutor_name}\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"value\">\r\n                          {v.closed_sessions} of {v.session_count} completed\r\n                          sessions\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"status\">\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            justifyContent: `start`,\r\n                            justifyItems: `start`,\r\n                            alignItems: `center`,\r\n                            gridAutoFlow: `column`,\r\n                            gridAutoColumns: `1fr auto`,\r\n                          }}\r\n                        >\r\n                          <Chip\r\n                            label={v.sts_desc}\r\n                            style={{\r\n                              backgroundColor: v.sts_bgcolor,\r\n                              color: v.sts_color,\r\n                            }}\r\n                          />\r\n                          {v.sts_pk === \"fa\" && (\r\n                            <IconButtonPopper\r\n                              style={{}}\r\n                              buttons={[\r\n                                {\r\n                                  text: \"Cancel class\",\r\n                                  color: \"secondary\",\r\n                                },\r\n                              ]}\r\n                            />\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </StyledClassContainer>\r\n                ))}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableClassAdminView;\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addCourseApiAction } from \"../../../Services/Actions/CourseActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\nimport { DbCourseDurations } from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddCourseAdminViewInterface {}\r\n\r\nconst initFormValues: CourseModel = {\r\n  course_desc: \"\",\r\n  est_duration: 30,\r\n  picture: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  course_desc: yup.string().required().max(255).label(\"Course Description\"),\r\n  est_duration: yup\r\n    .number()\r\n    .moreThan(29, \"Duration must be 30 minutes or above\")\r\n    .lessThan(361, \"Duration must not exceed to 4hrs\")\r\n    .required()\r\n    .max(150)\r\n    .label(\"Estimated Duration\"),\r\n});\r\n\r\nexport const AddCourseAdminView: FC<AddCourseAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<CourseModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: CourseModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n      console.log(`formValues`, formValues);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addCourseApiAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/course\",\r\n            title: \"Courses\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Course\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"clinic-adding-form\">\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">Fill-up the course details</div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} md={4} lg={3} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={200}\r\n                        width={200}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        variant=\"rounded\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    md={8}\r\n                    lg={9}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\", marginTop: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        name=\"course_desc\"\r\n                        label=\"Course Description\"\r\n                        placeholder=\"Enter course description\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={6} item>\r\n                      <FormikSelect\r\n                        data={DbCourseDurations}\r\n                        label=\"Est. Duration\"\r\n                        name=\"est_duration\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        label=\"Notes/Notice\"\r\n                        name=\"notes\"\r\n                        placeholder=\"Write some notes here...\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        multiline={true}\r\n                        rows={6}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Course\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/course`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/course`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddCourseAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport CourseApi from \"../Api/CourseApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { CourseModel } from \"../Models/CourseModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { CourseReducerTypes } from \"../Types/CourseTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setCourseDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<CourseReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_course_data_table\",\r\n      fetching_course_data_table: true,\r\n    });\r\n    const response: IServerResponse = await CourseApi.getCourseDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_course_data_table\",\r\n      fetching_course_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_course_data_table\",\r\n        course_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedCourseAction = (course_pk: string) => async (\r\n  dispatch: Dispatch<CourseReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_course\",\r\n      fetching_selected_course: true,\r\n    });\r\n    const response: IServerResponse = await CourseApi.getSingleCourseApi(\r\n      course_pk\r\n    );\r\n    dispatch({\r\n      type: \"fetching_selected_course\",\r\n      fetching_selected_course: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_course\",\r\n        selected_course: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addCourseApiAction = (\r\n  payload: CourseModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.addCourseApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateCourseAction = (\r\n  payload: CourseModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.updateCourseApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import moment from \"moment\";\r\n\r\nexport const displayMySqlDate = (\r\n  date: string,\r\n  replaceEmpty?: string\r\n): string | undefined => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return replaceEmpty;\r\n  }\r\n  return moment(parsedDate).format(\"MMM. DD, YYYY\");\r\n};\r\n\r\nexport const displayMySqlDateTime = (date: string): string | null => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return null;\r\n  }\r\n\r\n  const parsedData = moment(parsedDate).format(\"MMM. DD, YYYY hh:mm A\");\r\n\r\n  if (!moment(parsedData).isValid()) {\r\n    return \"-\";\r\n  }\r\n\r\n  return parsedData;\r\n};\r\n\r\nexport const displayMySqlTime = (time: string): string | null => {\r\n  // const parsedDate = new Date(date);\r\n  // if (!moment(parsedDate).isValid) {\r\n  //   return null;\r\n  // }\r\n  // const parsedData = moment(parsedDate).format(\"hh:mm A\");\r\n  // return parsedData;\r\n\r\n  return moment(time, \"hh:mm:ss\").format(\"HH:mm a\");\r\n};\r\n\r\nexport const displaySex = (sex: \"m\" | \"f\") => {\r\n  if (sex.toLocaleLowerCase() === \"m\") {\r\n    return \"Male\";\r\n  }\r\n  if (sex.toLocaleLowerCase() === \"f\") {\r\n    return \"Female\";\r\n  }\r\n};\r\n\r\nexport const dateParseJsToAspDate = (date: Date): any => {\r\n  return moment(new Date(date)).format(\"LLLL\");\r\n};\r\n\r\nexport const InvalidTimeToDefault = (\r\n  date: Date | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const time = moment(date).format(\"hh:mm a\");\r\n\r\n  if (time.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return time;\r\n};\r\n\r\nexport const InvalidDateToDefault = (\r\n  date: Date | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseTimeOrDefault = (\r\n  time: string,\r\n  defaultString: string\r\n): string => {\r\n  if (!time) {\r\n    return defaultString;\r\n  }\r\n\r\n  const moment_time = moment(time, \"HH:mm:ss\");\r\n\r\n  if (moment_time.isValid()) {\r\n    const t = moment_time.format(\"HH:mma\");\r\n\r\n    return t;\r\n  } else {\r\n    return defaultString;\r\n  }\r\n};\r\n\r\nexport const parseDateOrDefault = (\r\n  date: Date | string | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseDateAndDayOfWeekOrDefault = (\r\n  date: Date | string | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"dddd, MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseDateTimeOrDefault = (\r\n  date: Date | string,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY HH:mm a\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setAdminDataTableAction } from \"../../../Services/Actions/AdminActions\";\r\nimport { setCourseDataTableAction } from \"../../../Services/Actions/CourseActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableCourseAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"\",\r\n    width: 300,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Duration\",\r\n    width: 100,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Notes\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableCourseAdminView: FC<DataTableCourseAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.CourseReducer.fetching_course_data_table\r\n    );\r\n    const data_table: Array<CourseModel> = useSelector(\r\n      (store: RootStore) => store.CourseReducer.course_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setCourseDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/course\",\r\n              title: \"Courses\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/course/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Course\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile no-sub\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.course_desc?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/course/${row.course_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.course_desc}\r\n                              </span>\r\n                            </NavLink>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.est_duration} mins</TableCell>\r\n                        <TableCell>\r\n                          <Tooltip title={row.notes ? \"-\" : \"row.notes\"}>\r\n                            <span\r\n                              style={{\r\n                                whiteSpace: `nowrap`,\r\n                                overflow: `hidden`,\r\n                                textOverflow: `ellipsis`,\r\n                                fontSize: \".8em\",\r\n                              }}\r\n                            >\r\n                              {row.notes}\r\n                            </span>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableCourseAdminView;\r\n","import { Container, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Label,\r\n  LabelList,\r\n  ResponsiveContainer,\r\n  Tooltip,\r\n  XAxis,\r\n  YAxis,\r\n} from \"recharts\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport {\r\n  StyledBox,\r\n  StyledDashboardItem,\r\n  StyledOpenClasses,\r\n} from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface IDashboardAdminView {}\r\n\r\nexport const DashboardAdminView: FC<IDashboardAdminView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/dashboard\",\r\n            title: \"Dashboard\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <StyledBox style={{ marginBottom: `2.5em` }}>\r\n        <div className=\"box-body\">\r\n          <Grid container spacing={2} justify=\"space-evenly\">\r\n            <Grid item>\r\n              <StyledDashboardItem>\r\n                <div className=\"value\">10</div>\r\n                <NavLink to=\"/admin/student\" className=\"label\">\r\n                  Students\r\n                </NavLink>\r\n              </StyledDashboardItem>\r\n            </Grid>\r\n            <Grid item>\r\n              <StyledDashboardItem>\r\n                <div className=\"value\">10</div>\r\n                <NavLink to=\"/admin/student\" className=\"label\">\r\n                  Tutors\r\n                </NavLink>\r\n              </StyledDashboardItem>\r\n            </Grid>\r\n            <Grid item>\r\n              <StyledDashboardItem>\r\n                <div className=\"value\">10</div>\r\n                <NavLink to=\"/admin/student\" className=\"label\">\r\n                  Administrators\r\n                </NavLink>\r\n              </StyledDashboardItem>\r\n            </Grid>\r\n            <Grid item>\r\n              <StyledDashboardItem>\r\n                <div className=\"value\">10</div>\r\n                <NavLink to=\"/admin/student\" className=\"label\">\r\n                  Courses\r\n                </NavLink>\r\n              </StyledDashboardItem>\r\n            </Grid>\r\n            <Grid item>\r\n              <StyledDashboardItem>\r\n                <div className=\"value\">10</div>\r\n                <NavLink to=\"/admin/student\" className=\"label\">\r\n                  Rooms\r\n                </NavLink>\r\n              </StyledDashboardItem>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </StyledBox>\r\n\r\n      <Grid container spacing={3} alignContent=\"flex-start\">\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={3}\r\n          alignContent=\"flex-start\"\r\n          spacing={2}\r\n          container\r\n        >\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{\r\n                fontSize: `.87em`,\r\n                fontWeight: 900,\r\n                letterSpacing: `.3pt`,\r\n                wordSpacing: `.3pt`,\r\n                opacity: 0.67,\r\n              }}\r\n            >\r\n              Open Classes - 3\r\n            </div>\r\n          </Grid>\r\n          <div\r\n            style={{\r\n              height: `auto`,\r\n              maxHeight: 800,\r\n              overflow: `hidden`,\r\n              overflowY: `auto`,\r\n              padding: `.5em`,\r\n            }}\r\n          >\r\n            <Grid item container spacing={2}>\r\n              <Grid\r\n                container\r\n                alignItems=\"flex-start\"\r\n                alignContent=\"flex-start\"\r\n                justify=\"center\"\r\n                spacing={1}\r\n              >\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n                <Grid item>\r\n                  <StyledOpenClasses>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">Class Title</div>\r\n                      <NavLink to=\"/admin/class/someid\" className=\"value\">\r\n                        Fun learning Math w/ Grade 12\r\n                      </NavLink>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Students</div>\r\n                      <div className=\"value\">10</div>\r\n                    </div>\r\n                    <div className=\"class-item\">\r\n                      <div className=\"label\">No. of Sessions</div>\r\n                      <div className=\"value\">3 of 5</div>\r\n                    </div>\r\n                  </StyledOpenClasses>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n        <Grid item xs={12} md={9} alignContent=\"flex-start\">\r\n          <Grid item xs={12}>\r\n            <div\r\n              style={{\r\n                fontSize: `.87em`,\r\n                fontWeight: 900,\r\n                letterSpacing: `.3pt`,\r\n                wordSpacing: `.3pt`,\r\n                opacity: 0.67,\r\n              }}\r\n            >\r\n              Closed Classes This Year - 19\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} container justify=\"center\">\r\n            <div\r\n              style={{\r\n                height: 800,\r\n                width: `100%`,\r\n                overflow: `auto`,\r\n              }}\r\n            >\r\n              <ResponsiveContainer minWidth={500}>\r\n                <BarChart\r\n                  margin={{ top: 50, right: 50, left: 50, bottom: 50 }}\r\n                  barGap={20}\r\n                  data={[\r\n                    {\r\n                      name: \"Math Quiz Bee training\",\r\n                      uv: 3.3,\r\n                    },\r\n                    {\r\n                      name: \"MDAS Mock up class\",\r\n                      uv: 5,\r\n                    },\r\n                    {\r\n                      name: \"Special Geometry 311 Tutorial\",\r\n                      uv: 4,\r\n                    },\r\n                    {\r\n                      name: \"Special Algebra 501 Tutorial\",\r\n                      uv: 4.2,\r\n                    },\r\n                    {\r\n                      name: \"Math competition training\",\r\n                      uv: 4,\r\n                    },\r\n                    {\r\n                      name: \"Math Quiz Bee training\",\r\n                      uv: 3.3,\r\n                    },\r\n                    {\r\n                      name: \"MDAS Mock up class\",\r\n                      uv: 5,\r\n                    },\r\n                    {\r\n                      name: \"Face to face tutorial w/ grade 10\",\r\n                      uv: 3.3,\r\n                    },\r\n                    {\r\n                      name: \"Special Math 501 Tutorial\",\r\n                      uv: 2.1,\r\n                    },\r\n                    {\r\n                      name: \"Special Geometry 311 Tutorial\",\r\n                      uv: 4,\r\n                    },\r\n                    {\r\n                      name: \"Special Algebra 501 Tutorial\",\r\n                      uv: 4.2,\r\n                    },\r\n                    {\r\n                      name: \"Math competition training\",\r\n                      uv: 4,\r\n                    },\r\n                    {\r\n                      name: \"Math Quiz Bee training\",\r\n                      uv: 3.3,\r\n                    },\r\n                    {\r\n                      name: \"MDAS Mock up class\",\r\n                      uv: 5,\r\n                    },\r\n                    {\r\n                      name: \"Face to face tutorial w/ grade 10\",\r\n                      uv: 3.3,\r\n                    },\r\n                    {\r\n                      name: \"Special Math 501 Tutorial\",\r\n                      uv: 2.1,\r\n                    },\r\n                    {\r\n                      name: \"Special Geometry 311 Tutorial\",\r\n                      uv: 4,\r\n                    },\r\n                    {\r\n                      name: \"Special Algebra 501 Tutorial\",\r\n                      uv: 4.2,\r\n                    },\r\n                    {\r\n                      name: \"MDAS Mock up class\",\r\n                      uv: 5,\r\n                    },\r\n                  ]}\r\n                >\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis\r\n                    height={200}\r\n                    dataKey=\"name\"\r\n                    type=\"category\"\r\n                    angle={-45}\r\n                    interval={0}\r\n                    textAnchor=\"end\"\r\n                    style={{\r\n                      fontSize: `.8em`,\r\n                      color: `black`,\r\n                      fontWeight: 900,\r\n                      letterSpacing: `.3pt`,\r\n                      wordSpacing: `.3pt`,\r\n                    }}\r\n                  >\r\n                    <Label\r\n                      style={{\r\n                        padding: `1em`,\r\n                        fontWeight: 900,\r\n                        fontSize: `.87em`,\r\n                      }}\r\n                      value=\"Closed Tutorial Classes\"\r\n                      offset={0}\r\n                      position=\"insideBottom\"\r\n                    />\r\n                  </XAxis>\r\n\r\n                  <YAxis\r\n                    dataKey=\"uv\"\r\n                    domain={[1, 5]}\r\n                    ticks={[1, 2, 3, 4, 5]}\r\n                    label={{\r\n                      value: \"Ratings (1-5)\",\r\n                      angle: -90,\r\n                      position: \"insideLeft\",\r\n                      textAnchor: \"middle\",\r\n                    }}\r\n                  />\r\n                  <Tooltip />\r\n                  <Bar dataKey=\"uv\" fill=\"#64b5f6\">\r\n                    <LabelList dataKey=\"uv\" data={null} />\r\n                  </Bar>\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DashboardAdminView;\r\n","import {\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { setStudentDataTableApi } from \"../../../Services/Actions/StudentActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { StudentModel } from \"../../../Services/Models/StudentModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableStudentAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Status\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableStudentAdminView: FC<DataTableStudentAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.StudentReducer.fetching_student_data_table\r\n    );\r\n    const data_table: Array<StudentModel & StatusMasterModel> = useSelector(\r\n      (store: RootStore) => store.StudentReducer.student_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setStudentDataTableApi(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/student\",\r\n              title: \"Students\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/stude/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Tutor\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid> */}\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">No records found.</span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/student/${row.student_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.firstname} {row.middlename} {row.lastname}{\" \"}\r\n                                {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">Grade {row.grade}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              <Chip\r\n                                style={{\r\n                                  backgroundColor: `${row?.sts_bgcolor}`,\r\n                                  color: row?.sts_color,\r\n                                  fontSize: `.87em`,\r\n                                }}\r\n                                label={row.sts_desc}\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableStudentAdminView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { TutorModel } from \"../Models/TutorModels\";\r\nimport { TutorRatingsModel } from \"../Models/TutorRatingsModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/tutor/`;\r\n\r\nexport const getTutorDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const addTutorApi = async (\r\n  payload: TutorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addTutor\", payload);\r\n  return response;\r\n};\r\n\r\nexport const updateTutorApi = async (\r\n  payload: TutorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateTutor\", payload);\r\n  return response;\r\n};\r\n\r\nexport const getSingleTutorApi = async (\r\n  tutor_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleTutor\", {\r\n    tutor_pk: tutor_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const searchTutorApi = async (\r\n  search: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchTutor\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const getDummyTutorsApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getDummyTutors\", null);\r\n  return response;\r\n};\r\n\r\nexport const insertDummyTutorRatingsApi = async (\r\n  payload: Array<TutorRatingsModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"insertDummyTutorRatings\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n","import * as yup from \"yup\";\r\nimport { validateEmail } from \"../Helpers/helpGetRegexValidators\";\r\n\r\nexport default yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  email: yup.string().required().matches(validateEmail),\r\n  gender: yup.string().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n});\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { addTutorAction } from \"../../../Services/Actions/TutorActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\nimport { DbTutorPositions } from \"../../../Storage/LocalDatabase\";\r\nimport AddAdminTutorSchema from \"../../../ValidationSchema/AddAdminTutorSchema\";\r\n\r\ninterface IAddAdminTutorView {}\r\n\r\nconst initialFormValues: TutorModel = {\r\n  position: \"\",\r\n  picture: \"\",\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  prefix: \"\",\r\n  birth_date: null,\r\n  bio: \"\",\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  gender: null,\r\n  complete_address: \"\",\r\n};\r\n\r\nexport const AddAdminTutorView: FC<IAddAdminTutorView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<TutorModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: TutorModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n      console.log(`formValues`, formValues);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addTutorAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/tutors\",\r\n            title: \"Tutors\",\r\n          },\r\n          {\r\n            link: \"/admin/tutors/add\",\r\n            title: \"Add Tutor\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Formik\r\n        initialValues={initialFormValues}\r\n        validationSchema={AddAdminTutorSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          setFieldValue,\r\n          handleChange,\r\n          setValues,\r\n        }) => (\r\n          <Form className=\"clinic-adding-form\">\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Fill-up the personal information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} md={4} lg={3} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={200}\r\n                        width={200}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    md={8}\r\n                    lg={9}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\", marginTop: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Prefix\"\r\n                        placeholder=\"Enter prefix\"\r\n                        name=\"prefix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Suffix\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Enter first name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Middle Name\"\r\n                        name=\"middlename\"\r\n                        placeholder=\"Enter middle name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Enter last name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const name = \"position\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name]}\r\n                            label=\"Position\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                            required\r\n                          >\r\n                            {DbTutorPositions.map((value) => (\r\n                              <MenuItem key={value} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                        const name = \"birth_date\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (date) => {\r\n                          setFieldValue(name, moment(date).toDate());\r\n                        };\r\n                        return (\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                              <KeyboardDatePicker\r\n                                value={values[name]}\r\n                                onChange={handleChange}\r\n                                label={label}\r\n                                variant=\"inline\"\r\n                                animateYearScrolling={true}\r\n                                disableFuture={true}\r\n                                format=\"MM/dd/yyyy\"\r\n                                placeholder=\"MM/DD/YYYY\"\r\n                                fullWidth={true}\r\n                                inputVariant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                autoOk={true}\r\n                                error={!!errorText}\r\n                                helperText={errorText}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email Address\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Phone Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phone Number\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        label=\"Complete Address\"\r\n                        name=\"complete_address\"\r\n                        placeholder=\"Enter complete address\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        multiline\r\n                        rows={2}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Add Tutor\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      // history.push(`/admin/clients`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another employee\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/tutors`);\r\n                }}\r\n              >\r\n                View all employees\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddAdminTutorView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport {\r\n  addTutorApi,\r\n  getSingleTutorApi,\r\n  getTutorDataTableApi,\r\n  insertDummyTutorRatingsApi,\r\n  updateTutorApi,\r\n} from \"../Api/TutorApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { TutorModel } from \"../Models/TutorModels\";\r\nimport { TutorRatingsModel } from \"../Models/TutorRatingsModel\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { TutorReducerTypes } from \"../Types/TutorTypes\";\r\n\r\nexport const setTutorDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCHING_TUTOR_DATA_TABLE\",\r\n      fetching_tutor_data_table: true,\r\n    });\r\n    const response: IServerResponse = await getTutorDataTableApi(payload);\r\n    console.log(`response`, response);\r\n    dispatch({\r\n      type: \"FETCHING_TUTOR_DATA_TABLE\",\r\n      fetching_tutor_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"TUTOR_DATA_TABLE\",\r\n        tutor_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const getSingleTutor = (tutor_pk: string) => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCHING_SINGLE_TUTOR\",\r\n      fetching_single_tutor: true,\r\n    });\r\n    const response: IServerResponse = await getSingleTutorApi(tutor_pk);\r\n    dispatch({\r\n      type: \"FETCHING_SINGLE_TUTOR\",\r\n      fetching_single_tutor: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SINGLE_TUTOR\",\r\n        single_tutor: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const addTutorAction = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await addTutorApi(payload);\r\n    console.log(`response`, response);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const updateTutorAction = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await updateTutorApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_SINGLE_TUTOR\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const insertDummyTutorRatingsAction = (\r\n  payload: Array<TutorRatingsModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message:\r\n          \"Saving your initial ratings, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await insertDummyTutorRatingsApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { setTutorDataTableAction } from \"../../../Services/Actions/TutorActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableAdminTutorViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableAdminTutorView: FC<DataTableAdminTutorViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.TutorReducer.fetching_tutor_data_table\r\n    );\r\n    const tutor_table: Array<TutorModel> = useSelector(\r\n      (store: RootStore) => store.TutorReducer.tutor_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setTutorDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/tutors\",\r\n              title: \"Tutors\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/tutors/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Tutor\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {tutor_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {tutor_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/tutor/${row.tutor_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.prefix} {row.firstname} {row.middlename}{\" \"}\r\n                                {row.lastname} {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">{row.position}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableAdminTutorView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdminModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/admin/`;\r\n\r\nexport const getAdminDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getAdminDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const addAdminApi = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const updateAdminApi = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const getSingleAdminApi = async (\r\n  admin_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleAdmin\", {\r\n    admin_pk,\r\n  });\r\n  return response;\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { validateEmail } from \"../../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addAdminAction } from \"../../../Services/Actions/AdminActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\nimport { DbAdminPositions } from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddCoAdminViewInterface {}\r\n\r\nconst initFormValues: AdminModel = {\r\n  position: \"\",\r\n  picture: \"\",\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  prefix: \"\",\r\n  birth_date: null,\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  gender: null,\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  email: yup.string().required().matches(validateEmail),\r\n  gender: yup.string().required().max(1).label(\"Gender\"),\r\n});\r\n\r\nexport const AddCoAdminView: FC<AddCoAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<AdminModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: AdminModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n      console.log(`formValues`, formValues);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addAdminAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/co-administrator\",\r\n            title: \"Co-administrators\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add administrator\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"clinic-adding-form\">\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Fill-up the personal information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} md={4} lg={3} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={200}\r\n                        width={200}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    md={8}\r\n                    lg={9}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\", marginTop: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Prefix\"\r\n                        placeholder=\"Enter prefix\"\r\n                        name=\"prefix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Suffix\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Enter first name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Middle Name\"\r\n                        name=\"middlename\"\r\n                        placeholder=\"Enter middle name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Enter last name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const name = \"position\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name]}\r\n                            label=\"Position\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                            required\r\n                          >\r\n                            {DbAdminPositions.map((value) => (\r\n                              <MenuItem key={value} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                        const name = \"birth_date\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (date) => {\r\n                          setFieldValue(name, moment(date).toDate());\r\n                        };\r\n                        return (\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                              <KeyboardDatePicker\r\n                                value={values[name]}\r\n                                onChange={handleChange}\r\n                                label={label}\r\n                                variant=\"inline\"\r\n                                animateYearScrolling={true}\r\n                                disableFuture={true}\r\n                                format=\"MM/dd/yyyy\"\r\n                                placeholder=\"MM/DD/YYYY\"\r\n                                fullWidth={true}\r\n                                inputVariant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                autoOk={true}\r\n                                error={!!errorText}\r\n                                helperText={errorText}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email Address\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Phone Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phone Number\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Administrator\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/co-administrator`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/co-administrator`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddCoAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport {\r\n  addAdminApi,\r\n  getAdminDataTableApi,\r\n  getSingleAdminApi,\r\n  updateAdminApi,\r\n} from \"../Api/AdminApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdminModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { AdminReducerTypes } from \"../Types/AdminTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setAdminDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: true,\r\n    });\r\n    const response: IServerResponse = await getAdminDataTableApi(payload);\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_admin_data_table\",\r\n        admin_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedTutorAction = (admin_pk: string) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: true,\r\n    });\r\n    const response: IServerResponse = await getSingleAdminApi(admin_pk);\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_admin\",\r\n        selected_admin: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addAdminAction = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await addAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateAdminAction = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await updateAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setAdminDataTableAction } from \"../../../Services/Actions/AdminActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableCoAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableCoAdminView: FC<DataTableCoAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.AdminReducer.fetching_admin_data_table\r\n    );\r\n    const data_table: Array<AdminModel> = useSelector(\r\n      (store: RootStore) => store.AdminReducer.admin_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setAdminDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/co-administrator\",\r\n              title: \"Co-administrators\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/co-administrator/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Administrator\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/co-administrator/${row.admin_pk}`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.prefix} {row.firstname} {row.middlename}{\" \"}\r\n                                {row.lastname} {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">{row.position}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableCoAdminView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { RoomModel } from \"../Models/RoomModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/room/`;\r\n\r\nconst getRoomDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getRoomDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addRoomApi = async (payload: RoomModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addRoom\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateRoomApi = async (payload: RoomModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateRoom\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleRoomApi = async (room_pk: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleRoom\", {\r\n    course_pk: room_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst searchRoomApi = async (search: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchRoom\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getRoomDataTableApi,\r\n  addRoomApi,\r\n  updateRoomApi,\r\n  getSingleRoomApi,\r\n  searchRoomApi,\r\n};\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addCourseApiAction } from \"../../../Services/Actions/CourseActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { addRoomAction } from \"../../../Services/Actions/RoomActions\";\r\nimport { RoomModel } from \"../../../Services/Models/RoomModel\";\r\n\r\ninterface AddRoomAdminViewInterface {}\r\n\r\nconst initFormValues: RoomModel = {\r\n  room_desc: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  room_desc: yup.string().required().max(255).label(\"Room Description\"),\r\n});\r\n\r\nexport const AddRoomAdminView: FC<AddRoomAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<RoomModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: RoomModel) => {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addRoomAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/room\",\r\n            title: \"Rooms\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Room\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form className=\"clinic-adding-form\">\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">Fill-up the room details</div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      name=\"room_desc\"\r\n                      label=\"Room Description\"\r\n                      placeholder=\"Enter room description\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      label=\"Notes/Notice\"\r\n                      name=\"notes\"\r\n                      placeholder=\"Write some notes here...\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      multiline={true}\r\n                      rows={6}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Room\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/room`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/room`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddRoomAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport RoomApi from \"../Api/RoomApi\";\r\nimport { RoomModel } from \"../Models/RoomModel\";\r\nimport { RoomReducerTypes } from \"../Types/RoomTypes\";\r\n\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setRoomDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<RoomReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_room_data_table\",\r\n      fetching_room_data_table: true,\r\n    });\r\n    const response: IServerResponse = await RoomApi.getRoomDataTableApi(\r\n      payload\r\n    );\r\n    console.log(`data_table response`, response);\r\n    dispatch({\r\n      type: \"fetching_room_data_table\",\r\n      fetching_room_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_room_data_table\",\r\n        room_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedRoomAction = (room_pk: string) => async (\r\n  dispatch: Dispatch<RoomReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_room\",\r\n      fetching_selected_room: true,\r\n    });\r\n    const response: IServerResponse = await RoomApi.getSingleRoomApi(room_pk);\r\n    dispatch({\r\n      type: \"fetching_selected_room\",\r\n      fetching_selected_room: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_room\",\r\n        selected_room: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addRoomAction = (\r\n  payload: RoomModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<RoomReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await RoomApi.addRoomApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateRoomAction = (\r\n  payload: RoomModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<RoomReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await RoomApi.updateRoomApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { setRoomDataTableAction } from \"../../../Services/Actions/RoomActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RoomModel } from \"../../../Services/Models/RoomModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableRoomAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Room\",\r\n    width: 300,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Notes\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableRoomAdminView: FC<DataTableRoomAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.RoomReducer.fetching_room_data_table\r\n    );\r\n    const data_table: Array<RoomModel> = useSelector(\r\n      (store: RootStore) => store.RoomReducer.room_data_table?.table\r\n    );\r\n\r\n    console.log(`data_table`, data_table);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setRoomDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/room\",\r\n              title: \"Rooms\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/room/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Room\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={1}>\r\n            <Grid item xs={12}>\r\n              <TableContainer style={{ minHeight: 500, borderRadius: 10 }}>\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <NavLink\r\n                            className=\"title\"\r\n                            to={`/admin/room/${row.room_pk}`}\r\n                          >\r\n                            <span\r\n                              style={{\r\n                                textTransform: \"capitalize\",\r\n                                fontWeight: 700,\r\n                              }}\r\n                            >\r\n                              {row.room_desc}\r\n                            </span>\r\n                          </NavLink>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Tooltip title={row.notes ? \"-\" : \"row.notes\"}>\r\n                            <span\r\n                              style={{\r\n                                whiteSpace: `nowrap`,\r\n                                overflow: `hidden`,\r\n                                textOverflow: `ellipsis`,\r\n                                fontSize: \".8em\",\r\n                              }}\r\n                            >\r\n                              {row.notes}\r\n                            </span>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableRoomAdminView;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AddClassAdminView from \"../Views/AdminViews/AdminClassView/AddClassAdminView\";\r\nimport { DataTableClassAdminView } from \"../Views/AdminViews/AdminClassView/DataTableClassAdminView\";\r\nimport AddCourseAdminView from \"../Views/AdminViews/AdminCourseView/AddCourseAdminView\";\r\nimport { DataTableCourseAdminView } from \"../Views/AdminViews/AdminCourseView/DataTableCourseAdminView\";\r\nimport DashboardAdminView from \"../Views/AdminViews/AdminDashboardView/DashboardAdminView\";\r\nimport DataTableStudentAdminView from \"../Views/AdminViews/AdminStudentView/DatatableStudentAdminView\";\r\nimport AddAdminTutorView from \"../Views/AdminViews/AdminTutorView/AddAdminTutorView\";\r\nimport DataTableAdminTutorView from \"../Views/AdminViews/AdminTutorView/DataTableAdminTutorView\";\r\nimport AddCoAdminView from \"../Views/AdminViews/CoAdminView/AddCoAdminView\";\r\nimport DataTableCoAdminView from \"../Views/AdminViews/CoAdminView/DataTableCoAdminView\";\r\nimport AddRoomAdminView from \"../Views/AdminViews/Room/AddRoomAdminView\";\r\nimport DataTableRoomAdminView from \"../Views/AdminViews/Room/DataTableRoomAdminView\";\r\n\r\nconst SysAdminRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/admin/dashboard\" exact>\r\n        <DashboardAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/class\" exact>\r\n        <DataTableClassAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/class/add\" exact>\r\n        <AddClassAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/course\" exact>\r\n        <DataTableCourseAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/course/add\" exact>\r\n        <AddCourseAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/tutor\" exact>\r\n        <DataTableAdminTutorView />\r\n      </Route>\r\n      <Route path=\"/admin/tutor/add\" exact>\r\n        <AddAdminTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/room\" exact>\r\n        <DataTableRoomAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/room/add\" exact>\r\n        <AddRoomAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/student\" exact>\r\n        <DataTableStudentAdminView />\r\n      </Route>\r\n\r\n      <Route path=\"/admin/co-administrator\" exact>\r\n        <DataTableCoAdminView />\r\n      </Route>\r\n      <Route path=\"/admin/co-administrator/add\" exact>\r\n        <AddCoAdminView />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default SysAdminRoutes;\r\n","import { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ITab {\r\n  label: String;\r\n  RenderComponent: React.FC | JSX.Element;\r\n}\r\n\r\ninterface ICustomTab {\r\n  tabs: Array<ITab>;\r\n}\r\n\r\nconst CustomTab: React.FC<ICustomTab> = memo(({ tabs }) => {\r\n  const theme = useTheme();\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <StyledCustomTabs>\r\n      <Grid container>\r\n        <Grid item xs={12} md={3} lg={2}>\r\n          <Tabs\r\n            orientation={desktop ? \"vertical\" : \"horizontal\"}\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            className=\"tabs\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            style={{\r\n              borderRight: desktop ? `1px solid ${theme.palette.divider}` : \"\",\r\n              borderBottom: !desktop\r\n                ? `1px solid ${theme.palette.divider}`\r\n                : \"\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            {tabs.map((value, index) => (\r\n              <Tab\r\n                label={value.label}\r\n                key={index}\r\n                value={index}\r\n                color=\"primary\"\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12} md={9} lg={10}>\r\n          <div className=\"body\">{tabs[value].RenderComponent}</div>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledCustomTabs>\r\n  );\r\n});\r\n\r\nexport default CustomTab;\r\n\r\nconst StyledCustomTabs = styled.div`\r\n  .tabs {\r\n    .Mui-selected {\r\n      /* color: #2196f3 !important; */\r\n    }\r\n\r\n    .MuiTab-wrapper {\r\n      font-weight: 700 !important;\r\n      letter-spacing: 0.3pt;\r\n      word-spacing: 0.3pt;\r\n    }\r\n  }\r\n  .body {\r\n    /* margin-top: 0.5em; */\r\n    padding: 1em;\r\n    padding-top: 0.5em;\r\n  }\r\n`;\r\n","import {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport React, { memo, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFormDialog {\r\n  open: boolean;\r\n  title: string;\r\n  handleClose?: () => void;\r\n  body?: any;\r\n  actions?: any;\r\n  minWidth?: number;\r\n  fullScreen?: boolean;\r\n  scroll?: \"body\" | \"paper\";\r\n}\r\n\r\nexport const FormDialog: React.FC<IFormDialog> = memo(\r\n  ({\r\n    children,\r\n    open,\r\n    title,\r\n    handleClose,\r\n    body,\r\n    actions,\r\n    minWidth,\r\n    fullScreen,\r\n    scroll,\r\n  }) => {\r\n    const theme = useTheme();\r\n    const descriptionElementRef = useRef<any>(null);\r\n    const mobile = useMediaQuery((theme: any) => theme.breakpoints.down(\"sm\"));\r\n    const dispatch = useDispatch();\r\n    const { radResultNo } = useParams<any>();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializeData = () => {};\r\n\r\n      mounted && open && initializeData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, radResultNo, open]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (open && mounted) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n          descriptionElement.focus();\r\n        }\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [open]);\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        scroll={scroll ? scroll : \"body\"}\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        fullScreen={fullScreen}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            minWidth: mobile\r\n              ? \"95%\"\r\n              : typeof minWidth === \"undefined\"\r\n              ? 750\r\n              : minWidth,\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitleStyle theme={theme} disableTypography={true}>\r\n          <div className=\"title\">{title}</div>\r\n\r\n          {typeof handleClose === \"function\" && (\r\n            <div className=\"toolbar\">\r\n              <Tooltip title=\"\">\r\n                <IconButton size=\"small\" onClick={handleClose}>\r\n                  <CancelPresentationIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </div>\r\n          )}\r\n        </DialogTitleStyle>\r\n\r\n        <DialogContentStyle theme={theme}>{body}</DialogContentStyle>\r\n        <DialogActionsStyle className=\"form-footer\">\r\n          {actions}\r\n        </DialogActionsStyle>\r\n      </Dialog>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormDialog;\r\n\r\nconst DialogTitleStyle = styled(DialogTitle)`\r\n  background-color: ${(p) => p.theme.palette.primary.light};\r\n  color: ${(p) => p.theme.palette.primary.contrastText};\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  font-size: 0.87em;\r\n  align-items: center;\r\n  align-content: center;\r\n  grid-gap: 1em;\r\n\r\n  .title {\r\n    font-weight: 900;\r\n  }\r\n\r\n  .toolbar {\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    color: ${(p) => p.theme.palette.primary.contrastText};\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n    .MuiSvgIcon-root {\r\n      color: ${(p) => p.theme.palette.primary.contrastText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DialogContentStyle = styled(DialogContent)`\r\n  /* margin: 0;\r\n  padding: 0; */\r\n  background-color: ${(p) => p.theme.palette.common.white};\r\n`;\r\nconst DialogActionsStyle = styled(DialogActions)`\r\n  /* background-color: #f0f0f0; */\r\n`;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n  SessionTaskSubModel,\r\n} from \"../Models/ClassSessionTaskModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/task/`;\r\n\r\nconst getAllClassTask = async (class_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTask\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassTask = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleClassTask\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addClassTask\", payload);\r\n  return response;\r\n};\r\nconst updateClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst toggleSubmitClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"toggleSubmitClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst changeStatusClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"changeStatusClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllClassTaskQues = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTaskQues\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassTaskQues = async (\r\n  task_ques_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getSingleClassTaskQues\",\r\n    { task_ques_pk: task_ques_pk }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateClassTaskQues = async (\r\n  payload: SessionTaskQuesModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateClassTaskQues\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllClassTaskSub = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTaskSub\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getAllStudentsSubmit = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllStudentsSubmit\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassTaskSub = async (\r\n  payload: Array<SessionTaskSubModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"addClassTaskSub\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateTaskSub = async (\r\n  payload: Array<SessionTaskSubModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateTaskSub\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getAllClassTask,\r\n  getSingleClassTask,\r\n  addClassTask,\r\n  updateClassTask,\r\n  toggleSubmitClassTask,\r\n  changeStatusClassTask,\r\n  getAllClassTaskQues,\r\n  getSingleClassTaskQues,\r\n  updateClassTaskQues,\r\n  getAllClassTaskSub,\r\n  addClassTaskSub,\r\n  getAllStudentsSubmit,\r\n  updateTaskSub,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassSessionTaskApi from \"../Api/ClassSessionTaskApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n  SessionTaskSubModel,\r\n} from \"../Models/ClassSessionTaskModels\";\r\nimport { ClassSessionTaskReducerTypes } from \"../Types/ClassSessionTaskTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setAllClassTask = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task\",\r\n      fetch_all_class_task: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTask(\r\n      class_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task\",\r\n        all_class_task: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task\",\r\n      fetch_all_class_task: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setSingleClassTask = (class_task_pk: number, toNull?: boolean) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  if (toNull) {\r\n    dispatch({\r\n      type: \"single_class_task\",\r\n      single_class_task: null,\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_task\",\r\n      fetch_single_class_task: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getSingleClassTask(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_task\",\r\n        single_class_task: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_single_class_task\",\r\n      fetch_single_class_task: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst addClassMaterialAction = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.addClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateClassMaterialAction = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst changeStatusClassTask = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.changeStatusClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst toggleSubmitClassTask = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.toggleSubmitClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateClassTaskQues = (\r\n  payload: SessionTaskQuesModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateClassTaskQues(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst addClassTaskSub = (\r\n  payload: Array<SessionTaskSubModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.addClassTaskSub(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateTaskSub = (\r\n  payload: Array<SessionTaskSubModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateTaskSub(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst setAllClassTaskQues = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTaskQues(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task_ques\",\r\n        all_class_task_ques: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setSingleClassTaskQues = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_task_ques\",\r\n      fetch_single_class_task_ques: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getSingleClassTaskQues(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_task_ques\",\r\n        single_class_task_ques: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setAllClassTaskSub = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task_sub\",\r\n      fetch_all_class_task_sub: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTaskSub(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task_sub\",\r\n        all_class_task_sub: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_sub\",\r\n      fetch_all_class_task_sub: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setAllStudentsSubmit = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_student_submit\",\r\n      fetch_all_student_submit: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllStudentsSubmit(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_student_submit\",\r\n        all_student_submit: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_student_submit\",\r\n      fetch_all_student_submit: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setAllClassTask,\r\n  setSingleClassTask,\r\n  setAllClassTaskQues,\r\n  setSingleClassTaskQues,\r\n  setAllClassTaskSub,\r\n  addClassMaterialAction,\r\n  updateClassMaterialAction,\r\n  changeStatusClassTask,\r\n  toggleSubmitClassTask,\r\n  updateClassTaskQues,\r\n  addClassTaskSub,\r\n  setAllStudentsSubmit,\r\n  updateTaskSub,\r\n};\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardDatePickerProps,\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport React from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface DateFieldHookFormProps extends Partial<KeyboardDatePickerProps> {\r\n  name: string;\r\n  onChange?: any;\r\n  type: \"date\" | \"datetime\" | \"time\";\r\n}\r\n\r\nconst DateFieldHookForm: React.FC<DateFieldHookFormProps> = React.memo(\r\n  (props) => {\r\n    const { control, errors } = useFormContext();\r\n\r\n    console.log(`errors`, errors);\r\n\r\n    let error = false;\r\n    let error_message = \"\";\r\n\r\n    if (errors && errors?.hasOwnProperty(props?.name)) {\r\n      error = true;\r\n      error_message = errors[props?.name]?.message;\r\n    }\r\n\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        name={props.name}\r\n        defaultValue={props.defaultValue}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n              {props.type === \"datetime\" && (\r\n                <KeyboardDateTimePicker\r\n                  {...props}\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  onBlur={onBlur}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  fullWidth={true}\r\n                  autoOk={true}\r\n                  error={error}\r\n                  helperText={error_message}\r\n                />\r\n              )}\r\n\r\n              {props.type === \"date\" && (\r\n                <KeyboardDatePicker\r\n                  {...props}\r\n                  onChange={onChange}\r\n                  onBlur={onBlur}\r\n                  value={value}\r\n                  disableToolbar\r\n                  format=\"MM/dd/yyyy\"\r\n                  fullWidth={true}\r\n                  autoOk={true}\r\n                  error={error}\r\n                  helperText={error_message}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        )}\r\n        // name={props.name}\r\n        // defaultValue={props.defaultValue}\r\n        // onChange={props.onChange}\r\n        // onBlur={props.onBlur}\r\n        // variant={props.variant}\r\n        // label={props.label}\r\n        // style={props.style}\r\n        // className={props.className}\r\n        // color={props.color}\r\n        // size={props.size}\r\n        // InputLabelProps={props.InputLabelProps}\r\n        // placeholder={props.placeholder}\r\n        // fullWidth={props.fullWidth}\r\n        // multiline={props.multiline}\r\n        // rows={props.rows}\r\n        // rowsMax={props.rowsMax}\r\n        // error={error}\r\n        // helperText={error_message}\r\n      />\r\n    );\r\n\r\n    // return (\r\n    //   <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    //     <Grid container justify=\"space-around\">\r\n    //       <KeyboardDatePicker\r\n    //         {...field}\r\n    //         onChange={handleChange}\r\n    //         disableToolbar\r\n    //         label={props.label}\r\n    //         variant=\"inline\"\r\n    //         animateYearScrolling={true}\r\n    //         disableFuture={disableFuture}\r\n    //         disablePast={disablePast}\r\n    //         format=\"MM/dd/yyyy\"\r\n    //         fullWidth={true}\r\n    //         inputVariant={variant ? variant : \"outlined\"}\r\n    //         InputLabelProps={{\r\n    //           shrink: true,\r\n    //         }}\r\n    //         autoOk={true}\r\n    //         error={!!errorText}\r\n    //         helperText={errorText}\r\n    //       />\r\n    //     </Grid>\r\n    //   </MuiPickersUtilsProvider>\r\n    // );\r\n  }\r\n);\r\n\r\nexport default DateFieldHookForm;\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface TextFieldHookFormProps {\r\n  textFieldProps: TextFieldProps;\r\n}\r\n\r\nexport const TextFieldHookForm: FC<TextFieldProps> = memo((props) => {\r\n  const { control, errors, getValues } = useFormContext();\r\n\r\n  let error = false;\r\n  let error_message = \"\";\r\n\r\n  if (errors && errors?.hasOwnProperty(props?.name)) {\r\n    error = true;\r\n    error_message = errors[props?.name]?.message;\r\n  }\r\n\r\n  return (\r\n    <Controller\r\n      name={props.name}\r\n      control={control}\r\n      // defaultValue={\"\"}\r\n      render={(\r\n        { onChange, onBlur, value, name, ref },\r\n        { invalid, isTouched, isDirty }\r\n      ) => (\r\n        <TextField\r\n          {...props}\r\n          name={name}\r\n          error={error}\r\n          defaultValue={value}\r\n          onBlur={onBlur}\r\n          onChange={onChange}\r\n          helperText={error_message}\r\n          inputRef={ref}\r\n          // onChange={props.onChange}\r\n          // type={props.type}\r\n          // onBlur={props.onBlur}\r\n          // variant={props.variant}\r\n          // label={props.label}\r\n          // style={props.style}\r\n          // className={props.className}\r\n          // color={props.color}\r\n          // size={props.size}\r\n          // InputLabelProps={props.InputLabelProps}\r\n          // placeholder={props.placeholder}\r\n          // fullWidth={props.fullWidth}\r\n          // multiline={props.multiline}\r\n          // rows={props.rows}\r\n          // rowsMax={props.rowsMax}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\n\r\nexport default TextFieldHookForm;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport DateFieldHookForm from \"../../../Component/HookForm/DateFieldHookForm\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport { SessionTaskModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport * as Yup from \"yup\";\r\nimport { useCallback } from \"react\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface IEditTaskDialog {\r\n  task: SessionTaskModel;\r\n  open: boolean;\r\n  handleSetOpenEditTask: (open: boolean) => void;\r\n}\r\n\r\nconst validate_task = Yup.object({\r\n  task_title: Yup.string().required().label(\"Task Title\"),\r\n  task_desc: Yup.string().required().label(\"Task Description\"),\r\n  due_date: Yup.string().nullable().required().label(\"Due Date\"),\r\n});\r\n\r\nexport const EditTaskDialog: FC<IEditTaskDialog> = memo(\r\n  ({ task, open, handleSetOpenEditTask }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task = useForm({\r\n      resolver: yupResolver(validate_task),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        task_title: task.task_title,\r\n        task_desc: task.task_desc,\r\n        due_date: task.due_date,\r\n      },\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        const payload: SessionTaskModel = {\r\n          ...data,\r\n          class_task_pk: task.class_task_pk,\r\n        };\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateClassMaterialAction(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setSingleClassTask(\r\n                        payload.class_task_pk\r\n                      )\r\n                    );\r\n                    handleSetOpenEditTask(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, form_edit_task, handleSetOpenEditTask, task.class_task_pk]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Edit Task Details\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleSetOpenEditTask(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task}>\r\n              <form\r\n                id=\"task-form\"\r\n                onSubmit={form_edit_task.handleSubmit(handleSubmitFormTask)}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <Grid item xs={6}>\r\n                    <TextFieldHookForm\r\n                      name=\"task_title\"\r\n                      label=\"Task Title\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <DateFieldHookForm\r\n                      name=\"due_date\"\r\n                      type=\"datetime\"\r\n                      fullWidth={true}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      inputVariant={\"outlined\"}\r\n                      disablePast\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"task_desc\"\r\n                      label=\"Task Description\"\r\n                      multiline={true}\r\n                      rows={3}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                      placeholder=\"Write the class description and/or instructions here...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTaskDialog;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskQuesModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\n\r\ninterface EditQuesProps {\r\n  task_ques: SessionTaskQuesModel;\r\n  open: boolean;\r\n  handleSetOpenEditQues: (open: boolean) => void;\r\n}\r\n\r\nconst validate_task_ques = Yup.object({\r\n  question: Yup.string().required().label(\"Question\"),\r\n  cor_answer: Yup.string().required().label(\"Correct Answert\"),\r\n  pnt: Yup.number().min(0).nullable().required().label(\"Point\"),\r\n});\r\n\r\nexport const EditQues: FC<EditQuesProps> = memo(\r\n  ({ task_ques, open, handleSetOpenEditQues }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task_ques = useForm({\r\n      resolver: yupResolver(validate_task_ques),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        question: task_ques.question,\r\n        cor_answer: task_ques.cor_answer,\r\n        pnt: task_ques.pnt,\r\n      },\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        const payload: SessionTaskQuesModel = {\r\n          ...data,\r\n          task_ques_pk: task_ques.task_ques_pk,\r\n        };\r\n\r\n        console.log(`payload`, payload);\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateClassTaskQues(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task_ques.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setAllClassTaskQues(\r\n                        task_ques.class_task_pk\r\n                      )\r\n                    );\r\n                    handleSetOpenEditQues(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [\r\n        dispatch,\r\n        form_edit_task_ques,\r\n        handleSetOpenEditQues,\r\n        task_ques.class_task_pk,\r\n        task_ques.task_ques_pk,\r\n      ]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Edit Task Details\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleSetOpenEditQues(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task_ques}>\r\n              <form\r\n                id=\"task-ques-form\"\r\n                onSubmit={form_edit_task_ques.handleSubmit(\r\n                  handleSubmitFormTask\r\n                )}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"question\"\r\n                      label=\"Question\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      multiline={true}\r\n                      rows={4}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"cor_answer\"\r\n                      label=\"Correct Answer\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      multiline={true}\r\n                      rows={2}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"pnt\"\r\n                      label=\"Points\"\r\n                      type=\"number\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                      placeholder=\"Write the class description and/or instructions here...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-ques-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditQues;\r\n","import {\r\n  Button,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { FormProvider, useFieldArray, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskQuesModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditQues from \"./EditQues\";\r\n\r\ninterface IManageTaskQuesView {\r\n  class_task_pk: number;\r\n}\r\n\r\nexport const ManageTaskQuesView: FC<IManageTaskQuesView> = memo(\r\n  ({ class_task_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_class_task_ques = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_class_task_ques\r\n    );\r\n    const fetch_all_class_task_ques = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassSessionTaskReducer.fetch_all_class_task_ques\r\n    );\r\n\r\n    const all_class_task_sub = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_class_task_sub\r\n    );\r\n\r\n    console.log(`all_class_task_sub`, all_class_task_sub);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer?.user?.user_type\r\n    );\r\n\r\n    console.log(`user_type`, user_type);\r\n\r\n    const [open_edit_ques, set_open_edit_ques] = useState(false);\r\n    const [\r\n      selected_task_ques,\r\n      set_selected_task_ques,\r\n    ] = useState<null | SessionTaskQuesModel>(null);\r\n\r\n    const handleSetOpenEditQues = useCallback((open: boolean) => {\r\n      set_open_edit_ques(open);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllClassTaskQues(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllClassTaskSub(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    useEffect(() => {\r\n      // all_class_task_sub && form_edit_task.setValue(all_class_task_sub, 1);\r\n      // return () => {};\r\n    }, []);\r\n\r\n    return (\r\n      <TableContainer>\r\n        <LinearLoadingProgress show={fetch_all_class_task_ques} />\r\n\r\n        {user_type === \"tutor\" ? (\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"5%\">#</TableCell>\r\n                <TableCell width=\"85%\">Question Details</TableCell>\r\n                <TableCell width=\"10%\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {all_class_task_ques?.map((q, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>{i + 1}</TableCell>\r\n                  <TableCell>\r\n                    <div\r\n                      style={{\r\n                        display: `grid`,\r\n                        gridGap: `.3em`,\r\n                        fontWeight: 500,\r\n                        fontSize: `.87em`,\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        Q: <span className=\"ques\">{q.question}</span>\r\n                      </div>\r\n                      <div>\r\n                        A: <span className=\"ques\">{q.cor_answer}</span>\r\n                      </div>\r\n                      <div>\r\n                        P: <span className=\"ques\">{q.pnt}</span>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={() => {\r\n                        handleSetOpenEditQues(true);\r\n                        set_selected_task_ques(q);\r\n                      }}\r\n                    >\r\n                      <EditRoundedIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          all_class_task_sub && (\r\n            <StudentQuestion all_class_task_sub={all_class_task_sub} />\r\n          )\r\n        )}\r\n        {selected_task_ques && open_edit_ques && (\r\n          <EditQues\r\n            handleSetOpenEditQues={handleSetOpenEditQues}\r\n            open={open_edit_ques}\r\n            task_ques={selected_task_ques}\r\n          />\r\n        )}\r\n      </TableContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageTaskQuesView;\r\n\r\nconst StudentQuestion = ({ all_class_task_sub }) => {\r\n  const dispatch = useDispatch();\r\n  const form_edit_task = useForm({\r\n    // resolver: yupResolver(validate_task),\r\n    mode: \"onBlur\",\r\n    defaultValues: {\r\n      questions: all_class_task_sub,\r\n    },\r\n  });\r\n\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control: form_edit_task.control,\r\n      name: \"questions\",\r\n    }\r\n  );\r\n\r\n  const handleSubmitFormTask = useCallback(\r\n    (data) => {\r\n      const payload = data.questions;\r\n\r\n      console.log(`payload`, data);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              ClassSessionTaskActions.addClassTaskSub(\r\n                payload,\r\n                (msg: string) => {\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setAllClassTaskSub(\r\n                      all_class_task_sub.class_task_pk\r\n                    )\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [all_class_task_sub.class_task_pk, dispatch]\r\n  );\r\n\r\n  return (\r\n    <FormProvider {...form_edit_task}>\r\n      <form\r\n        id=\"submit-ques-form\"\r\n        onSubmit={form_edit_task.handleSubmit(handleSubmitFormTask)}\r\n        noValidate\r\n      >\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"5%\">#</TableCell>\r\n              <TableCell width=\"40%\">Answer</TableCell>\r\n              <TableCell width=\"55%\">Questions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {fields.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n                <TableCell>\r\n                  <div\r\n                    style={{\r\n                      display: `grid`,\r\n                      gridGap: `.3em`,\r\n                      fontWeight: 500,\r\n                      fontSize: `.87em`,\r\n                    }}\r\n                  >\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].answer`}\r\n                      multiline={true}\r\n                      rows={2}\r\n                    />\r\n\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].task_sub_pk`}\r\n                      type=\"hidden\"\r\n                    />\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].task_ques_pk`}\r\n                      type=\"hidden\"\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small className=\"ques\">{item.question}</small>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div\r\n          style={{\r\n            display: `grid`,\r\n            justifyContent: `end`,\r\n            justifyItems: `end`,\r\n            width: `100%`,\r\n            padding: `1em`,\r\n          }}\r\n        >\r\n          <Button\r\n            form=\"submit-ques-form\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Submit & Save Answers\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFieldArray,\r\n  useForm,\r\n} from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskSubModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\n\r\ninterface ViewSubmissionDialogProps {\r\n  selected_submission: SessionTaskSubModel;\r\n  open: boolean;\r\n  handleViewSubmitDtls: (open: boolean) => void;\r\n  class_task_pk: number;\r\n}\r\n\r\n// const validate_task_ques = Yup.object({\r\n//   is_corrent: Yup.string().required().label(\"Correct Answert\"),\r\n// });\r\n\r\nexport const ViewSubmissionDialog: FC<ViewSubmissionDialogProps> = memo(\r\n  ({ selected_submission, class_task_pk, open, handleViewSubmitDtls }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task_ques = useForm<SessionTaskSubModel>({\r\n      //   resolver: yupResolver(validate_task_ques),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        questions: selected_submission.questions,\r\n      },\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n      control: form_edit_task_ques.control,\r\n      name: \"questions\",\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        console.log(`payload data`, data);\r\n\r\n        const payload: any = [];\r\n\r\n        data?.questions?.forEach((element) => {\r\n          console.log(`element`, element);\r\n          payload.push({\r\n            is_correct: element.is_correct === true ? \"y\" : \"n\",\r\n            task_sub_pk: element.task_sub_pk,\r\n          });\r\n        });\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateTaskSub(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task_ques.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setAllStudentsSubmit(\r\n                        class_task_pk\r\n                      )\r\n                    );\r\n                    handleViewSubmitDtls(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [class_task_pk, dispatch, form_edit_task_ques, handleViewSubmitDtls]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"VIew Student Submission\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleViewSubmitDtls(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task_ques}>\r\n              <form\r\n                id=\"task-sub-ques-form\"\r\n                onSubmit={form_edit_task_ques.handleSubmit(\r\n                  handleSubmitFormTask\r\n                )}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <TableContainer>\r\n                    {/* <LinearLoadingProgress show={fetch_all_student_submit} /> */}\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell width=\"5%\">#</TableCell>\r\n                          <TableCell width=\"5%\">Check</TableCell>\r\n                          <TableCell width=\"20%\">Answer</TableCell>\r\n                          <TableCell width=\"60%\">Question</TableCell>\r\n                          <TableCell width=\"5%\">Points</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {fields.map((item, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>\r\n                              <Controller\r\n                                name={`questions[${index}].is_correct`}\r\n                                control={form_edit_task_ques.control}\r\n                                render={(props) => (\r\n                                  <Checkbox\r\n                                    {...props}\r\n                                    onChange={(e) =>\r\n                                      props.onChange(e.target.checked)\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              />\r\n                              <TextFieldHookForm\r\n                                name={`questions[${index}].task_sub_pk`}\r\n                                type=\"hidden\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <small className=\"ques\">{item.answer}</small>\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                              <small className=\"ques\">Q: {item.question}</small>\r\n                              <div>\r\n                                A: <small>{item.answer}</small>\r\n                              </div>\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                              <small className=\"ques\">{item.pnt}</small>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-sub-ques-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Submit Work\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default ViewSubmissionDialog;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { SessionTaskSubModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport ViewSubmissionDialog from \"./ViewSubmissionDialog\";\r\n\r\ninterface IManageTaskSubmit {\r\n  class_task_pk: number;\r\n}\r\n\r\nexport const ManageTaskSubmit: FC<IManageTaskSubmit> = memo(\r\n  ({ class_task_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_student_submit = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_student_submit\r\n    );\r\n    const fetch_all_student_submit = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassSessionTaskReducer.fetch_all_student_submit\r\n    );\r\n\r\n    const [view_submit_dtls, set_view_submit_dtls] = useState(false);\r\n    const [\r\n      selected_submit,\r\n      set_selected_submit,\r\n    ] = useState<SessionTaskSubModel>(null);\r\n\r\n    const handleViewSubmitDtls = useCallback((open: boolean) => {\r\n      set_view_submit_dtls(open);\r\n    }, []);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer?.user?.user_type\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllStudentsSubmit(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    return (\r\n      <TableContainer>\r\n        <LinearLoadingProgress show={fetch_all_student_submit} />\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"5%\">#</TableCell>\r\n              <TableCell width=\"70%\">Student</TableCell>\r\n              <TableCell width=\"20%\">Submitted At</TableCell>\r\n              <TableCell width=\"5%\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {all_student_submit?.map((s, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{i + 1}</TableCell>\r\n                <TableCell>\r\n                  <div\r\n                    style={{\r\n                      display: `grid`,\r\n                      gridGap: `.3em`,\r\n                      fontWeight: 500,\r\n                      fontSize: `.87em`,\r\n                    }}\r\n                  >\r\n                    <span className=\"ques\"></span>\r\n                    <div className=\"table-cell-profile\">\r\n                      <CustomAvatar\r\n                        className=\"image\"\r\n                        src={s.student.picture}\r\n                        errorMessage={s.student.lastname.charAt(0)}\r\n                      />\r\n                      <div className=\"title\">\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          {s.student.lastname},{s.student.firstname}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"sub-title\">Grade {s.student.grade}</div>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small> {parseDateTimeOrDefault(s.answered_at, \"-\")}</small>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      handleViewSubmitDtls(true);\r\n                      console.log(`s`, s);\r\n                      set_selected_submit(s);\r\n                    }}\r\n                  >\r\n                    <EditRoundedIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {selected_submit && (\r\n          <ViewSubmissionDialog\r\n            selected_submission={selected_submit}\r\n            handleViewSubmitDtls={handleViewSubmitDtls}\r\n            open={view_submit_dtls}\r\n            class_task_pk={class_task_pk}\r\n          />\r\n        )}\r\n      </TableContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageTaskSubmit;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomTab from \"../../../Component/CustomTabs\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditTaskDialog from \"./EditTaskDialog\";\r\nimport ManageTaskQuesViewStud from \"./ManageTaskQuesStud\";\r\nimport ManageTaskQuesView from \"./ManageTaskQuesView\";\r\nimport ManageTaskSubmit from \"./ManageTaskSubmit\";\r\ninterface IManageTaskView {}\r\n\r\nexport const ManageTaskView: FC<IManageTaskView> = memo(() => {\r\n  const theme = useTheme();\r\n  const md_screen = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n  const single_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.single_class_task\r\n  );\r\n\r\n  const [open_edit_task, set_open_edit_task] = useState(false);\r\n\r\n  const handleSetOpenEditTask = useCallback((open: boolean) => {\r\n    set_open_edit_task(open);\r\n  }, []);\r\n\r\n  const [tabs, set_tabls] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const loadTabs = () => {\r\n      set_tabls((tabs) => {\r\n        return [\r\n          {\r\n            label: \"Questions\",\r\n            RenderComponent: (\r\n              <ManageTaskQuesView\r\n                class_task_pk={single_class_task?.class_task_pk}\r\n              />\r\n            ),\r\n          },\r\n          {\r\n            label: \"Submissions\",\r\n            RenderComponent: (\r\n              <ManageTaskSubmit\r\n                class_task_pk={single_class_task?.class_task_pk}\r\n              />\r\n            ),\r\n          },\r\n        ];\r\n      });\r\n    };\r\n\r\n    mounted && user && loadTabs();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [single_class_task, user]);\r\n\r\n  return (\r\n    <>\r\n      {single_class_task && (\r\n        <FormDialog\r\n          open={true}\r\n          fullScreen={md_screen}\r\n          minWidth={theme.breakpoints.values.lg}\r\n          handleClose={() =>\r\n            dispatch(ClassSessionTaskActions.setSingleClassTask(0, true))\r\n          }\r\n          title=\"Task Information\"\r\n          body={\r\n            <Container maxWidth=\"lg\" style={{ padding: `1em` }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  {user?.user_type === \"tutor\" && (\r\n                    <div\r\n                      style={{\r\n                        padding: `1em`,\r\n                        display: `grid`,\r\n                        gridGap: `.5em`,\r\n                        gridAutoFlow: `column`,\r\n                        justifyContent: `start`,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          handleSetOpenEditTask(true);\r\n                        }}\r\n                      >\r\n                        Edit Task\r\n                      </Button>\r\n\r\n                      {single_class_task?.sts_pk === \"c\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              sts_pk: \"s\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.changeStatusClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Start Task\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.allow_submit === \"n\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              allow_submit: \"y\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.toggleSubmitClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Allow Sub.\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.sts_pk === \"s\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              sts_pk: \"c\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.changeStatusClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Cancel Task\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.allow_submit === \"y\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              allow_submit: \"n\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.toggleSubmitClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Disallow Sub.\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  <h2>{single_class_task?.task_title}</h2>\r\n                  <div>\r\n                    {parseDateTimeOrDefault(single_class_task?.due_date, \"-\")}\r\n                  </div>\r\n                  <div>\r\n                    <Chip\r\n                      label={single_class_task?.status_dtls?.sts_desc}\r\n                      title={single_class_task?.status_dtls?.sts_desc}\r\n                      style={{\r\n                        color: single_class_task?.status_dtls?.sts_color,\r\n                        backgroundColor:\r\n                          single_class_task?.status_dtls?.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div>{single_class_task?.task_desc}</div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <CustomTab tabs={tabs} />\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          }\r\n          actions={<>Some Actions</>}\r\n        />\r\n      )}\r\n\r\n      {single_class_task && (\r\n        <EditTaskDialog\r\n          task={single_class_task}\r\n          open={open_edit_task}\r\n          handleSetOpenEditTask={handleSetOpenEditTask}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ManageTaskView;\r\n","import { useTheme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IBody {\r\n  isOpenMobileHeader: boolean;\r\n}\r\nconst Body: React.FC<IBody> = memo(({ children, isOpenMobileHeader }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledBody\r\n      theme={theme}\r\n      className={clsx(\"\", {\r\n        \"expand-body\": isOpenMobileHeader,\r\n      })}\r\n    >\r\n      {children}\r\n    </StyledBody>\r\n  );\r\n});\r\nexport default Body;\r\nconst StyledBody = styled.main`\r\n  margin-top: ${(p) => p.theme.header.height + 50}px !important;\r\n  transition: 0.2s margin-top ease-in-out;\r\n  /* background-color: #fcfcfc;q */\r\n\r\n  &.expand-body {\r\n    margin-top: ${(p) => p.theme.header.height * 2 + 50}px !important;\r\n    transition: 0.2s margin-top ease-in-out;\r\n  }\r\n\r\n  .page-container {\r\n    background-color: #fff !important;\r\n    min-height: calc(100vh - ${(p) => p.theme.header.height + 40}px) !important;\r\n    /* border-radius: 5px; */\r\n    padding: 0.5em;\r\n    /* border: 0.01em solid rgba(0, 0, 0, 0.1); */\r\n    /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledMessage = styled.div``;\r\n\r\nexport const StyledMessagePopOver = styled.div`\r\n  width: 360px;\r\n\r\n  .content-header {\r\n    overflow: hidden;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    grid-gap: 0.5em;\r\n    padding: 1em;\r\n\r\n    color: ${(p) => p.theme.palette.primary.contrastText} !important;\r\n    background-color: ${(p) => p.theme.palette.primary.light}!important;\r\n    .title {\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1em;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 600;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Badge, IconButton, Popover, useTheme } from \"@material-ui/core\";\r\nimport MessageIcon from \"@material-ui/icons/Message\";\r\nimport React from \"react\";\r\nimport { StyledMessage, StyledMessagePopOver } from \"./styles\";\r\n\r\nconst Message = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledMessage>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        color=\"inherit\"\r\n        size=\"small\"\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <Badge badgeContent={0} showZero={true} color=\"secondary\">\r\n          <MessageIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledMessagePopOver theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <div className=\"title\">Messages</div>\r\n            <div className=\"subtitle\">\r\n              You have <strong>21</strong> unread messages\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n          </div>\r\n        </StyledMessagePopOver>\r\n      </Popover>\r\n    </StyledMessage>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledNotification = styled.div``;\r\n\r\nexport const StyledNotificationPopOver = styled.div`\r\n  width: 360px;\r\n\r\n  .content-header {\r\n    overflow: hidden;\r\n    color: ${(p) => p.theme.palette.primary.contrastText} !important;\r\n    background-color: ${(p) => p.theme.palette.primary.light}!important;\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    grid-gap: 0.5em;\r\n    padding: 1em;\r\n    .title {\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1em;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 600;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Badge, IconButton, Popover, useTheme } from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport React from \"react\";\r\nimport { StyledNotification, StyledNotificationPopOver } from \"./styles\";\r\n\r\nconst Notification = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledNotification>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        color=\"inherit\"\r\n        size=\"small\"\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <Badge badgeContent={0} showZero={true} color=\"secondary\">\r\n          <NotificationsIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledNotificationPopOver theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <div className=\"title\">Notifications</div>\r\n            <div className=\"subtitle\">\r\n              You have <strong>21</strong> unread notifacations\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n          </div>\r\n        </StyledNotificationPopOver>\r\n      </Popover>\r\n    </StyledNotification>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import { AppBar, Breadcrumbs, useTheme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\ninterface ILink {\r\n  link: string;\r\n  title: string;\r\n}\r\n\r\ninterface IPageLinks {\r\n  links: Array<ILink>;\r\n  isOpenMobileHeader?: boolean;\r\n}\r\n\r\nconst PageLinks: FC<IPageLinks> = memo(({ links, isOpenMobileHeader }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <StyledPageLinks\r\n      theme={theme}\r\n      className={clsx(\"\", {\r\n        \"expand-navlinks\": isOpenMobileHeader,\r\n      })}\r\n    >\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className=\"bread-crumb\">\r\n        {links.map((v, i) => (\r\n          <Link\r\n            key={i}\r\n            style={{ color: `#333` }}\r\n            to={v.link}\r\n            className=\"navText\"\r\n          >\r\n            {v.title}\r\n          </Link>\r\n        ))}\r\n      </Breadcrumbs>\r\n    </StyledPageLinks>\r\n  );\r\n});\r\n\r\nexport default PageLinks;\r\n\r\nconst StyledPageLinks = styled(AppBar)`\r\n  padding: 0 1em;\r\n  background-color: ${(p) => p.theme.body.backgroundColor} !important;\r\n  height: 45px;\r\n  max-height: 45px;\r\n  display: grid !important;\r\n  align-content: center !important;\r\n  border: none !important;\r\n  box-shadow: none !important;\r\n  margin-top: ${(p) => p.theme.header.height}px !important;\r\n  transition: 0.2s margin-top ease-in-out !important;\r\n  &.expand-navlinks {\r\n    transition: 0.2s margin-top ease-in-out !important;\r\n    margin-top: ${(p) => p.theme.header.height * 2}px !important;\r\n  }\r\n  .bread-crumb {\r\n    .navText {\r\n      text-decoration: none !important;\r\n      font-weight: 500 !important;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledTaskMenu = styled.div``;\r\n\r\nexport const StyledTaskMenuPopOver = styled.div`\r\n  width: 360px;\r\n\r\n  .content-header {\r\n    overflow: hidden;\r\n\r\n    box-shadow: 0 2px 3px rgba(0, 0, 0, 0.2);\r\n    display: grid;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n    justify-items: center;\r\n    grid-gap: 0.5em;\r\n    padding: 1em;\r\n\r\n    color: ${(p) => p.theme.palette.primary.contrastText} !important;\r\n    background-color: ${(p) => p.theme.palette.primary.light}!important;\r\n    .title {\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .subtitle {\r\n      font-size: 1em;\r\n      font-weight: 400;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 600;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Badge, IconButton, Popover, useTheme } from \"@material-ui/core\";\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\nimport React from \"react\";\r\nimport { StyledTaskMenu, StyledTaskMenuPopOver } from \"./styles\";\r\n\r\nconst TaskMenu = () => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = (event: any) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n  return (\r\n    <StyledTaskMenu>\r\n      <IconButton\r\n        aria-describedby={id}\r\n        color=\"inherit\"\r\n        size=\"small\"\r\n        onClick={handleClick}\r\n        className=\"icon-header\"\r\n      >\r\n        <Badge badgeContent={5} showZero={true} color=\"secondary\">\r\n          <AssignmentRoundedIcon />\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledTaskMenuPopOver theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <div className=\"title\">Tasks</div>\r\n            <div className=\"subtitle\">\r\n              You have <strong>5</strong> on-going tasks\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n          </div>\r\n        </StyledTaskMenuPopOver>\r\n      </Popover>\r\n    </StyledTaskMenu>\r\n  );\r\n};\r\n\r\nexport default TaskMenu;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledUserProfile = styled.div`\r\n  margin-left: 1em;\r\n  .header {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-template-areas: \"image icon user\";\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n\r\n      .profile-image,\r\n      .icon {\r\n        transition: 0.3s all ease-in-out;\r\n      }\r\n    }\r\n    .profile-image {\r\n      grid-area: image;\r\n      height: 45px;\r\n      width: 43px;\r\n      img {\r\n        /* margin: 0.5em; */\r\n      }\r\n    }\r\n\r\n    .icon {\r\n      justify-self: start;\r\n      grid-area: icon;\r\n      color: ${(p) => p.theme.palette.primary.contrastText};\r\n    }\r\n    .user {\r\n      grid-area: user;\r\n      max-width: 100px;\r\n\r\n      .fullname {\r\n        font-size: 0.8em;\r\n        font-weight: 600;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n        text-transform: capitalize;\r\n      }\r\n      .designation {\r\n        font-size: 0.8em;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n        text-transform: capitalize;\r\n      }\r\n    }\r\n  }\r\n\r\n  .MuiPopover-root {\r\n    background-color: red !important;\r\n    & > .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n    &.content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n\r\n    .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledPopOverContent = styled.div`\r\n  max-width: 360px;\r\n  min-width: 250px;\r\n  .content-header {\r\n    overflow: hidden;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    align-content: center;\r\n    justify-content: start;\r\n    align-items: center;\r\n    justify-items: start;\r\n    grid-gap: 1em;\r\n    padding: 1em;\r\n    grid-auto-columns: 50px 1fr 100px;\r\n    background-color: #e2f3f5;\r\n\r\n    .content-header-image {\r\n      height: 50px;\r\n      width: 50px;\r\n    }\r\n    .content-header-user {\r\n      font-size: 0.8em;\r\n      text-transform: capitalize;\r\n\r\n      .name {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n\r\n    .btn-logout {\r\n      color: black;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 900;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 0.6);\r\n      &:hover {\r\n        color: blue;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Popover, useTheme } from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { memo, useCallback } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { removeToken } from \"../../Helpers/AppConfig\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\nimport { StyledPopOverContent, StyledUserProfile } from \"./styles\";\r\n\r\ninterface IUserProfile {\r\n  variant: \"mobile\" | \"desktop\";\r\n  user: any;\r\n}\r\n\r\nconst UserProfile: React.FC<IUserProfile> = memo(({ variant, user }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    removeToken();\r\n    window.location.href = \"/login\";\r\n  }, []);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  let ProfileLink;\r\n\r\n  if (user?.user_type === \"admin\") {\r\n    ProfileLink = (\r\n      <NavLink to=\"/admin/profile\" className=\"link\">\r\n        My Profile\r\n      </NavLink>\r\n    );\r\n  } else if (user?.user_type === \"tutor\") {\r\n    ProfileLink = (\r\n      <NavLink to=\"/clinic/myprofile\" className=\"link\">\r\n        My Profile\r\n      </NavLink>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <StyledUserProfile theme={theme}>\r\n      <div className=\"header\" aria-describedby={id} onClick={handleClick}>\r\n        <CustomAvatar\r\n          src={user?.picture}\r\n          errorMessage={`${user?.fullname.charAt(0)}`}\r\n          className=\"profile-image\"\r\n        />\r\n        {open ? (\r\n          <ExpandLessIcon className=\"icon\" fontSize=\"small\" />\r\n        ) : (\r\n          <ExpandMoreIcon className=\"icon\" fontSize=\"small\" />\r\n        )}\r\n\r\n        {variant === \"mobile\" ? null : (\r\n          <div className=\"user\">\r\n            <div className=\"fullname\">{user?.fullname}</div>\r\n            <div className=\"designation\">{user?.user_type}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledPopOverContent theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <CustomAvatar\r\n              src={user?.picture}\r\n              errorMessage={`${user?.fullname.charAt(0)}`}\r\n              className=\"content-header-image\"\r\n            />\r\n            <div className=\"content-header-user\">\r\n              <div className=\"name\">{user?.fullname}</div>\r\n              <div className=\"designation\">{user?.user_type}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n            <div className=\"content-items\">\r\n              {ProfileLink}\r\n              <div className=\"link\" onClick={handleLogout}>\r\n                Logout\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </StyledPopOverContent>\r\n      </Popover>\r\n    </StyledUserProfile>\r\n  );\r\n});\r\n\r\nexport default UserProfile;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport Message from \"../../Component/Message/Message\";\r\nimport Notification from \"../../Component/Notification/Notification\";\r\nimport PageLinks from \"../../Component/PageLinks\";\r\nimport TaskMenu from \"../../Component/TaskMenu/TaskMenu\";\r\nimport UserProfile from \"../../Component/UserProfile/UserProfile\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\n\r\ninterface IHeader {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileHeader: boolean;\r\n  isOpenMobileSidebar: boolean;\r\n  handleToggleHeader: () => void;\r\n  handleToggleSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = memo(\r\n  ({\r\n    PageNavLinks,\r\n    isOpenMobileHeader,\r\n    handleToggleHeader,\r\n    handleToggleSidebar,\r\n    isOpenMobileSidebar,\r\n    user,\r\n  }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const page_links = useSelector(\r\n      (store: RootStore) => store.PageReducer.page_links\r\n    );\r\n    return (\r\n      <>\r\n        <StyledHeader\r\n          theme={theme}\r\n          className={clsx(\"\", {\r\n            \"mobile-menu-open\": isOpenMobileHeader,\r\n          })}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            className=\"btn-open-drawer\"\r\n            onClick={handleToggleSidebar}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <div\r\n            className=\"brand\"\r\n            style={{\r\n              opacity: isOpenMobileSidebar ? 0 : 1,\r\n            }}\r\n          >\r\n            <Avatar src={logo} className=\"brand-logo\" alt=\"\" />\r\n            <div className=\"brand-name\">{process.env.REACT_APP_CLIENT}</div>\r\n            <div className=\"app-name\">{APP_NAME}</div>\r\n          </div>\r\n\r\n          <nav className=\"nav\">\r\n            {PageNavLinks.map((nav, index) => (\r\n              <NavLink\r\n                key={index}\r\n                activeClassName=\"nav-item-active\"\r\n                to={nav.to}\r\n                className=\"nav-item\"\r\n              >\r\n                {nav.text}\r\n              </NavLink>\r\n            ))}\r\n          </nav>\r\n\r\n          <section className=\"tools\">\r\n            {user?.user_type === \"tutor\" && (\r\n              <>\r\n                <TaskMenu />\r\n              </>\r\n            )}\r\n\r\n            <Notification />\r\n            <Message />\r\n            <UserProfile user={user} variant={mobile ? \"mobile\" : \"desktop\"} />\r\n          </section>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            className=\"btn-open-menu\"\r\n            onClick={handleToggleHeader}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </StyledHeader>\r\n        <PageLinks isOpenMobileHeader={isOpenMobileHeader} links={page_links} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Header;\r\n\r\nconst StyledHeader = styled(AppBar)`\r\n  height: ${(p) => p.theme.header.height}px;\r\n  display: grid !important;\r\n  grid-auto-flow: column !important;\r\n  grid-auto-columns: ${(p) => p.theme.sidebar.maxWidth}px 1fr auto;\r\n  grid-gap: 1.5em;\r\n  padding: 0 1em;\r\n  /* box-shadow: 0 0.125rem 0.625rem rgba(0, 0, 0, 0.1),\r\n    0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1) !important;\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1); */\r\n\r\n  /* background: ${(p) => p.theme.header.backgroundColor} !important;\r\n  color: ${(p) => p.theme.header.color} !important; */\r\n\r\n  .brand {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-items: start;\r\n    justify-content: start;\r\n    grid-template-areas: \"logo app\" \"logo name\";\r\n    /* grid-gap: 0.3em; */\r\n    .brand-logo {\r\n      grid-area: logo;\r\n      height: 2em;\r\n      width: 2em;\r\n      background-color: #fff;\r\n      margin-right: 0.2em;\r\n      box-shadow: 0 5px 10px -4px rgba(0, 0, 0, 0.56),\r\n        0 2px 8px 0px rgba(0, 0, 0, 0.12), 0 2px 5px -3px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .app-name {\r\n      align-self: end;\r\n      justify-self: center;\r\n      grid-area: app;\r\n      white-space: nowrap;\r\n      justify-self: start;\r\n      font-weight: 500;\r\n      width: ${(p) => p.theme.sidebar.maxWidth - 50}px;\r\n      white-space: pre-wrap;\r\n    }\r\n\r\n    .brand-name {\r\n      width: ${(p) => p.theme.sidebar.maxWidth - 50}px;\r\n      grid-area: name;\r\n      font-weight: 500;\r\n      font-size: 0.75em;\r\n      align-self: start;\r\n      white-space: pre-wrap;\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  .nav {\r\n    justify-self: start;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-self: start;\r\n    justify-content: start;\r\n    align-items: center;\r\n    align-content: center;\r\n    grid-gap: 1em;\r\n    .nav-item {\r\n      transition: 0.5s all ease-in-out;\r\n      justify-self: center;\r\n      display: grid;\r\n      text-align: center;\r\n      align-items: center;\r\n      align-content: center;\r\n      align-self: center;\r\n      justify-items: center;\r\n      justify-content: center;\r\n\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      font-size: 0.9em;\r\n      color: rgba(255, 255, 255, 0.75);\r\n\r\n      &.nav-item-active {\r\n        transition: 0.2s all ease-in-out;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n      }\r\n\r\n      /* .nav-item-label {\r\n        \r\n      } */\r\n\r\n      &:hover {\r\n        transition: 0.2s all ease-in-out;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n      }\r\n    }\r\n  }\r\n\r\n  .tools {\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .btn-open-drawer,\r\n  .btn-open-menu {\r\n    display: none;\r\n  }\r\n\r\n  /* MOBILE SCREEN */\r\n  @media screen and (max-width: ${(props) =>\r\n      props.theme.breakpoints.values.md}px) {\r\n    grid-gap: 0;\r\n    grid-auto-columns: 40px 1fr 40px;\r\n    grid-template-areas: \"btn-drawer brand btn-menu\" \"menu menu menu\";\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px\r\n      ${(p) => p.theme.header.height}px;\r\n    overflow: hidden;\r\n    box-shadow: 0 0.125rem 0.625rem rgba(0, 0, 0, 0.1),\r\n      0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1) !important;\r\n    align-items: center;\r\n    /* align-content: center; */\r\n\r\n    .btn-open-drawer {\r\n      grid-area: btn-drawer;\r\n      display: grid;\r\n    }\r\n\r\n    .btn-open-menu {\r\n      grid-area: btn-menu;\r\n      display: grid;\r\n    }\r\n\r\n    .brand {\r\n      grid-area: brand;\r\n      justify-self: center;\r\n      align-content: center;\r\n      align-items: center;\r\n      justify-items: start;\r\n      justify-content: start;\r\n      width: unset !important;\r\n      * {\r\n        width: unset !important;\r\n      }\r\n    }\r\n    .tools {\r\n      grid-area: menu;\r\n    }\r\n\r\n    .nav {\r\n      display: none;\r\n    }\r\n\r\n    &.mobile-menu-open {\r\n      transition: 0.2s all ease-in-out !important;\r\n      height: ${(p) => p.theme.header.height * 2}px;\r\n    }\r\n  }\r\n`;\r\n","import { Collapse } from \"@material-ui/core\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled, { useTheme } from \"styled-components\";\r\n\r\ninterface INavSidebarDropDown {\r\n  isActive: boolean;\r\n  text: string;\r\n  navLinks: Array<any>;\r\n}\r\n\r\nconst NavSidebarDropDown: FC<INavSidebarDropDown> = ({\r\n  isActive,\r\n  text,\r\n  navLinks,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledNavSidebarDropdown\r\n      theme={theme}\r\n      className={clsx(\"nav-item-collapse\", {\r\n        \"dropdown-link-item-active\": isActive,\r\n      })}\r\n    >\r\n      <div className=\"header\" onClick={() => setOpen((prev) => !prev)}>\r\n        <div className=\"nav-item-label\">{text}</div>\r\n        <ArrowDropDownRoundedIcon className=\"nav-item-btn\" color=\"primary\" />\r\n      </div>\r\n      <Collapse in={open}>\r\n        <div className=\"body\">\r\n          {navLinks.map((link, index) => (\r\n            <NavLink\r\n              className=\"sub-link\"\r\n              activeClassName=\"nav-item-active\"\r\n              to={link.to}\r\n              key={index}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n    </StyledNavSidebarDropdown>\r\n  );\r\n};\r\n\r\nconst StyledNavSidebarDropdown = styled.div`\r\n  &.dropdown-link-item-active {\r\n    color: #3443e5 !important;\r\n    .nav-item-icon,\r\n    .nav-item-label {\r\n      color: #3443e5 !important;\r\n    }\r\n  }\r\n  .header {\r\n    transition: 0.2s all ease-in-out;\r\n    padding: 0.7em 0.3em;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    grid-auto-columns: 30px 1fr 50px;\r\n    justify-items: start;\r\n    grid-template-areas: \"text collapse\";\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n    align-content: center;\r\n    display: grid;\r\n    font-weight: 500;\r\n    grid-gap: 0.5em;\r\n    color: rgba(0, 0, 0, 0.7);\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: #3443e5 !important;\r\n    }\r\n\r\n    .nav-item-label {\r\n      grid-area: text;\r\n      font-size: 0.87em !important;\r\n    }\r\n    .nav-item-btn {\r\n      justify-self: end;\r\n      grid-area: collapse;\r\n      transition: 0.2s all ease-in-out;\r\n      border-radius: 50%;\r\n      &:hover {\r\n        cursor: pointer;\r\n        transition: 0.2s all ease-in-out;\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .body {\r\n    border-left: 2px solid #97b7fc;\r\n    padding-left: 35px;\r\n    margin-left: 12px;\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-gap: 0.5em;\r\n    font-size: 0.87em;\r\n\r\n    .sub-link {\r\n      padding: 0.5em 0;\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      &:hover {\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n    .nav-item-active {\r\n      color: #3443e5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavSidebarDropDown;\r\n","import {\r\n  Avatar,\r\n  Drawer,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport React, { memo, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport NavSidebarDropDown from \"../../Component/NavLinks/NavSidebarDropDown\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\nimport styled from \"styled-components\";\r\ninterface IMobileSidebar {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileSidebar: boolean;\r\n  handleCloseMobileSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst MobileSidebar: React.FC<IMobileSidebar> = memo(\r\n  ({ PageNavLinks, isOpenMobileSidebar, handleCloseMobileSidebar, user }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (mounted) {\r\n        handleCloseMobileSidebar();\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [handleCloseMobileSidebar, mobile]);\r\n\r\n    return (\r\n      <StyledMobileSidebar\r\n        theme={theme}\r\n        open={isOpenMobileSidebar}\r\n        PaperProps={{\r\n          className: \"sidebar-container\",\r\n        }}\r\n        onClose={handleCloseMobileSidebar}\r\n      >\r\n        <div className=\"brand\">\r\n          <Avatar src={logo} className=\"brand-logo\" alt=\"\" />\r\n          <div className=\"brand-name\">{process.env.REACT_APP_CLIENT}</div>\r\n          <div className=\"app-name\">{APP_NAME}</div>\r\n\r\n          <IconButton\r\n            className=\"btn-close-drawer\"\r\n            color=\"primary\"\r\n            onClick={handleCloseMobileSidebar}\r\n          >\r\n            <MenuOpenIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <nav className=\"nav\">\r\n          {PageNavLinks.map((nav, index) =>\r\n            nav.hasSubLinks ? (\r\n              <NavSidebarDropDown\r\n                isActive={history.location.pathname\r\n                  .toLowerCase()\r\n                  .includes(nav.parentKey ? nav.parentKey.toLowerCase() : \"\")}\r\n                text={nav.text}\r\n                navLinks={nav.navLinks ? nav.navLinks : []}\r\n                key={index}\r\n              />\r\n            ) : (\r\n              <NavLink\r\n                key={index}\r\n                activeClassName=\"dropdown-link-item-active\"\r\n                to={nav.to}\r\n                className=\"nav-item\"\r\n              >\r\n                <div className=\"nav-item-label\">{nav.text}</div>\r\n              </NavLink>\r\n            )\r\n          )}\r\n        </nav>\r\n      </StyledMobileSidebar>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MobileSidebar;\r\n\r\nexport const StyledMobileSidebar = styled(Drawer)`\r\n  .sidebar-container {\r\n    width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    min-width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    display: grid;\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px 1fr;\r\n\r\n    .brand {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n      align-content: center;\r\n      align-items: center;\r\n      justify-items: start;\r\n      justify-content: start;\r\n      padding: 0 0.5em;\r\n      background-color: ${(p) => p.theme.header.backgroundColor};\r\n      color: ${(p) => p.theme.header.color};\r\n      grid-template-areas: \"logo app icon\" \"logo name icon\";\r\n      grid-auto-columns: auto 1fr auto;\r\n\r\n      .brand-logo {\r\n        grid-area: logo;\r\n        height: 40px;\r\n        width: 40px;\r\n        margin-right: 10px;\r\n      }\r\n      .app-name {\r\n        align-self: end;\r\n        justify-self: center;\r\n        grid-area: app;\r\n        white-space: nowrap;\r\n        justify-self: start;\r\n        font-weight: 600;\r\n        white-space: pre-wrap;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .brand-name {\r\n        grid-area: name;\r\n        font-weight: 400;\r\n        font-size: 0.8em;\r\n        align-self: start;\r\n        white-space: pre-wrap;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .btn-close-drawer {\r\n        justify-self: end;\r\n        grid-area: icon;\r\n      }\r\n    }\r\n\r\n    .nav {\r\n      width: 100%;\r\n      display: grid;\r\n      grid-auto-flow: row;\r\n      align-items: start;\r\n      align-content: start;\r\n      padding: 1em 0.5em;\r\n      grid-gap: 0.5em;\r\n      text-transform: uppercase;\r\n\r\n      .nav-item {\r\n        transition: 0.2s all ease-in-out;\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        align-items: center;\r\n        align-content: center;\r\n        grid-gap: 0.5em;\r\n        padding: 0.7em 0.3em;\r\n        width: 100%;\r\n        grid-auto-columns: 1fr;\r\n        border-radius: 10px;\r\n        justify-items: start;\r\n        font-weight: 600;\r\n        text-transform: capitalize;\r\n        font-size: 1em;\r\n        color: black !important;\r\n        .nav-item-label {\r\n          font-size: 0.87em !important;\r\n          text-transform: capitalize;\r\n        }\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n          color: #3443e5 !important;\r\n        }\r\n\r\n        &.dropdown-link-item-active {\r\n          color: #3443e5 !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport ManageTaskView from \"../../Views/SharedViews/Tasks/ManageTaskView\";\r\nimport Body from \"./Body\";\r\nimport Header from \"./Header\";\r\nimport MobileSidebar from \"./MobileSidebar\";\r\n\r\nexport interface IPageNavLinks {\r\n  hasSubLinks: boolean;\r\n  text: string;\r\n  to: string;\r\n  parentKey?: string;\r\n  navLinks?: Array<any>;\r\n}\r\n\r\nconst generateNavLinks = (user: any): Array<IPageNavLinks> => {\r\n  if (!user) {\r\n    return [];\r\n  }\r\n\r\n  let PageNavLinks: Array<IPageNavLinks> = [];\r\n\r\n  if (user.user_type === \"admin\") {\r\n    // PageNavLinks.push({\r\n    //   hasSubLinks: false,\r\n    //   text: page.pagename,\r\n    //   to: page.link,\r\n    // });\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/admin/dashboard\",\r\n        text: \"Dashboard\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/course\",\r\n        text: \"Courses\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/tutor\",\r\n        text: \"Tutors\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/room\",\r\n        text: \"Rooms\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/student\",\r\n        text: \"Students\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/co-administrator\",\r\n        text: \"Co-administrators\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  } else if (user?.user_type === \"tutor\") {\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/tutor/home\",\r\n        text: \"Home\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/tutor/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  } else if (user?.user_type === \"student\") {\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/student/home\",\r\n        text: \"Home\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/student/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return PageNavLinks;\r\n};\r\n\r\nconst Layout = memo(({ children }) => {\r\n  const user = useSelector((reducers: RootStore) => reducers.UserReducer.user);\r\n\r\n  const [isOpenMobileHeader, setIsOpenMobileHeader] = useState(false);\r\n\r\n  const handleToggleHeader = useCallback(() => {\r\n    setIsOpenMobileHeader((prevHeader) => !prevHeader);\r\n  }, []);\r\n\r\n  const [isOpenMobileSidebar, setIsOpenMobileSidebar] = useState(false);\r\n\r\n  const handleCloseMobileSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar(false);\r\n  }, []);\r\n\r\n  const handleToggleSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar((prevSidebar) => !prevSidebar);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileHeader={isOpenMobileHeader}\r\n        handleToggleHeader={handleToggleHeader}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        user={user}\r\n      />\r\n      <MobileSidebar\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        handleCloseMobileSidebar={handleCloseMobileSidebar}\r\n        user={user}\r\n      />\r\n      <Body isOpenMobileHeader={isOpenMobileHeader}>{children}</Body>\r\n\r\n      {/* REGISTER SHARED VIEWS */}\r\n      <ManageTaskView />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Layout;\r\n","import React, { FC, memo } from \"react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport \"./mini-calendar-styles.css\";\r\n\r\nexport const MiniCalendar: FC<ReactDatePickerProps> = memo((props) => {\r\n  return <DatePicker {...props} />;\r\n});\r\n\r\nexport default MiniCalendar;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledCalendarTutorView = styled(Container)`\r\n  /* display: grid; */\r\n  /* width: 100%; */\r\n  /* grid-auto-flow: column; */\r\n  /* grid-auto-columns: 230px 1fr; */\r\n  /* grid-gap: 2em; */\r\n\r\n  .statistics {\r\n    .title {\r\n      font-weight: 900;\r\n      opacity: 0.6;\r\n      font-size: 0.87em;\r\n      padding: 0.3em 0;\r\n      margin: 1em 0;\r\n    }\r\n  }\r\n\r\n  .stats-content {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n\r\n    .stats-item {\r\n      padding: 0.5em;\r\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n      border-radius: 5px;\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-content: start;\r\n      justify-items: start;\r\n      align-items: center;\r\n      align-content: center;\r\n      grid-auto-columns: 1fr 1fr;\r\n      grid-gap: 1em;\r\n      .label {\r\n        font-weight: 900;\r\n        font-size: 0.7em;\r\n        opacity: 0.8;\r\n      }\r\n      .value {\r\n        font-size: 1.2em;\r\n        font-weight: 700;\r\n      }\r\n      small {\r\n        font-weight: 900;\r\n        font-size: 0.5em !important;\r\n        opacity: 0.8;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassSessionApi from \"../Api/ClassSessionApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { FilterEventModel } from \"../Models/CaledarModels\";\r\nimport { ClassSessionModel } from \"../Models/ClassSessionModel\";\r\nimport { ClassSessionReducerTypes } from \"../Types/ClassSessionTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setTutorClassSessionCalendarAction = (\r\n  payload: FilterEventModel\r\n) => async (dispatch: Dispatch<ClassSessionReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_sessions\",\r\n      fetch_tutor_class_sessions: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getTutorClassSessionCalendarApi(\r\n      payload\r\n    );\r\n    console.log(`cal`, response);\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_sessions\",\r\n      fetch_tutor_class_sessions: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tutor_class_sessions\",\r\n        tutor_class_sessions: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const setStatsSessionCalendarAction = () => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_stats_class_session\",\r\n      fetch_stats_class_session: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getStatsSessionCalendarApi();\r\n    console.log(`stats`, response);\r\n    dispatch({\r\n      type: \"set_fetch_stats_class_session\",\r\n      fetch_stats_class_session: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_stats_class_session\",\r\n        stats_class_session: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const getClassSessionsAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_class_sessions\",\r\n      fetch_class_sessions: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getClassSessionsApi(\r\n      class_pk\r\n    );\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_class_sessions\",\r\n        class_sessions: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"set_fetch_class_sessions\",\r\n      fetch_class_sessions: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const setSingleClassSession = (session_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_session\",\r\n      fetch_single_class_session: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getSingleClassSession(\r\n      session_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_session\",\r\n        single_class_session: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_single_class_session\",\r\n      fetch_single_class_session: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const startClassSessionAction = (\r\n  payload: ClassSessionModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.startClassSessionApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const endClassSessionAction = (\r\n  payload: ClassSessionModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.endClassSessionApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n","import FullCalendar, {\r\n  EventClickArg,\r\n  EventSourceInput,\r\n} from \"@fullcalendar/react\";\r\n\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport resourceTimelinePlugin from \"@fullcalendar/resource-timeline\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"../../Component/Calendar/calendar.css\";\r\n\r\nimport { Chip, Grid, useTheme } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MiniCalendar from \"../../Component/MiniCalendar/MiniCalendar\";\r\nimport { setPageLinks } from \"../../Services/Actions/PageActions\";\r\nimport { FilterEventModel } from \"../../Services/Models/CaledarModels\";\r\nimport { StyledCalendarTutorView } from \"./styles\";\r\nimport DataTableSearch from \"../../Component/DataTableSearch\";\r\nimport {\r\n  setStatsSessionCalendarAction,\r\n  setTutorClassSessionCalendarAction,\r\n} from \"../../Services/Actions/ClassSessionActions\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport LinearLoadingProgress from \"../../Component/LinearLoadingProgress\";\r\n\r\ninterface CalendarTutorViewInterface {}\r\n\r\nexport const CalendarTutorView: FC<CalendarTutorViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const calendarComponentRef = useRef<any>();\r\n\r\n  const stats_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.stats_class_session\r\n  );\r\n  const fetch_stats_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.fetch_stats_class_session\r\n  );\r\n\r\n  const tutor_class_sessions = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.tutor_class_sessions\r\n  );\r\n  const fetch_tutor_class_sessions = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.fetch_tutor_class_sessions\r\n  );\r\n\r\n  const [calEvents, setCalEvents] = useState<EventSourceInput>([]);\r\n  const [reloadEvents, setReloadEvents] = useState(0);\r\n  const [\r\n    calendarEventParams,\r\n    setCalendarEventParams,\r\n  ] = useState<FilterEventModel>({\r\n    search: \"\",\r\n    sts_pk: [\"fa\", \"a\", \"e\"],\r\n    month: new Date().getMonth() + 1,\r\n    year: new Date().getFullYear(),\r\n  });\r\n\r\n  const [calendarTitle, setCalendarTitle] = useState(\r\n    moment(new Date()).format(\"MMMM DD,YYYY\")\r\n  );\r\n  const [currentSelectedCalDate, setCurrentSelectedCalDate] = useState(\r\n    new Date()\r\n  );\r\n  const handleSetCurrentSelectedCalDate = useCallback((new_date: Date) => {\r\n    setCurrentSelectedCalDate(new_date);\r\n    const calendarApi = calendarComponentRef.current.getApi();\r\n    calendarApi.gotoDate(new_date);\r\n    setCalendarTitle(calendarApi.view.title);\r\n\r\n    setCalendarEventParams((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        month: new_date.getMonth() + 1,\r\n        year: new_date.getFullYear(),\r\n      };\r\n    });\r\n  }, []);\r\n  const handleSubmitSearchFilter = useCallback((values, formikHelpers) => {\r\n    setCalendarEventParams((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        ...values,\r\n      };\r\n    });\r\n  }, []);\r\n  const today = useCallback(() => {\r\n    handleSetCurrentSelectedCalDate(new Date());\r\n    let calendarApi = calendarComponentRef.current.getApi();\r\n    calendarApi.today();\r\n  }, [handleSetCurrentSelectedCalDate]);\r\n  const handleReloadEvents = useCallback(() => {\r\n    setReloadEvents((prev) => prev + 1);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(setTutorClassSessionCalendarAction(calendarEventParams));\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [calendarEventParams, dispatch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(setStatsSessionCalendarAction());\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const loadEvents = async () => {\r\n      if (tutor_class_sessions) {\r\n        const events: EventSourceInput = [];\r\n\r\n        tutor_class_sessions.forEach((sched) => {\r\n          events.push({\r\n            id: sched.session_pk.toString(),\r\n            color: sched.sts_bgcolor,\r\n            start: moment(\r\n              moment(new Date(sched.start_date)).format(\"YYYY-MM-DD\") +\r\n                \" \" +\r\n                sched.start_time,\r\n              \"YYYY-MM-DD HH:mm:ss\"\r\n            ).toDate(),\r\n            end: moment(\r\n              moment(new Date(sched.start_date)).format(\"YYYY-MM-DD\") +\r\n                \" \" +\r\n                sched.end_time,\r\n              \"YYYY-MM-DD HH:mm:ss\"\r\n            ).toDate(),\r\n            title: sched.class_desc,\r\n            extendedProps: sched,\r\n          });\r\n        });\r\n        setCalEvents(events);\r\n      }\r\n    };\r\n\r\n    mounted && loadEvents();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [calendarEventParams, reloadEvents, dispatch, tutor_class_sessions]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/tutor/calendar\",\r\n            title: \"Calendar\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <StyledCalendarTutorView maxWidth=\"xl\">\r\n      <Grid container spacing={2}>\r\n        <Grid xs={12} md={3} lg={2}>\r\n          <div\r\n            style={{\r\n              padding: `1em`,\r\n              backgroundColor: `#fff`,\r\n              height: `100%`,\r\n            }}\r\n            className=\"main-details\"\r\n          >\r\n            <div className=\"mini-calendar\">\r\n              <MiniCalendar\r\n                selected={currentSelectedCalDate}\r\n                onChange={handleSetCurrentSelectedCalDate}\r\n                onMonthChange={handleSetCurrentSelectedCalDate}\r\n                onYearChange={handleSetCurrentSelectedCalDate}\r\n                peekNextMonth={false}\r\n                showMonthDropdown\r\n                showYearDropdown\r\n                fixedHeight\r\n                dropdownMode=\"select\"\r\n                inline\r\n              />\r\n            </div>\r\n\r\n            <div className=\"statistics\">\r\n              <div className=\"title\">Sessions Stats (Monthly)</div>\r\n              <div className=\"stats-content\">\r\n                <div className=\"stats-item\">\r\n                  <div className=\"label\">For Approval</div>\r\n                  <div className=\"value\">\r\n                    {stats_class_session?.for_approval} <small>sessions</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stats-item\">\r\n                  <div className=\"label\">Approved</div>\r\n                  <div className=\"value\">\r\n                    {stats_class_session?.approved} <small>sessions</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stats-item\">\r\n                  <div className=\"label\">Started</div>\r\n                  <div className=\"value\">\r\n                    {stats_class_session?.started} <small>sessions</small>\r\n                  </div>\r\n                </div>\r\n                <div className=\"stats-item\">\r\n                  <div className=\"label\">Closed</div>\r\n                  <div className=\"value\">\r\n                    {stats_class_session?.closed} <small>sessions</small>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Grid>\r\n        <Grid xs={12} md={9} lg={10}>\r\n          <div\r\n            className=\"calendar\"\r\n            style={{\r\n              padding: `1em`,\r\n              backgroundColor: `#fff`,\r\n            }}\r\n          >\r\n            <Grid container spacing={1}>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n                justify=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <div\r\n                    style={{\r\n                      fontSize: \"1.3em\",\r\n                      fontWeight: 900,\r\n                      opacity: 0.8,\r\n                      letterSpacing: `.3pt`,\r\n                      wordSpacing: `.3pt`,\r\n                    }}\r\n                  >\r\n                    Class Session Calendar\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                container\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={4}\r\n                  container\r\n                  alignItems=\"center\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item>\r\n                    <Chip\r\n                      label=\"Today\"\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      className=\"shadow-default\"\r\n                      onClick={today}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={4}\r\n                  container\r\n                  alignItems=\"center\"\r\n                  justify=\"center\"\r\n                >\r\n                  <Grid item>\r\n                    <div\r\n                      style={{\r\n                        fontWeight: 900,\r\n                        fontSize: `.87em`,\r\n                        letterSpacing: `.3pt`,\r\n                        wordSpacing: `.3pt`,\r\n                        opacity: 0.8,\r\n                      }}\r\n                    >\r\n                      {calendarTitle}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid\r\n                  item\r\n                  xs={12}\r\n                  md={4}\r\n                  container\r\n                  alignItems=\"center\"\r\n                  justify=\"flex-end\"\r\n                >\r\n                  <Grid item>\r\n                    <DataTableSearch\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        // handleSetTableSearch({\r\n                        //   ...tableSearch,\r\n                        //   search: searchField,\r\n                        // });\r\n                        handleReloadEvents();\r\n                      }}\r\n                      handleSetSearchField={(seachText: string) => {\r\n                        setCalendarEventParams((prevState) => {\r\n                          return {\r\n                            ...prevState,\r\n                            search: seachText,\r\n                          };\r\n                        });\r\n                      }}\r\n                      searchField={calendarEventParams.search}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <LinearLoadingProgress show={fetch_stats_class_session} />\r\n                <FullCalendar\r\n                  ref={calendarComponentRef}\r\n                  schedulerLicenseKey={\r\n                    \"CC-Attribution-NonCommercial-NoDerivatives\"\r\n                  }\r\n                  initialView={\"dayGridMonth\"}\r\n                  // initialView={\"resourceTimeline\"}\r\n                  plugins={[\r\n                    resourceTimeGridPlugin,\r\n                    resourceTimelinePlugin,\r\n                    dayGridPlugin,\r\n                    interactionPlugin,\r\n                  ]}\r\n                  headerToolbar={null}\r\n                  events={calEvents}\r\n                  eventMinHeight={100}\r\n                  dayMaxEventRows={10}\r\n                  stickyHeaderDates={true}\r\n                  stickyFooterScrollbar={true}\r\n                  aspectRatio={2}\r\n                  eventClick={(arg: EventClickArg) => {\r\n                    console.log(`arg`, arg);\r\n                    window.open(\r\n                      `/tutor/class/${arg?.event.extendedProps.class_pk}/session`,\r\n                      `_blank`\r\n                    );\r\n                  }}\r\n                  allDaySlot={false}\r\n                  selectable={false}\r\n                  eventContent={(eventContent: any) => {\r\n                    return (\r\n                      <div className=\"month-day-event\">\r\n                        <div\r\n                          className=\"dot\"\r\n                          style={{\r\n                            backgroundColor: `${eventContent.event.extendedProps.sts_bgcolor}`,\r\n                            borderColor: `black`,\r\n                          }}\r\n                        ></div>\r\n                        <div className=\"title\">\r\n                          {eventContent.timeText} {eventContent.event.title}\r\n                        </div>\r\n                        <div\r\n                          className=\"status\"\r\n                          style={{\r\n                            backgroundColor: `${eventContent.event.extendedProps.sts_bgcolor}`,\r\n                            borderColor: `${eventContent.event.extendedProps.sts_color}`,\r\n                          }}\r\n                        >\r\n                          {eventContent.event.extendedProps.sts_pk}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledCalendarTutorView>\r\n  );\r\n});\r\n\r\nexport default CalendarTutorView;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport {\r\n  approveClassAction,\r\n  setTutorClassTableAction,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n  setPageSuccessPromptAction,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface DataClassTutorViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const DataClassTutorView: FC<DataClassTutorViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const table_loading = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_tutor_class_table\r\n  );\r\n  const data_table: Array<ClassModel & StatusMasterModel> = useSelector(\r\n    (store: RootStore) => store.ClassReducer.tutor_class_table?.table\r\n  );\r\n\r\n  const [reloadTutorClassTable, setReloadTutorClassTable] = useState(1);\r\n\r\n  const handleApproveClass = useCallback(\r\n    async (class_pk: number) => {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              approveClassAction(class_pk, (msg: string) => {\r\n                setReloadTutorClassTable((load) => load + 1);\r\n\r\n                dispatch(\r\n                  setPageSuccessPromptAction({\r\n                    message: msg,\r\n                    action_buttons: [\r\n                      {\r\n                        text: \"Stay on this page\",\r\n                        handleClick: () => console.log(`1`),\r\n                        color: \"primary\",\r\n                      },\r\n                      {\r\n                        text: \"View approved class\",\r\n                        handleClick: () => console.log(`2`),\r\n                        color: \"secondary\",\r\n                      },\r\n                    ],\r\n                    show: true,\r\n                  })\r\n                );\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [\r\n    tableSearch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableCount,\r\n    activeSort,\r\n    searchField,\r\n    selectedSortIndex,\r\n    handleSetTableSearch,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    handleChagenSelectedSortIndex,\r\n    handleSetSearchField,\r\n  ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchTableData = () => {\r\n      const filters: PaginationModel = {\r\n        page: {\r\n          begin: tablePage,\r\n          limit: tableLimit,\r\n        },\r\n        sort: activeSort,\r\n        filters: tableSearch,\r\n      };\r\n\r\n      dispatch(setTutorClassTableAction(filters));\r\n    };\r\n\r\n    mounted && activeSort && fetchTableData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [\r\n    activeSort,\r\n    dispatch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableSearch,\r\n    reloadTutorClassTable,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/tutor/class\",\r\n            title: \"Classes\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <LinearLoadingProgress show={table_loading} />\r\n\r\n      <Grid\r\n        container\r\n        component={Paper}\r\n        style={{\r\n          padding: `1em`,\r\n          minHeight: `90vh`,\r\n          alignItems: `start`,\r\n          alignContent: `start`,\r\n        }}\r\n        spacing={2}\r\n      >\r\n        <Grid\r\n          xs={12}\r\n          item\r\n          container\r\n          spacing={1}\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n        >\r\n          <Grid item xs={12} justify=\"flex-end\" container>\r\n            <Grid item>\r\n              <DataTableSearch\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  handleSetTableSearch({\r\n                    ...tableSearch,\r\n                    search: searchField,\r\n                  });\r\n                }}\r\n                handleSetSearchField={handleSetSearchField}\r\n                searchField={searchField}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            // xs={12}\r\n            // md={6}\r\n            // container\r\n            // spacing={2}\r\n            // justify=\"flex-start\"\r\n            // alignContent=\"center\"\r\n            // alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50, 100, 250]}\r\n                component=\"div\"\r\n                count={tableCount}\r\n                rowsPerPage={tableLimit}\r\n                page={tablePage}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            // container\r\n            // spacing={3}\r\n            // alignContent=\"center\"\r\n            // alignItems=\"center\"\r\n            // justify=\"flex-end\"\r\n          >\r\n            <Grid item>\r\n              <DataTableSort\r\n                handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                initialTableSort={initialTableSort}\r\n                selectedSortIndex={selectedSortIndex}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid xs={12} container item spacing={1}>\r\n          {data_table?.length < 1 && (\r\n            <span className=\"empty-rows\">No records found!</span>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <div\r\n              className=\"class-container\"\r\n              style={{\r\n                display: `grid`,\r\n                gridGap: `3em`,\r\n                alignItems: `start`,\r\n                alignContent: `start`,\r\n                justifyContent: `start`,\r\n                gridTemplateColumns: `repeat(auto-fill, minmax(300px, 1fr))`,\r\n              }}\r\n            >\r\n              {data_table?.map((v, i) => (\r\n                <StyledClassContainer key={i}>\r\n                  <div className=\"image\">\r\n                    {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                    <img\r\n                      src={`data:image/jpg;base64,${v.pic}`}\r\n                      alt={`no image found`}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"info-container\">\r\n                    <div className=\"title\">\r\n                      <div className=\"main\">{v.class_desc}</div>\r\n                      <div className=\"sub\">{v.course_desc}</div>\r\n                    </div>\r\n\r\n                    <div className=\"details\">\r\n                      <div className=\"item\">\r\n                        The current status is{\" \"}\r\n                        <Chip\r\n                          label={v.sts_desc}\r\n                          size=\"small\"\r\n                          style={{\r\n                            backgroundColor: v.sts_bgcolor,\r\n                            color: v.sts_color,\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"time\">\r\n                        The time interval is{\" \"}\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {\" \"}\r\n                          {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                          {\" - \"}\r\n                          {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}.\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"item\">\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {v.closed_sessions} of {v.session_count}\r\n                        </span>{\" \"}\r\n                        session are completed.\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"footer-ctnr\">\r\n                      <Button\r\n                        // color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(`/tutor/class/${v.class_pk}/session`)\r\n                        }\r\n                        // variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {v.sts_pk === \"fa\" && (\r\n                        <>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => handleApproveClass(v.class_pk)}\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n                          <Button color=\"secondary\">Decline</Button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </StyledClassContainer>\r\n              ))}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DataClassTutorView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassStudentModel } from \"../Models/ClassStudentModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classstudent/`;\r\n\r\nconst setTblClassStudentsApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTblClassStudents\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst enrollClassStudent = async (\r\n  payload: ClassStudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"enrollClassStudent\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst joinStudentToClassApi = async (\r\n  payload: ClassStudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"joinStudentToClass\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst blockClassStudentApi = async (\r\n  class_stud_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"blockClassStudent\", {\r\n    class_stud_pk: class_stud_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst reEnrollClassStudentApi = async (\r\n  class_stud_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"reEnrollClassStudent\", {\r\n    class_stud_pk: class_stud_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  setTblClassStudentsApi,\r\n  enrollClassStudent,\r\n  blockClassStudentApi,\r\n  reEnrollClassStudentApi,\r\n  joinStudentToClassApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassStudentApi from \"../Api/ClassStudentApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassStudentModel } from \"../Models/ClassStudentModel\";\r\nimport { ClassStudentReducerTypes } from \"../Types/ClassStudentTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setTblClassStudentsAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassStudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tbl_class_students\",\r\n      fetch_tbl_class_students: true,\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.setTblClassStudentsApi(\r\n      class_pk\r\n    );\r\n\r\n    dispatch({\r\n      type: \"set_fetch_tbl_class_students\",\r\n      fetch_tbl_class_students: false,\r\n    });\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tbl_class_students\",\r\n        tbl_class_students: response.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst enrollClassStudentAction = (\r\n  payload: ClassStudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.enrollClassStudent(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst joinStudentToClassAction = (\r\n  payload: ClassStudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.joinStudentToClassApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst reEnrollClassStudentAction = (\r\n  session_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.reEnrollClassStudentApi(\r\n      session_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst blockClassStudentAction = (\r\n  session_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.blockClassStudentApi(\r\n      session_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setTblClassStudentsAction,\r\n  enrollClassStudentAction,\r\n  reEnrollClassStudentAction,\r\n  blockClassStudentAction,\r\n  joinStudentToClassAction,\r\n};\r\n","import { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { Jutsu } from \"react-jutsu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\n\r\ninterface SessionVideoConfProps {}\r\n\r\nexport const SessionVideoConf: FC<SessionVideoConfProps> = memo(() => {\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n  const single_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n  );\r\n\r\n  // console.log(`hash_pk`, single_class_session);\r\n\r\n  if (single_class_session?.hash_pk && single_class_session?.sts_pk === \"fa\") {\r\n    return (\r\n      <div\r\n        style={{\r\n          fontWeight: 600,\r\n          fontSize: `1.5em`,\r\n          display: `grid`,\r\n          padding: `2em`,\r\n          justifyContent: `center`,\r\n          alignContent: `center`,\r\n        }}\r\n      >\r\n        You need to start the class session to view the video conferencing!\r\n      </div>\r\n    );\r\n  } else if (\r\n    single_class_session?.hash_pk &&\r\n    single_class_session?.sts_pk === \"e\"\r\n  ) {\r\n    return (\r\n      <div\r\n        style={{\r\n          fontWeight: 600,\r\n          fontSize: `1.5em`,\r\n          padding: `2em`,\r\n          display: `grid`,\r\n          justifyContent: `center`,\r\n          alignContent: `center`,\r\n          color: `red`,\r\n        }}\r\n      >\r\n        The session has already beed ended!\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        {user?.user_type === \"tutor\" && (\r\n          <Jutsu\r\n            roomName={single_class_session?.hash_pk}\r\n            displayName={user?.fullname}\r\n            // password={single_class_session?.hash_pk}\r\n            containerStyles={{\r\n              height: `100%`,\r\n              width: `100%`,\r\n              border: `none`,\r\n            }}\r\n            loadingComponent={<CircularProgress />}\r\n            errorComponent={<p>Oops, something went wrong</p>}\r\n            configOverwrite={{\r\n              enableWelcomePage: false,\r\n              prejoinPageEnabled: false,\r\n              disableLogCollector: true,\r\n              defaultLogLevel: \"error\",\r\n            }}\r\n            onJitsi={(e) => {\r\n              console.log(`jitsi details -> `, e);\r\n            }}\r\n            loggerConfigOverwrite={{\r\n              disableLogCollector: true,\r\n            }}\r\n            interfaceConfigOverwrite={{\r\n              disableLogCollector: true,\r\n              defaultLogLevel: \"error\",\r\n              prejoinPageEnabled: false,\r\n              DISPLAY_WELCOME_FOOTER: false,\r\n              GENERATE_ROOMNAMES_ON_WELCOME_PAGE: false,\r\n              HIDE_INVITE_MORE_HEADER: true,\r\n              HIDE_DEEP_LINKING_LOGO: true,\r\n              SHOW_JITSI_WATERMARK: false,\r\n              SHOW_WATERMARK_FOR_GUESTS: false,\r\n              // JITSI_WATERMARK_LINK: \"\",\r\n              TOOLBAR_BUTTONS: [\r\n                \"microphone\",\r\n                \"camera\",\r\n                //   \"closedcaptions\",\r\n                \"desktop\",\r\n                \"fullscreen\",\r\n                \"fodeviceselection\",\r\n                \"hangup\",\r\n                \"profile\",\r\n                //   \"info\",\r\n                //   \"recording\",\r\n                //   \"livestreaming\",\r\n                \"etherpad\",\r\n                //   \"sharedvideo\",\r\n                \"settings\",\r\n                \"raisehand\",\r\n                //   \"videoquality\",\r\n                //   \"filmstrip\",\r\n                //   \"invite\",\r\n                //   \"feedback\",\r\n                \"stats\",\r\n                \"shortcuts\",\r\n                \"tileview\",\r\n                \"videobackgroundblur\",\r\n                //   \"download\",\r\n                //   \"help\",\r\n                \"mute-everyone\",\r\n                //   \"e2ee\",\r\n              ],\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {user?.user_type === \"student\" && (\r\n          <iframe\r\n            title=\"iframe-video\"\r\n            allow=\"camera; microphone; fullscreen; display-capture\"\r\n            // src={`https://meet.jit.si/${single_class_session?.hash_pk}#jitsi_meet_external_api_id=0&config.enableWelcomePage=false&config.prejoinPageEnabled=false&interfaceConfig.prejoinPageEnabled=false&interfaceConfig.DISPLAY_WELCOME_FOOTER=false&interfaceConfig.GENERATE_ROOMNAMES_ON_WELCOME_PAGE=false&interfaceConfig.HIDE_INVITE_MORE_HEADER=true&interfaceConfig.HIDE_DEEP_LINKING_LOGO=true&interfaceConfig.SHOW_JITSI_WATERMARK=false&interfaceConfig.SHOW_WATERMARK_FOR_GUESTS=false&interfaceConfig.TOOLBAR_BUTTONS=%5B%22microphone%22%2C%22camera%22%2C%22desktop%22%2C%22fullscreen%22%2C%22fodeviceselection%22%2C%22hangup%22%2C%22profile%22%2C%22etherpad%22%2C%22settings%22%2C%22raisehand%22%2C%22stats%22%2C%22shortcuts%22%2C%22tileview%22%2C%22videobackgroundblur%22%2C%22mute-everyone%22%5D&appData.localStorageContent=null&userInfo.displayName=\"${user?.fullname}\"`}\r\n            src={\r\n              \"https://meet.jit.si/c20ad4d76fe97759aa27a0c99bff6710#jitsi_meet_external_api_id=0&config.enableWelcomePage=false&config.prejoinPageEnabled=false&config.disableLogCollector=true&config.defaultLogLevel=%22error%22&interfaceConfig.disableLogCollector=true&interfaceConfig.defaultLogLevel=%22error%22&interfaceConfig.prejoinPageEnabled=false&interfaceConfig.DISPLAY_WELCOME_FOOTER=false&interfaceConfig.GENERATE_ROOMNAMES_ON_WELCOME_PAGE=false&interfaceConfig.HIDE_INVITE_MORE_HEADER=true&interfaceConfig.HIDE_DEEP_LINKING_LOGO=true&interfaceConfig.SHOW_JITSI_WATERMARK=false&interfaceConfig.SHOW_WATERMARK_FOR_GUESTS=false&interfaceConfig.TOOLBAR_BUTTONS=%5B%22microphone%22%2C%22camera%22%2C%22desktop%22%2C%22fullscreen%22%2C%22fodeviceselection%22%2C%22hangup%22%2C%22profile%22%2C%22etherpad%22%2C%22settings%22%2C%22raisehand%22%2C%22stats%22%2C%22shortcuts%22%2C%22tileview%22%2C%22videobackgroundblur%22%2C%22mute-everyone%22%5D&appData.localStorageContent=null\"\r\n            }\r\n            style={{ height: `100%`, width: `100%` }}\r\n          ></iframe>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n});\r\n\r\nexport default SessionVideoConf;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useMemo, useRef } from \"react\";\r\nimport { Controller, FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport FormDialog from \"../../../../Component/FormDialog/FormDialog\";\r\nimport TextFieldHookForm from \"../../../../Component/HookForm/TextFieldHookForm\";\r\nimport {\r\n  endClassSessionAction,\r\n  setSingleClassSession,\r\n} from \"../../../../Services/Actions/ClassSessionActions\";\r\ninterface IDialogSessionEnd {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  remarks: Yup.string().required().label(\"Remarks\"),\r\n});\r\n\r\nexport const DialogSessionEnd: FC<IDialogSessionEnd> = memo(\r\n  ({ open, setOpen }) => {\r\n    const params = useParams<any>();\r\n    const dispatch = useDispatch();\r\n    const formMethods = useForm({\r\n      resolver: yupResolver(validationSchema),\r\n    });\r\n\r\n    const onSubmit = useCallback(\r\n      (data) => {\r\n        const payload = {\r\n          session_pk: params.session_pk,\r\n          remarks: data.remarks,\r\n        };\r\n\r\n        dispatch(\r\n          endClassSessionAction(payload, () => {\r\n            dispatch(setSingleClassSession(payload.session_pk));\r\n          })\r\n        );\r\n      },\r\n      [dispatch, params.session_pk]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        open={open}\r\n        title=\"You are ending this class session!\"\r\n        handleClose={() => setOpen(false)}\r\n        body={\r\n          <div style={{ padding: `1em 0` }}>\r\n            <FormProvider {...formMethods}>\r\n              <form\r\n                id=\"remarks-form\"\r\n                onSubmit={formMethods.handleSubmit(onSubmit)}\r\n                noValidate\r\n              >\r\n                <TextFieldHookForm\r\n                  // name=\"remarks\"\r\n                  name={\"remarks\"}\r\n                  defaultValue=\"\"\r\n                  label=\"Class Session Remarks\"\r\n                  multiline={true}\r\n                  rows={4}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  required\r\n                  InputLabelProps={{ shrink: true }}\r\n                  placeholder=\"Kindly write your remarks here...\"\r\n                />\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              variant=\"contained\"\r\n              form=\"remarks-form\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                // formRef.current?.submit();\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              End Now\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\">\r\n              Cancel\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default DialogSessionEnd;\r\n","import { Button, Chip, Grid } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport UseInterval from \"../../../../Hooks/UseInterval\";\r\nimport {\r\n  setSingleClassSession,\r\n  startClassSessionAction,\r\n} from \"../../../../Services/Actions/ClassSessionActions\";\r\nimport { ClassSessionModel } from \"../../../../Services/Models/ClassSessionModel\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport DialogSessionEnd from \"./DialogSessionEnd\";\r\ninterface ISessionDtls {}\r\n\r\nexport const SessionDtls: FC<ISessionDtls> = memo(() => {\r\n  const single_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n  );\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n\r\n  const [open_dialog_end, set_open_dialog_end] = useState(false);\r\n  const [ellapsed_time, set_ellapsed_time] = useState<any>(\"\");\r\n\r\n  const handleSetDialogEnd = useCallback((open: boolean) => {\r\n    set_open_dialog_end(open);\r\n  }, []);\r\n\r\n  const handleChangeEllapseTime = useCallback(() => {\r\n    if (single_class_session?.began && !single_class_session.ended) {\r\n      const ellapse = moment.duration(\r\n        moment(new Date()).diff(moment(single_class_session?.began))\r\n      );\r\n      set_ellapsed_time(\r\n        ellapse.hours() +\r\n          \" hr, \" +\r\n          ellapse.minutes() +\r\n          \" min, \" +\r\n          ellapse.seconds() +\r\n          \" sec\"\r\n      );\r\n    }\r\n  }, [single_class_session]);\r\n\r\n  UseInterval(handleChangeEllapseTime, 1000);\r\n\r\n  return (\r\n    <Grid item xs={12} container style={{ backgroundColor: `#fff` }}>\r\n      <Grid item xs={12} md={8}>\r\n        <div className=\"main-dtls-ctnr\">\r\n          <div\r\n            style={{\r\n              fontSize: `1.3em`,\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            {single_class_session?.class_desc} /{\" \"}\r\n            {single_class_session?.course_desc}\r\n          </div>\r\n          <div className=\"sub-title-cntr\">\r\n            <div className=\"sub-title\">\r\n              <div className=\"label\">Started at</div>\r\n              <div className=\"value\">\r\n                <Chip\r\n                  label={parseDateTimeOrDefault(\r\n                    single_class_session?.began,\r\n                    \"TBD\"\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"sub-title\">\r\n              <div className=\"label\">Ended at </div>\r\n              <div className=\"value\">\r\n                <Chip\r\n                  label={parseDateTimeOrDefault(\r\n                    single_class_session?.ended,\r\n                    \"TBD\"\r\n                  )}\r\n                />\r\n              </div>\r\n            </div>\r\n            {!single_class_session?.ended && (\r\n              <div className=\"sub-title\">\r\n                <div className=\"label\">Ellapsed Time</div>\r\n                <div className=\"value\">\r\n                  <Chip label={ellapsed_time} />\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={4}\r\n        container\r\n        spacing={1}\r\n        alignItems=\"center\"\r\n        justify=\"flex-end\"\r\n      >\r\n        {user?.user_type === \"tutor\" && (\r\n          <>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                disabled={single_class_session?.sts_pk !== \"fa\"}\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  const payload: ClassSessionModel = {\r\n                    session_pk: params.session_pk,\r\n                  };\r\n                  dispatch(\r\n                    startClassSessionAction(payload, () => {\r\n                      dispatch(setSingleClassSession(payload.session_pk));\r\n                    })\r\n                  );\r\n                }}\r\n              >\r\n                Start Now\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => handleSetDialogEnd(true)}\r\n                disabled={single_class_session?.sts_pk !== \"s\"}\r\n              >\r\n                End & Write Remarks\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n\r\n      <DialogSessionEnd open={open_dialog_end} setOpen={handleSetDialogEnd} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default SessionDtls;\r\n","import Badge from \"@material-ui/core/Badge\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nexport default StyledBadge;\r\n","import { Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { io } from \"socket.io-client\";\r\nimport CustomAvatar from \"../../../../Component/CustomAvatar\";\r\nimport { API_BASE_URL, getAccessToken } from \"../../../../Helpers/AppConfig\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport ClassSessionApi from \"../../../../Services/Api/ClassSessionApi\";\r\nimport { ClassSesMsgModel } from \"../../../../Services/Models/ClassSessionModel\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport StyledBadge from \"../../../../Styles/MaterialStyles/StyledBadge\";\r\n\r\ninterface ISessionTabs {}\r\n\r\nexport const SessionTabs: FC<ISessionTabs> = memo(() => {\r\n  const socketRef = useRef<any>();\r\n  const messagesEndRef = useRef(null);\r\n  const ref = useRef<HTMLFormElement | null>();\r\n\r\n  const params = useParams<any>();\r\n\r\n  const [active_tab, set_active_tab] = useState<\"s\" | \"c\">(\"s\");\r\n  const [active_students, set_active_students] = useState<any>([]);\r\n  const [message_body, set_message_body] = useState(\"\");\r\n  const [message_table, set_message_table] = useState<Array<ClassSesMsgModel>>(\r\n    []\r\n  );\r\n  const [reload_messages, set_reload_messages] = useState(0);\r\n\r\n  const tbl_class_students = useSelector(\r\n    (store: RootStore) => store.ClassStudentReducer.tbl_class_students\r\n  );\r\n\r\n  const handleSetMessageBody = useCallback((e) => {\r\n    set_message_body(e.target.value);\r\n  }, []);\r\n\r\n  const handleSubmitMessage = useCallback(async () => {\r\n    const payload: ClassSesMsgModel = {\r\n      msg_body: message_body,\r\n      session_pk: params.session_pk,\r\n    };\r\n\r\n    const response = await ClassSessionApi.saveMessage(payload);\r\n\r\n    if (response.success) {\r\n      socketRef.current.emit(\"sendMessage\", params.session_pk);\r\n      set_message_body(\"\");\r\n    }\r\n  }, [message_body, params.session_pk]);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(`${API_BASE_URL}socket/chat`, {\r\n      query: {\r\n        token: getAccessToken(),\r\n      },\r\n    });\r\n\r\n    socketRef.current.on(\"connected\", (data) => {});\r\n\r\n    socketRef.current.emit(\"joinSession\", params.session_pk);\r\n\r\n    socketRef.current.on(\"updateRoom\", (users) => {\r\n      set_active_students(users);\r\n    });\r\n\r\n    socketRef.current.on(\"allMessage\", () => {\r\n      set_reload_messages((prev) => prev + 1);\r\n    });\r\n\r\n    socketRef.current.on(\"failedMessage\", (error: string) => {\r\n      alert(error);\r\n    });\r\n\r\n    return () => {\r\n      socketRef?.current?.disconnect();\r\n    };\r\n  }, [params.session_pk]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const reloadMessages = async () => {\r\n      const response = await ClassSessionApi.getAllMessage(params.session_pk);\r\n\r\n      if (response.success) {\r\n        set_message_table(response.data);\r\n      }\r\n    };\r\n\r\n    mounted && reloadMessages();\r\n    return () => (mounted = false);\r\n  }, [params.session_pk, reload_messages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView();\r\n  }, [message_table, active_tab]);\r\n\r\n  return (\r\n    <Grid item xs={12} md={3}>\r\n      <div className=\"info-ctnr\">\r\n        <div className=\"ctnr-title\">Meeting Details</div>\r\n        <div className=\"tabs\">\r\n          <div\r\n            className={`tab-item ${active_tab === \"s\" && \"active\"}`}\r\n            onClick={() => set_active_tab(\"s\")}\r\n          >\r\n            Students\r\n          </div>\r\n          <div\r\n            className={`tab-item ${active_tab === \"c\" && \"active\"}`}\r\n            onClick={() => set_active_tab(\"c\")}\r\n          >\r\n            Chat\r\n          </div>\r\n        </div>\r\n\r\n        {active_tab === \"s\" && (\r\n          <div className=\"student-tab\">\r\n            {tbl_class_students?.map((student, i) => (\r\n              <div key={i} className=\"student-item\">\r\n                {active_students.findIndex(\r\n                  (stud) => stud.user_pk === student.student_details.user_id\r\n                ) === -1 ? (\r\n                  <CustomAvatar\r\n                    src={student.student_details.picture}\r\n                    errorMessage={student.student_details.lastname.charAt(0)}\r\n                  />\r\n                ) : (\r\n                  <StyledBadge\r\n                    overlap=\"circle\"\r\n                    anchorOrigin={{\r\n                      vertical: \"bottom\",\r\n                      horizontal: \"right\",\r\n                    }}\r\n                    variant=\"dot\"\r\n                  >\r\n                    <CustomAvatar\r\n                      src={student.student_details.picture}\r\n                      errorMessage={student.student_details.lastname.charAt(0)}\r\n                    />\r\n                  </StyledBadge>\r\n                )}\r\n                {student.student_details.lastname}\r\n                {\", \"} {student.student_details.firstname}{\" \"}\r\n                {student.student_details.middlename}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {active_tab === \"c\" && (\r\n          <div className=\"chat-tab\">\r\n            <div className=\"sent-msg-ctnr\">\r\n              {message_table.map((msg, i) => (\r\n                <div key={i} ref={messagesEndRef} className=\"sent-msg-item\">\r\n                  <CustomAvatar\r\n                    className=\"img\"\r\n                    src={msg.picture}\r\n                    errorMessage={msg.fullname?.charAt(0)}\r\n                  />\r\n                  <div className=\"name\">{msg.fullname}</div>\r\n                  <div className=\"time\">\r\n                    {parseDateTimeOrDefault(msg.sent_at, \"-\")}\r\n                  </div>\r\n                  <div className=\"message\">{msg.msg_body}</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <form\r\n              id=\"hook-form\"\r\n              ref={ref}\r\n              onSubmit={(e) => {\r\n                e.preventDefault();\r\n                handleSubmitMessage();\r\n              }}\r\n              className=\"write-msg-ctnr\"\r\n            >\r\n              <TextField\r\n                value={message_body}\r\n                onChange={handleSetMessageBody}\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                placeholder=\"Write your message here...\"\r\n                multiline\r\n                rowsMax={2}\r\n                rows={2}\r\n                className=\"write-btn\"\r\n                onKeyDown={(\r\n                  event: React.KeyboardEvent<HTMLDivElement>\r\n                ): void => {\r\n                  if (event.key === \"Enter\" && !event.shiftKey) {\r\n                    if (ref.current) {\r\n                      handleSubmitMessage();\r\n                    }\r\n                  }\r\n                }}\r\n                InputProps={{\r\n                  style: {\r\n                    backgroundColor: `#f1f3f8`,\r\n                  },\r\n                }}\r\n                // rowsMax={1}\r\n              />\r\n              <IconButton form=\"hook-form\" type=\"submit\" color=\"primary\">\r\n                <SendRoundedIcon />\r\n              </IconButton>\r\n            </form>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default SessionTabs;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ManageClassSelectedSessionTutorStyle = styled.div`\r\n  color: #333;\r\n\r\n  .main-dtls-ctnr {\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    justify-content: start;\r\n    justify-items: start;\r\n    align-items: center;\r\n    align-content: center;\r\n    background-color: #fff;\r\n    width: 100%;\r\n\r\n    .sub-title-cntr {\r\n      display: grid;\r\n      grid-gap: 1em;\r\n      grid-auto-flow: column;\r\n      .sub-title {\r\n        font-size: 0.85em;\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        grid-gap: 0.5em;\r\n        align-items: center;\r\n        justify-content: start;\r\n        justify-items: start;\r\n      }\r\n    }\r\n  }\r\n\r\n  .task-ctnr {\r\n    background-color: #fff;\r\n    padding: 0.5em;\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    align-content: start;\r\n    height: 100%;\r\n    align-items: start;\r\n    .ctnr-title {\r\n      justify-content: start;\r\n      align-content: start;\r\n    }\r\n\r\n    .actions {\r\n      display: grid;\r\n      justify-content: end;\r\n      align-items: center;\r\n      padding: 0.5em 0;\r\n    }\r\n\r\n    .task-data-ctnr {\r\n      display: grid;\r\n      grid-gap: 1em;\r\n      align-self: start;\r\n      align-items: start;\r\n      align-content: start;\r\n\r\n      .task-item {\r\n        display: grid;\r\n        /* grid-gap: 0.3em; */\r\n        padding: 0.5em;\r\n        border: 0.01em solid rgba(0, 0, 0, 0.1);\r\n        border-radius: 7px;\r\n        .title {\r\n          font-weight: 600;\r\n          padding: 0.2em 0;\r\n        }\r\n        .group {\r\n          font-size: 0.8em;\r\n          font-weight: 400;\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          grid-gap: 0.3em;\r\n        }\r\n        .desc {\r\n          font-size: 0.85em;\r\n          padding: 1em 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .vid-ctnr {\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    height: 600px;\r\n    background-color: #fff;\r\n  }\r\n  .info-ctnr {\r\n    background-color: #fff;\r\n    padding: 0.5em;\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    align-content: start;\r\n\r\n    .tabs {\r\n      width: 100%;\r\n      /* .tab-item {\r\n        padding: 0.5em;\r\n        font-weight: 500;\r\n        text-transform: uppercase;\r\n        font-size: 0.9em;\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n          background-color: rgba(0, 0, 0, 0.05);\r\n          border-radius: 5px;\r\n        }\r\n\r\n        &.active {\r\n          transition: 0.3s all ease-in-out !important;\r\n          color: blue !important;\r\n          border-bottom: 1px solid blue !important;\r\n        }\r\n      } */\r\n    }\r\n\r\n    .student-tab {\r\n      height: 490px;\r\n      overflow-y: auto;\r\n      .student-item {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        align-items: center;\r\n        justify-content: start;\r\n        grid-gap: 0.5em;\r\n        padding: 0.3em 0;\r\n        border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n        .img {\r\n          font-size: 0.87em;\r\n          font-weight: 700;\r\n        }\r\n        .name {\r\n          font-weight: 500;\r\n          font-size: 0.9em;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chat-tab {\r\n      display: grid;\r\n      align-items: start;\r\n      align-content: start;\r\n      /* grid-auto-rows: 400px 100px; */\r\n      grid-gap: 0.3em;\r\n      .sent-msg-ctnr {\r\n        height: 410px;\r\n        overflow-y: scroll;\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n\r\n        .sent-msg-item {\r\n          display: grid;\r\n          padding: 0.7em;\r\n          grid-template-areas: \"img name time\" \"img msg msg\";\r\n          grid-auto-columns: auto 1fr;\r\n          grid-auto-rows: auto 1fr;\r\n          align-items: center;\r\n          align-content: start;\r\n          justify-content: start;\r\n          justify-items: start;\r\n          border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n\r\n          .img {\r\n            margin-right: 0.5em;\r\n            align-self: end;\r\n          }\r\n          .time {\r\n            font-size: 0.67em;\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0 0.3em;\r\n          }\r\n          .name {\r\n            grid-area: name;\r\n            font-size: 0.75em;\r\n            font-weight: 600;\r\n            padding: 0 0.3em;\r\n            align-self: center;\r\n          }\r\n          .message {\r\n            grid-area: msg;\r\n            border-radius: 10px;\r\n            padding: 0.5em;\r\n            align-self: start;\r\n            font-weight: 500;\r\n            font-size: 0.9em;\r\n            background-color: #e4e6eb;\r\n          }\r\n        }\r\n      }\r\n\r\n      .write-msg-ctnr {\r\n        padding: 0.3em 0;\r\n        display: grid;\r\n        align-self: start;\r\n        align-items: center;\r\n        align-content: center;\r\n        grid-auto-columns: 1fr auto;\r\n        grid-auto-flow: column;\r\n        grid-gap: 4px;\r\n\r\n        /* .write-btn {\r\n          margin-top: 200px;\r\n          margin-right: 34px;\r\n          width: 150px;\r\n          height: 45px;\r\n          background: black;\r\n          float: right;\r\n          position: absolute;\r\n          bottom: 10px;\r\n          transition: height 2s ease-in-out;\r\n\r\n          &:hover {\r\n            height: 180px;\r\n          }\r\n        } */\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport FormDialog from \"../../../../Component/FormDialog/FormDialog\";\r\nimport DateFieldHookForm from \"../../../../Component/HookForm/DateFieldHookForm\";\r\nimport TextFieldHookForm from \"../../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../../Services/Actions/ClassSessionTaskActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setSnackbar,\r\n} from \"../../../../Services/Actions/PageActions\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n} from \"../../../../Services/Models/ClassSessionTaskModels\";\r\ninterface IDialogAddTask {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  task_title: Yup.string().required().label(\"Task Title\"),\r\n  task_desc: Yup.string().required().label(\"Task Description\"),\r\n  due_date: Yup.string().nullable().required().label(\"Due Date\"),\r\n});\r\n\r\nconst validate_add_task = Yup.object({\r\n  question: Yup.string().required().label(\"Question\"),\r\n  cor_answer: Yup.string().required().label(\"Correct Answert\"),\r\n  pnt: Yup.number().min(0).nullable().required().label(\"Point\"),\r\n});\r\n\r\nexport const DialogAddTask: FC<IDialogAddTask> = memo(({ open, setOpen }) => {\r\n  const params = useParams<any>();\r\n  const dispatch = useDispatch();\r\n  const form_create_task = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [open_add_ques, set_open_add_ques] = useState(false);\r\n\r\n  const [questions, set_questions] = useState<Array<SessionTaskQuesModel>>([]);\r\n\r\n  const handleSetOpenAddQuest = useCallback((open: boolean) => {\r\n    set_open_add_ques(open);\r\n  }, []);\r\n\r\n  const form_add_task = useForm({\r\n    resolver: yupResolver(validate_add_task),\r\n  });\r\n\r\n  const handleSubmitFormTask = useCallback(\r\n    (data) => {\r\n      const payload: SessionTaskModel = {\r\n        class_pk: params.class_pk,\r\n        ...data,\r\n        questions: questions,\r\n      };\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              ClassSessionTaskActions.addClassMaterialAction(\r\n                payload,\r\n                (msg: string) => {\r\n                  setOpen(false);\r\n                  form_create_task.reset();\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setAllClassTask(params.class_pk)\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, form_create_task, params.class_pk, questions, setOpen]\r\n  );\r\n\r\n  const handleSubmitFormAddTask = useCallback(\r\n    (form_data) => {\r\n      set_questions((q) => [...q, form_data]);\r\n\r\n      dispatch(setSnackbar(\"The question has been added\", \"success\"));\r\n\r\n      set_open_add_ques(false);\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Create a New Task\"\r\n      handleClose={() => setOpen(false)}\r\n      scroll=\"paper\"\r\n      body={\r\n        <div style={{ padding: `1em 0`, display: `grid`, gridGap: `2em` }}>\r\n          <FormProvider {...form_create_task}>\r\n            <form\r\n              id=\"remarks-form\"\r\n              onSubmit={form_create_task.handleSubmit(handleSubmitFormTask)}\r\n              noValidate\r\n            >\r\n              <Grid spacing={3} container>\r\n                <Grid item xs={6}>\r\n                  <TextFieldHookForm\r\n                    name=\"task_title\"\r\n                    defaultValue=\"\"\r\n                    label=\"Task Title\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    required\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <DateFieldHookForm\r\n                    name=\"due_date\"\r\n                    type=\"datetime\"\r\n                    fullWidth={true}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    inputVariant={\"outlined\"}\r\n                    disablePast\r\n                    defaultValue={null}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextFieldHookForm\r\n                    name=\"task_desc\"\r\n                    defaultValue=\"\"\r\n                    label=\"Task Description\"\r\n                    multiline={true}\r\n                    rows={3}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    required\r\n                    InputLabelProps={{ shrink: true }}\r\n                    placeholder=\"Write the class description and/or instructions here...\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </FormProvider>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    handleSetOpenAddQuest(true);\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell width=\"5%\">#</TableCell>\r\n                      <TableCell width=\"85%\">Question Details</TableCell>\r\n                      <TableCell width=\"10%\">Actions</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {questions.map((q, i) => (\r\n                      <TableRow key={i}>\r\n                        <TableCell>{i + 1}</TableCell>\r\n                        <TableCell>\r\n                          <div\r\n                            style={{\r\n                              display: `grid`,\r\n                              gridGap: `.3em`,\r\n                              fontWeight: 500,\r\n                              fontSize: `.87em`,\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Q: <span className=\"ques\">{q.question}</span>\r\n                            </div>\r\n                            <div>\r\n                              A: <span className=\"ques\">{q.cor_answer}</span>\r\n                            </div>\r\n                            <div>\r\n                              P: <span className=\"ques\">{q.pnt}</span>\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              set_questions((q) => {\r\n                                q.splice(i, 1);\r\n                                return [...q];\r\n                              });\r\n                            }}\r\n                          >\r\n                            <DeleteRoundedIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <FormDialog\r\n              title={\"Add Question to the Task\"}\r\n              minWidth={450}\r\n              open={open_add_ques}\r\n              body={\r\n                <div style={{ padding: `1em` }}>\r\n                  <FormProvider {...form_add_task}>\r\n                    <form\r\n                      id=\"add-question-form\"\r\n                      onSubmit={form_add_task.handleSubmit(\r\n                        handleSubmitFormAddTask\r\n                      )}\r\n                      noValidate\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                          <TextFieldHookForm\r\n                            name=\"question\"\r\n                            label=\"Question\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                            placeholder=\"Write the question here...\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextFieldHookForm\r\n                            name=\"cor_answer\"\r\n                            label=\"Answer\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                            placeholder=\"Write the answer of the question here...\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <TextFieldHookForm\r\n                            name=\"pnt\"\r\n                            defaultValue={1}\r\n                            label=\"Point\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </FormProvider>\r\n                </div>\r\n              }\r\n              handleClose={() => {\r\n                handleSetOpenAddQuest(false);\r\n              }}\r\n              actions={\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    form=\"add-question-form\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Add Question\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n          </Grid>\r\n        </div>\r\n      }\r\n      actions={\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            form=\"remarks-form\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              // formRef.current?.submit();\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Save Task\r\n          </Button>\r\n          <Button variant=\"contained\" color=\"secondary\">\r\n            Cancel/Close\r\n          </Button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n});\r\n\r\nexport default DialogAddTask;\r\n","import { Button, Chip, Grid } from \"@material-ui/core\";\r\nimport React, { memo, FC, useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LinearLoadingProgress from \"../../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport DialogAddTask from \"./DialogAddTask\";\r\n\r\ninterface ISessionTasks {}\r\n\r\nexport const SessionTasks: FC<ISessionTasks> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n  const [open_add_task, set_open_add_task] = useState(false);\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user.user_type\r\n  );\r\n\r\n  const all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.all_class_task\r\n  );\r\n  const fetch_all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.fetch_all_class_task\r\n  );\r\n\r\n  const handleSetOpenAddTask = useCallback((open: boolean) => {\r\n    set_open_add_task(open);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchAllTasks = () => {\r\n      dispatch(ClassSessionTaskActions.setAllClassTask(params.class_pk));\r\n    };\r\n    mounted && fetchAllTasks();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch, params.class_pk]);\r\n\r\n  return (\r\n    <Grid item xs={12} md={2}>\r\n      <div className=\"task-ctnr\">\r\n        <div className=\"ctnr-title\">Tasks</div>\r\n        {user_type === \"tutor\" && (\r\n          <div className=\"actions\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleSetOpenAddTask(true)}\r\n            >\r\n              Add Task\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <LinearLoadingProgress show={fetch_all_class_task} />\r\n\r\n        <div className=\"task-data-ctnr\">\r\n          {all_class_task?.map((t, i) => (\r\n            <div className=\"task-item\">\r\n              <div\r\n                className=\"title link\"\r\n                onClick={() => {\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setSingleClassTask(t.class_task_pk)\r\n                  );\r\n                }}\r\n              >\r\n                {t.task_title}\r\n              </div>\r\n              <div className=\"group\">\r\n                <div className=\"label\">Due Date:</div>\r\n                <div className=\"value\">\r\n                  {parseDateTimeOrDefault(t.due_date, \"-\")}\r\n                </div>\r\n              </div>\r\n              <Chip\r\n                size=\"small\"\r\n                label={t.status_dtls.sts_desc}\r\n                style={{\r\n                  color: t.status_dtls.sts_color,\r\n                  backgroundColor: t.status_dtls.sts_bgcolor,\r\n                  justifySelf: `start`,\r\n                }}\r\n              />\r\n              <div className=\"desc\">{t.task_desc}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DialogAddTask open={open_add_task} setOpen={handleSetOpenAddTask} />\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default SessionTasks;\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { setSingleClassSession } from \"../../../Services/Actions/ClassSessionActions\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport SessionConf from \"./ManageClassSession/SessionVideoConf\";\r\nimport SessionDtls from \"./ManageClassSession/SessionDtls\";\r\nimport SessionTabs from \"./ManageClassSession/SessionTabs\";\r\nimport { ManageClassSelectedSessionTutorStyle } from \"./styles\";\r\nimport SessionTasks from \"./ManageClassSession/SessionTasks\";\r\n\r\ninterface ManageClassSelectedSessionTutorInterface {}\r\n\r\nexport const ManageClassSelectedSessionTutorView: FC<ManageClassSelectedSessionTutorInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<any>();\r\n    const theme = useTheme();\r\n\r\n    const fetch_single_class_session = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_single_class_session\r\n    );\r\n\r\n    const single_class_session = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/tutor/class\",\r\n              title: \"Classes\",\r\n            },\r\n            {\r\n              link: `/tutor/class/${params.id}`,\r\n              title: \"Class Details\",\r\n            },\r\n            {\r\n              link: \"/tutor/class/11/session\",\r\n              title: \"Session\",\r\n            },\r\n            {\r\n              link: window.location.pathname,\r\n              title: \"Manage Session\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch, params.id]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetchClassStudents = () => {\r\n        dispatch(\r\n          ClassStudentActions.setTblClassStudentsAction(params.class_pk)\r\n        );\r\n      };\r\n\r\n      mounted && fetchClassStudents();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, params.class_pk]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetchSingleClassSession = () => {\r\n        dispatch(setSingleClassSession(params.session_pk));\r\n      };\r\n\r\n      mounted && fetchSingleClassSession();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, params.session_pk]);\r\n\r\n    if (fetch_single_class_session) {\r\n      return (\r\n        <Backdrop\r\n          style={{\r\n            zIndex: theme.zIndex.modal + 100,\r\n            color: \"#fff\",\r\n            display: \"grid\",\r\n            gridAutoFlow: \"column\",\r\n            gridGap: \"1em\",\r\n          }}\r\n          open={true}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n          <Typography variant=\"subtitle1\">\r\n            Preparing the data, thank you for your patience!\r\n          </Typography>\r\n        </Backdrop>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container maxWidth=\"xl\">\r\n        {single_class_session ? (\r\n          <ManageClassSelectedSessionTutorStyle>\r\n            <Grid container spacing={1}>\r\n              <SessionDtls />\r\n\r\n              <SessionTasks />\r\n              <Grid item xs={12} md={7}>\r\n                <div className=\"vid-ctnr\">\r\n                  <SessionConf />\r\n                </div>\r\n              </Grid>\r\n              <SessionTabs />\r\n            </Grid>\r\n          </ManageClassSelectedSessionTutorStyle>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassSelectedSessionTutorView;\r\n","import { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React, { memo } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ITab {\r\n  label: String;\r\n  link: string;\r\n}\r\n\r\ninterface ILinkTabs {\r\n  tabs: Array<ITab>;\r\n  RenderSwitchComponent: any;\r\n}\r\n\r\nconst LinkTabs: React.FC<ILinkTabs> = memo(\r\n  ({ tabs, RenderSwitchComponent }) => {\r\n    const theme = useTheme();\r\n    const history = useHistory();\r\n    const desktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n      setValue(newValue);\r\n    };\r\n\r\n    return (\r\n      <StyledLinkTabs>\r\n        <Grid container>\r\n          <Grid item xs={12} md={3} lg={2}>\r\n            <Tabs\r\n              orientation={desktop ? \"vertical\" : \"horizontal\"}\r\n              variant=\"scrollable\"\r\n              value={value}\r\n              onChange={handleChange}\r\n              className=\"tabs\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n              style={{\r\n                // borderRight: desktop\r\n                //   ? `1px solid ${theme.palette.divider}`\r\n                //   : \"\",\r\n                // borderBottom: !desktop\r\n                //   ? `1px solid ${theme.palette.divider}`\r\n                //   : \"\",\r\n                height: \"100%\",\r\n              }}\r\n            >\r\n              {tabs.map((value, index) => (\r\n                <Tab\r\n                  label={value.label}\r\n                  key={index}\r\n                  value={index}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    history.push(value.link);\r\n                  }}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={10}>\r\n            <div className=\"body\" style={{ minHeight: 600 }}>\r\n              {RenderSwitchComponent}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </StyledLinkTabs>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinkTabs;\r\n\r\nconst StyledLinkTabs = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  .tabs {\r\n    .Mui-selected {\r\n      /* color: #2196f3 !important; */\r\n    }\r\n\r\n    .MuiTab-wrapper {\r\n      font-weight: 700 !important;\r\n      letter-spacing: 0.3pt;\r\n      word-spacing: 0.3pt;\r\n    }\r\n  }\r\n  .body {\r\n    /* margin-top: 0.5em; */\r\n    /* padding: 1em; */\r\n    /* border: 0.01em solid rgb(0, 0, 0, 0.1); */\r\n    border-radius: 7px;\r\n  }\r\n`;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport WebViewer from \"@pdftron/webviewer\";\r\nimport React, { memo, FC, useEffect, useRef } from \"react\";\r\n// import docx from \"../Assets/Files/docx.docx\";\r\nimport docx from \"../Assets/Images/Wallpapers/header.jpg\";\r\ninterface IFileViwer {\r\n  file: any;\r\n}\r\n\r\nexport const FileViwer: FC<IFileViwer> = memo(({ file }) => {\r\n  const viewer = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (file) {\r\n      WebViewer(\r\n        {\r\n          path: \"/lib\",\r\n          initialDoc: file,\r\n          isReadOnly: true,\r\n        },\r\n        viewer.current\r\n      ).then((instance) => {\r\n        const { docViewer } = instance;\r\n      });\r\n    }\r\n  }, [file]);\r\n\r\n  if (!file) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"MyComponent\">\r\n      {file ? (\r\n        <div\r\n          className=\"webviewer\"\r\n          ref={viewer}\r\n          style={{ height: \"100vh\" }}\r\n        ></div>\r\n      ) : (\r\n        <div>\r\n          Waiting for a file <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FileViwer;\r\n","export default (payload: any): FormData => {\r\n  const form_data = new FormData();\r\n\r\n  for (var key in payload) {\r\n    form_data.append(key, payload[key]);\r\n  }\r\n\r\n  return form_data;\r\n};\r\n","import { PostFetch, PostFileFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classmaterial/`;\r\n\r\nconst getTblClassMaterialApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTblClassMaterial\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassMaterialApi = async (\r\n  payload: FormData\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFileFetch(\r\n    API_DEFAULT_ROUTE + \"addClassMaterial\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst deleteClassMaterialApi = async (\r\n  mat_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"deleteClassMaterial\", {\r\n    mat_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getTblClassMaterialApi,\r\n  addClassMaterialApi,\r\n  deleteClassMaterialApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassMaterialApi from \"../Api/ClassMaterialApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassMaterialReducerTypes } from \"../Types/ClassMaterialTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setTblClassMaterialAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassMaterialReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_class_material\",\r\n      fetch_class_material: true,\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.getTblClassMaterialApi(\r\n      class_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tbl_class_materials\",\r\n        tbl_class_materials: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"set_fetch_class_material\",\r\n      fetch_class_material: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst addClassMaterialAction = (\r\n  payload: FormData,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.addClassMaterialApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst deleteClassMaterialAction = (\r\n  mat_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.deleteClassMaterialApi(\r\n      mat_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setTblClassMaterialAction,\r\n  addClassMaterialAction,\r\n  deleteClassMaterialAction,\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport FileCopyRoundedIcon from \"@material-ui/icons/FileCopyRounded\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileViwer from \"../../../Component/FileViewer\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { API_BASE_URL } from \"../../../Helpers/AppConfig\";\r\nimport convertObjectToFormData from \"../../../Helpers/convertObjectToFormData\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassMaterialActions from \"../../../Services/Actions/ClassMaterialActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { ClassMaterialModel } from \"../../../Services/Models/ClassMaterialModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\ninterface ManageClassMaterialTutorInterface {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ManageClassMaterialTutorView: FC<ManageClassMaterialTutorInterface> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user?.user_type\r\n    );\r\n    const [\r\n      selectedMaterial,\r\n      setSelectedMaterial,\r\n    ] = useState<ClassMaterialModel | null>(null);\r\n\r\n    const tbl_class_materials = useSelector(\r\n      (store: RootStore) => store.ClassMaterialReducer.tbl_class_materials\r\n    );\r\n\r\n    const fetch_class_material = useSelector(\r\n      (store: RootStore) => store.ClassMaterialReducer.fetch_class_material\r\n    );\r\n\r\n    const [openEnrollStudentModel, setOpenEnrollStudentModel] = useState(false);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_data = () => {\r\n        dispatch(ClassMaterialActions.setTblClassMaterialAction(class_pk));\r\n      };\r\n\r\n      mounted && fetch_data();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_pk, dispatch]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <Grid item container spacing={2}>\r\n          {user_type === \"tutor\" && (\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={() => {\r\n                  setOpenEnrollStudentModel(true);\r\n                }}\r\n              >\r\n                Add Material\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          <Grid item container justify=\"flex-end\"></Grid>\r\n\r\n          <Grid item container spacing={3} justify=\"flex-start\">\r\n            <LinearLoadingProgress show={fetch_class_material} />\r\n            <TableContainer>\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell width=\"90%\">File Description</TableCell>\r\n                    <TableCell align=\"center\">Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tbl_class_materials?.map((material, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            gridAutoFlow: `column`,\r\n                            justifyContent: `start`,\r\n                            gridGap: `1em`,\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            style={{\r\n                              backgroundColor: `#f5f5f5`,\r\n                              color: `#89a1ee`,\r\n                            }}\r\n                            className=\"avatar\"\r\n                          >\r\n                            <FileCopyRoundedIcon />\r\n                          </Avatar>\r\n\r\n                          <div className=\"descrip\">\r\n                            <div className=\"title\" style={{ fontWeight: 600 }}>\r\n                              {material.descrip}\r\n                            </div>\r\n                            <div\r\n                              className=\"datetime\"\r\n                              style={{ fontSize: `.87em` }}\r\n                            >\r\n                              {parseDateTimeOrDefault(material.encoded_at, \"-\")}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <div className=\"actions\">\r\n                          <IconButtonPopper\r\n                            style={{ justifySelf: `end` }}\r\n                            buttons={[\r\n                              {\r\n                                text: \"View Material\",\r\n                                handleClick: () =>\r\n                                  setSelectedMaterial(material),\r\n                              },\r\n                            ]}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <FormDialog\r\n          open={openEnrollStudentModel}\r\n          title=\"Add Material for this Class\"\r\n          handleClose={() => setOpenEnrollStudentModel(false)}\r\n          minWidth={500}\r\n          body={\r\n            <Formik\r\n              initialValues={{\r\n                file: \"\",\r\n                descrip: \"\",\r\n              }}\r\n              onSubmit={async (values: any, formikHelpers) => {\r\n                values.class_pk = class_pk;\r\n                const payload = convertObjectToFormData(values);\r\n\r\n                dispatch(\r\n                  setGeneralPrompt({\r\n                    open: true,\r\n                    continue_callback: () =>\r\n                      dispatch(\r\n                        ClassMaterialActions.addClassMaterialAction(\r\n                          payload,\r\n                          (msg: string) => {\r\n                            formikHelpers.resetForm();\r\n                            dispatch(\r\n                              ClassMaterialActions.setTblClassMaterialAction(\r\n                                class_pk\r\n                              )\r\n                            );\r\n                            setOpenEnrollStudentModel(false);\r\n                          }\r\n                        )\r\n                      ),\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              {({ setFieldValue }) => (\r\n                <Form>\r\n                  <Grid container spacing={4} style={{ padding: `1em 0` }}>\r\n                    <Grid item xs={12}>\r\n                      {/* <BtnFileUpload /> */}\r\n                      <input\r\n                        accept=\".docx,.pdf,.doc,.rtf,.pptx,.ppt,image/*\"\r\n                        //   className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        // multiple\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          setFieldValue(\"file\", e.target.files[0]);\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        name=\"descrip\"\r\n                        label=\"Description\"\r\n                        multiline={true}\r\n                        required\r\n                        variant=\"outlined\"\r\n                        rows={4}\r\n                        fullWidth\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} container justify=\"flex-end\">\r\n                      <Grid item>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          type=\"submit\"\r\n                          disableElevation\r\n                          variant=\"contained\"\r\n                        >\r\n                          Save Material\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          }\r\n        />\r\n\r\n        {selectedMaterial && (\r\n          <FormDialog\r\n            open={selectedMaterial !== null}\r\n            handleClose={() => setSelectedMaterial(null)}\r\n            title={selectedMaterial?.descrip}\r\n            fullScreen={true}\r\n            body={\r\n              <FileViwer\r\n                file={`${API_BASE_URL}${selectedMaterial?.location}`}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassMaterialTutorView;\r\n","import {\r\n  Chip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport {\r\n  parseDateAndDayOfWeekOrDefault,\r\n  parseDateTimeOrDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { getClassSessionsAction } from \"../../../Services/Actions/ClassSessionActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ManageClassSessionTutorInterface {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ManageClassSessionTutorView: FC<ManageClassSessionTutorInterface> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<any>();\r\n    const history = useHistory();\r\n\r\n    console.log(`params`, params);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user.user_type\r\n    );\r\n\r\n    const class_sessions = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.class_sessions\r\n    );\r\n    const fetch_class_sessions = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_class_sessions\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_data = () => {\r\n        dispatch(getClassSessionsAction(class_pk));\r\n      };\r\n\r\n      mounted && fetch_data();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_pk, dispatch]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <LinearLoadingProgress show={fetch_class_sessions} />\r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"20%\">Sched Date</TableCell>\r\n                <TableCell width=\"15%\">Status</TableCell>\r\n                <TableCell width=\"25%\">Began At</TableCell>\r\n                <TableCell width=\"25%\">Ended At</TableCell>\r\n                <TableCell align=\"center\" width=\"5%\">\r\n                  Actions\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {class_sessions?.map((session, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <span style={{ fontWeight: 500 }}>\r\n                      {parseDateAndDayOfWeekOrDefault(session.start_date, \"\")}\r\n                    </span>\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <Chip\r\n                      style={{\r\n                        backgroundColor: session.sts_bgcolor,\r\n                        color: session.sts_color,\r\n                      }}\r\n                      label={session.sts_desc}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {session?.began ? (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#f5f5f5`,\r\n                          color: `blue`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label={parseDateTimeOrDefault(\r\n                          session.began,\r\n                          \"to be decided\"\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#fff`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label=\"to be decided\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {session?.ended ? (\r\n                      <Chip\r\n                        style={{\r\n                          backgroundColor: `#f5f5f5`,\r\n                          color: `blue`,\r\n                        }}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        label={parseDateTimeOrDefault(\r\n                          session.ended,\r\n                          \"to be decided\"\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#fff`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label=\"to be decided\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButtonPopper\r\n                      style={{ justifySelf: `end` }}\r\n                      buttons={[\r\n                        {\r\n                          text: \"Enter into this session\",\r\n                          handleClick: () => {\r\n                            history.push(\r\n                              `/${user_type}/class/${class_pk}/session/${session.session_pk}`\r\n                            );\r\n                          },\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassSessionTutorView;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikAutocomplete from \"../../../Component/Formik/FormikAutocomplete\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { ClassStudentModel } from \"../../../Services/Models/ClassStudentModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ManageClassStudentTutorInterface {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ManageClassStudentTutorView: FC<ManageClassStudentTutorInterface> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const tbl_class_students = useSelector(\r\n      (store: RootStore) => store.ClassStudentReducer.tbl_class_students\r\n    );\r\n    const fetch_tbl_class_students = useSelector(\r\n      (store: RootStore) => store.ClassStudentReducer.fetch_tbl_class_students\r\n    );\r\n\r\n    const [openEnrollStudentModel, setOpenEnrollStudentModel] = useState(false);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user?.user_type\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_data = () => {\r\n        dispatch(ClassStudentActions.setTblClassStudentsAction(class_pk));\r\n      };\r\n\r\n      mounted && fetch_data();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_pk, dispatch]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <LinearLoadingProgress show={fetch_tbl_class_students} />\r\n        <Grid item container justify=\"flex-end\">\r\n          {user_type === \"tutor\" && (\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={() => {\r\n                  setOpenEnrollStudentModel(true);\r\n                }}\r\n              >\r\n                Enroll a Student\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Basic Info</TableCell>\r\n                <TableCell>Gender</TableCell>\r\n                <TableCell>Enrolled At</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {tbl_class_students?.map((student, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <div className=\"table-cell-profile\">\r\n                      <CustomAvatar\r\n                        className=\"image\"\r\n                        src={`${student.student_details.picture}`}\r\n                        errorMessage={`${student.student_details.firstname?.charAt(\r\n                          0\r\n                        )}${student.student_details.lastname?.charAt(0)}`}\r\n                      />\r\n                      <div className=\"title\">\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          {student.student_details.firstname}{\" \"}\r\n                          {student.student_details.middlename}{\" \"}\r\n                          {student.student_details.lastname}{\" \"}\r\n                          {student.student_details.suffix}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"sub-title\">\r\n                        Grade {student.student_details.grade}\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {student.student_details.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {parseDateTimeOrDefault(student.encoded_at, \"-\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <FormDialog\r\n          open={openEnrollStudentModel}\r\n          title=\"Choose a student to enroll\"\r\n          handleClose={() => setOpenEnrollStudentModel(false)}\r\n          minWidth={500}\r\n          body={\r\n            <Formik\r\n              initialValues={{\r\n                student_pk: \"\",\r\n                student_name: \"\",\r\n              }}\r\n              onSubmit={(values, formikHelpers) => {\r\n                const payload: ClassStudentModel = {\r\n                  student_pk: parseInt(values.student_pk),\r\n                  class_pk: class_pk,\r\n                  student_name: values.student_name,\r\n                };\r\n\r\n                dispatch(\r\n                  setGeneralPrompt({\r\n                    open: true,\r\n                    continue_callback: () =>\r\n                      dispatch(\r\n                        ClassStudentActions.enrollClassStudentAction(\r\n                          payload,\r\n                          (msg: string) => {\r\n                            formikHelpers.resetForm();\r\n                            setOpenEnrollStudentModel(false);\r\n                          }\r\n                        )\r\n                      ),\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              <Form>\r\n                <Grid container spacing={2} style={{ padding: `1em 0` }}>\r\n                  <Grid item xs={12}>\r\n                    <FormikAutocomplete\r\n                      label=\"Student\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"student_pk\"\r\n                      selectFieldName=\"student_name\"\r\n                      endPoint=\"api/student/searchStudentNotInClass\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Enter the student name\"\r\n                      other_payload={{\r\n                        class_pk: class_pk,\r\n                      }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} container justify=\"flex-end\">\r\n                    <Grid item>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        type=\"submit\"\r\n                        disableElevation\r\n                        variant=\"contained\"\r\n                      >\r\n                        Enroll Student\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Form>\r\n            </Formik>\r\n          }\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassStudentTutorView;\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Chip,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport {\r\n  parseDateAndDayOfWeekOrDefault,\r\n  parseDateTimeOrDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\ninterface ManageClassMaterialTutorInterface {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ManageClassTaskTutorView: FC<ManageClassMaterialTutorInterface> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_class_task = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_class_task\r\n    );\r\n    const fetch_all_class_task = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.fetch_all_class_task\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetchAllTasks = () => {\r\n        dispatch(ClassSessionTaskActions.setAllClassTask(class_pk));\r\n      };\r\n      mounted && fetchAllTasks();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, class_pk]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <LinearLoadingProgress show={fetch_all_class_task} />\r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"20%\">Task Title</TableCell>\r\n                <TableCell width=\"50%\">Description/Instruction</TableCell>\r\n                <TableCell width=\"10%\">Status</TableCell>\r\n                <TableCell width=\"15%\">Due Date</TableCell>\r\n                <TableCell width=\"5%\"></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {all_class_task?.map((t, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>{t.task_title}</TableCell>\r\n                  <TableCell>\r\n                    <small>{t.task_desc}</small>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={t.status_dtls.sts_desc}\r\n                      style={{\r\n                        color: t.status_dtls.sts_color,\r\n                        backgroundColor: t.status_dtls.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <small style={{ fontWeight: 500 }}>\r\n                      {parseDateTimeOrDefault(t.due_date, \"\")}\r\n                    </small>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <IconButtonPopper\r\n                      style={{ justifySelf: `end` }}\r\n                      buttons={[\r\n                        {\r\n                          text: \"Go to Task\",\r\n                          handleClick: () => {\r\n                            dispatch(\r\n                              ClassSessionTaskActions.setSingleClassTask(\r\n                                t.class_task_pk\r\n                              )\r\n                            );\r\n                          },\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassTaskTutorView;\r\n","import { Chip, Container } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, Route, Switch, useParams } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport CustomTab from \"../../../Component/CustomTabs\";\r\nimport LinkTabs from \"../../../Component/LinkTabs\";\r\nimport {\r\n  InvalidDateToDefault,\r\n  parseTimeOrDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { setSelectedClassAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledSessionTutorView } from \"../../../Styles/GlobalStyles\";\r\nimport ManageClassMaterialTutorView from \"./ManageClassMaterialTutorView\";\r\nimport ManageClassSessionTutorView from \"./ManageClassSessionTutorView\";\r\nimport ManageClassStudentTutorView from \"./ManageClassStudentTutorView\";\r\nimport ManageClassTaskTutorView from \"./ManageClassTaskTutorView\";\r\n\r\ninterface ManageClassTutorViewInterface {}\r\n\r\nexport const ManageClassTutorView: FC<ManageClassTutorViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<any>();\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user?.user_type\r\n    );\r\n\r\n    const selected_class = useSelector(\r\n      (store: RootStore) => store.ClassReducer.selected_class\r\n    );\r\n    const fetching_selected_class = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetching_selected_class\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetching_data = () => {\r\n        dispatch(setSelectedClassAction(params.class_pk));\r\n      };\r\n\r\n      mounted && fetching_data();\r\n      return () => (mounted = false);\r\n    }, [dispatch, params.class_pk]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/tutor/class\",\r\n              title: \"Classes\",\r\n            },\r\n            {\r\n              link: \"/tutor/class\",\r\n              title: \"Class Details\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <span></span>\r\n        {selected_class && user_type && (\r\n          <StyledSessionTutorView>\r\n            <div className=\"course_img\">\r\n              <CustomAvatar\r\n                errorMessage={selected_class?.class_desc?.charAt(0)}\r\n                src={selected_class.pic}\r\n                widthSpacing={25}\r\n                heightSpacing={15}\r\n                variant=\"square\"\r\n              />\r\n            </div>\r\n            <div className=\"course-desc\">\r\n              <div className=\"course-title\">\r\n                <div>\r\n                  {selected_class.class_desc} (\r\n                  <small>{selected_class.course_desc}</small>)\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"course-subtitle\">\r\n                <div className=\"room\">\r\n                  <div>{selected_class.room_desc}</div>\r\n                </div>\r\n                <div>/</div>\r\n                <div className=\"duration\">\r\n                  {selected_class.course_duration} mins\r\n                </div>\r\n                <div>/</div>\r\n                <div className=\"datetime\">\r\n                  {InvalidDateToDefault(selected_class.start_date, \"\")}{\" \"}\r\n                  {parseTimeOrDefault(selected_class.start_time, \"\")} -{\" \"}\r\n                  {parseTimeOrDefault(selected_class.end_time, \"\")}\r\n                </div>\r\n              </div>\r\n              <Chip\r\n                label={selected_class.class_type === \"o\" ? \"Online\" : \"Offline\"}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"tabs\">\r\n              <LinkTabs\r\n                tabs={[\r\n                  {\r\n                    label: \"Sessions\",\r\n                    link: `/${user_type}/class/${params.class_pk}/session`,\r\n                  },\r\n                  {\r\n                    label: \"Students\",\r\n                    link: `/${user_type}/class/${params.class_pk}/student`,\r\n                  },\r\n                  {\r\n                    label: \"Materials\",\r\n                    link: `/${user_type}/class/${params.class_pk}/material`,\r\n                  },\r\n                  {\r\n                    label: \"Tasks\",\r\n                    link: `/${user_type}/class/${params.class_pk}/task`,\r\n                  },\r\n                ]}\r\n                RenderSwitchComponent={\r\n                  <Switch>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/session`}\r\n                      exact\r\n                    >\r\n                      <ManageClassSessionTutorView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/student`}\r\n                      exact\r\n                    >\r\n                      <ManageClassStudentTutorView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/material`}\r\n                      exact\r\n                    >\r\n                      <ManageClassMaterialTutorView\r\n                        class_pk={params.class_pk}\r\n                      />\r\n                    </Route>\r\n\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/task`}\r\n                      exact\r\n                    >\r\n                      <ManageClassTaskTutorView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/attendance`}\r\n                      exact\r\n                    >\r\n                      <div>Attendance</div>\r\n                    </Route>\r\n                  </Switch>\r\n                }\r\n              />\r\n            </div>\r\n          </StyledSessionTutorView>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassTutorView;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport CalendarTutorView from \"../Views/TutorViews/CalendarTutorView\";\r\nimport DataClassTutorView from \"../Views/TutorViews/ClassTutorViews/DataClassTutorView\";\r\nimport ManageClassSelectedSessionTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassSelectedSessionTutorView\";\r\nimport SessionTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassTutorView\";\r\n\r\nconst TutorRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/tutor/home\" exact>\r\n        <CalendarTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class\" exact>\r\n        <DataClassTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class/:class_pk/session/:session_pk\" strict exact>\r\n        <ManageClassSelectedSessionTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class/:class_pk\" strict>\r\n        <SessionTutorView />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default TutorRoutes;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport React, { memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setPageSuccessPromptAction } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst Transition: any = React.forwardRef(function Transition(\r\n  props: any,\r\n  ref: any\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const PageSuccessPrompt = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const page_success_prompt = useSelector(\r\n    (store: RootStore) => store.PageReducer.page_success_prompt\r\n  );\r\n\r\n  return (\r\n    <StyledSuccessDialog\r\n      open={page_success_prompt?.show ? page_success_prompt?.show : false}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      disableEscapeKeyDown={true}\r\n      TransitionComponent={Transition}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"-50px\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              height: \"3.5em\",\r\n              width: \"3.5em\",\r\n              backgroundColor: \"#8bc34a\",\r\n            }}\r\n          >\r\n            <CheckRoundedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className=\"dialog-content\">\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Successful!\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            fontSize: `1rem`,\r\n            fontWeight: 900,\r\n            color: `#2196f3`,\r\n          }}\r\n        >\r\n          {page_success_prompt?.message}\r\n        </div>\r\n      </DialogContent>\r\n      <div className=\"dialog-actions\">\r\n        <small>What do you want to do next?</small>\r\n\r\n        {page_success_prompt?.action_buttons?.map((b, i) => (\r\n          <Button\r\n            key={i}\r\n            color={b.color}\r\n            disableElevation={false}\r\n            onClick={() => {\r\n              if (typeof b.handleClick === \"function\") {\r\n                dispatch(\r\n                  setPageSuccessPromptAction({\r\n                    show: false,\r\n                  })\r\n                );\r\n                b.handleClick();\r\n              }\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontWeight: 700,\r\n                fontSize: `.9em`,\r\n              }}\r\n            >\r\n              {b.text}\r\n            </span>\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </StyledSuccessDialog>\r\n  );\r\n});\r\n\r\nexport default PageSuccessPrompt;\r\n\r\nconst StyledSuccessDialog = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-top: -15px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n  .dialog-actions {\r\n    margin: 1em;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    width: 100%;\r\n    justify-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","import {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport {\r\n  InvalidDateToDefault,\r\n  parseTimeOrDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport {\r\n  setStudentEnrolledClassTable,\r\n  setStudentUnenrolledClassTable,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { ClassStudentModel } from \"../../../Services/Models/ClassStudentModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport {\r\n  StyledClassContainer,\r\n  StyledEnrolledClass,\r\n} from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface DataTableClassAdminInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const DataTableClassStudentView: FC<DataTableClassAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.fetch_student_unenrolled_class_table\r\n    );\r\n    const data_table: Array<ClassModel & StatusMasterModel> = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.student_unenrolled_class_table?.table\r\n    );\r\n\r\n    const enrolled_courses_table: Array<ClassModel> = useSelector(\r\n      (store: RootStore) => store.ClassReducer.student_enrolled_class_table\r\n    );\r\n    const fetch_enrolled_courses_table = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.fetch_student_enrolled_class_table\r\n    );\r\n\r\n    const [refetchUnenrolledClasses, setRefetchUnenrolledClasses] = useState(0);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setStudentUnenrolledClassTable(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      refetchUnenrolledClasses,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        dispatch(setStudentEnrolledClassTable());\r\n      };\r\n\r\n      mounted && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/student/class\",\r\n              title: \"Classes\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"xl\">\r\n        <Grid item container spacing={3}>\r\n          <Grid item xs={12} sm={10} md={9}>\r\n            <Paper style={{ padding: `1em`, minHeight: `85vh` }}>\r\n              <LinearLoadingProgress show={table_loading} />\r\n              <div className=\"paper-title\">\r\n                Available Courses (Not Enrolled)\r\n              </div>\r\n              <Grid item container spacing={2}>\r\n                <Grid item xs={12} container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    <DataTableSearch\r\n                      onSubmit={(e) => {\r\n                        e.preventDefault();\r\n                        handleSetTableSearch({\r\n                          ...tableSearch,\r\n                          search: searchField,\r\n                        });\r\n                      }}\r\n                      handleSetSearchField={handleSetSearchField}\r\n                      searchField={searchField}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid\r\n                xs={12}\r\n                item\r\n                container\r\n                spacing={1}\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n              >\r\n                <Grid item>\r\n                  <Grid item>\r\n                    <TablePagination\r\n                      rowsPerPageOptions={[50, 100, 250]}\r\n                      component=\"div\"\r\n                      count={tableCount}\r\n                      rowsPerPage={tableLimit}\r\n                      page={tablePage}\r\n                      onChangePage={handleChangePage}\r\n                      onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid item>\r\n                    <DataTableSort\r\n                      handleChagenSelectedSortIndex={\r\n                        handleChagenSelectedSortIndex\r\n                      }\r\n                      initialTableSort={initialTableSort}\r\n                      selectedSortIndex={selectedSortIndex}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid xs={12} container item spacing={3}>\r\n                  <LinearLoadingProgress show={table_loading} />\r\n                  {data_table?.length < 1 && (\r\n                    <span className=\"empty-rows\">No records found!</span>\r\n                  )}\r\n\r\n                  <Grid item xs={12}>\r\n                    <div\r\n                      className=\"class-container\"\r\n                      style={{\r\n                        display: `grid`,\r\n                        gridGap: `2em`,\r\n                        alignItems: `start`,\r\n                        alignContent: `start`,\r\n                        gridTemplateColumns: `repeat(auto-fill, minmax(300px, 1fr))`,\r\n                      }}\r\n                    >\r\n                      {data_table?.map((v, i) => (\r\n                        <StyledClassContainer key={i}>\r\n                          <div className=\"image\">\r\n                            {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                            <img\r\n                              src={`data:image/jpg;base64,${v.course_pic}`}\r\n                              alt={`no image found`}\r\n                            />\r\n                          </div>\r\n\r\n                          <div className=\"info-container\">\r\n                            <div\r\n                              // to={``}\r\n                              className=\"title\"\r\n                            >\r\n                              <div className=\"main\">{v.class_desc}</div>\r\n                              <div className=\"sub\">{v.course_desc}</div>\r\n                            </div>\r\n\r\n                            <div\r\n                              className=\"item tutor\"\r\n                              style={{ textTransform: `capitalize` }}\r\n                            >\r\n                              <CustomAvatar\r\n                                src={v.tutor_pic}\r\n                                errorMessage={v?.tutor_name?.charAt(0)}\r\n                              />\r\n                              {v.tutor_name}\r\n                            </div>\r\n\r\n                            <div className=\"details\">\r\n                              <div className=\"time\">\r\n                                The class will start on{\" \"}\r\n                                <span style={{ fontWeight: 500 }}>\r\n                                  {InvalidDateToDefault(v.start_date, \"-\")}.\r\n                                </span>\r\n                              </div>\r\n                              <div className=\"time\">\r\n                                The time interval is{\" \"}\r\n                                <span style={{ fontWeight: 500 }}>\r\n                                  {\" \"}\r\n                                  {moment(v.start_time, \"HH:mm:ss\").format(\r\n                                    \"hh:mma\"\r\n                                  )}\r\n                                  {\" - \"}\r\n                                  {moment(v.end_time, \"HH:mm:ss\").format(\r\n                                    \"hh:mma\"\r\n                                  )}\r\n                                  .\r\n                                </span>\r\n                              </div>\r\n                            </div>\r\n\r\n                            <div className=\"footer-ctnr\">\r\n                              <Button\r\n                                // color=\"primary\"\r\n                                onClick={() =>\r\n                                  history.push(`/student/class/${v.class_pk}`)\r\n                                }\r\n                              >\r\n                                View\r\n                              </Button>\r\n                              <Button\r\n                                color=\"primary\"\r\n                                onClick={() => {\r\n                                  const payload: ClassStudentModel = {\r\n                                    class_pk: v.class_pk,\r\n                                  };\r\n\r\n                                  dispatch(\r\n                                    setGeneralPrompt({\r\n                                      open: true,\r\n                                      continue_callback: () =>\r\n                                        dispatch(\r\n                                          ClassStudentActions.joinStudentToClassAction(\r\n                                            payload,\r\n                                            (msg: string) => {\r\n                                              setRefetchUnenrolledClasses(\r\n                                                (prev) => prev + 1\r\n                                              );\r\n                                              dispatch(\r\n                                                setStudentEnrolledClassTable()\r\n                                              );\r\n                                            }\r\n                                          )\r\n                                        ),\r\n                                    })\r\n                                  );\r\n                                }}\r\n                              >\r\n                                Enroll\r\n                              </Button>\r\n                            </div>\r\n                          </div>\r\n                        </StyledClassContainer>\r\n                      ))}\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={2} md={3}>\r\n            <Paper style={{ padding: `1em`, minHeight: `85vh` }}>\r\n              <LinearLoadingProgress show={fetch_enrolled_courses_table} />\r\n              <StyledEnrolledClass>\r\n                <div className=\"paper-title\">Enrolled Classes</div>\r\n                <div className=\"enrolled-classes\">\r\n                  {enrolled_courses_table?.map((c, i) => (\r\n                    <div className=\"class-item\">\r\n                      <div className=\"tutor\">\r\n                        <CustomAvatar\r\n                          className=\"img\"\r\n                          src={c.tutor_pic}\r\n                          errorMessage={c.tutor_name?.charAt(0)}\r\n                        />\r\n                        <div className=\"name\">{c.tutor_name}</div>\r\n                      </div>\r\n                      <NavLink\r\n                        to={`/student/class/${c.class_pk}/session`}\r\n                        className=\"class-title\"\r\n                      >\r\n                        {c.is_ongoing === 1 && <span className=\"circle\"></span>}\r\n                        <div className=\"label\">{c.class_desc}</div>\r\n                      </NavLink>\r\n                      <div className=\"sub-title\">{c.course_desc}</div>\r\n\r\n                      <div className=\"time\">\r\n                        {parseTimeOrDefault(c.start_time, \"\")} -{\" \"}\r\n                        {parseTimeOrDefault(c.end_time, \"\")}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </StyledEnrolledClass>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableClassStudentView;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledHomeStudent = styled(Container)`\r\n  display: grid;\r\n  grid-template-areas: \"recommend recommend\" \"timeline class\";\r\n  grid-auto-columns: 1fr 300px;\r\n  grid-gap: 2em;\r\n  .content-title {\r\n    font-size: 0.9em;\r\n    font-weight: 700;\r\n    opacity: 0.8;\r\n    padding: 0.5em;\r\n    border-bottom: 0.1em solid rgba(0, 0, 0, 0.1);\r\n  }\r\n  .recommended-tutor-ctnr {\r\n    grid-area: recommend;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.7em;\r\n\r\n    .recommendations {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-content: start;\r\n      justify-items: start;\r\n      align-items: center;\r\n      align-content: center;\r\n      grid-gap: 2em;\r\n      overflow-x: auto;\r\n      margin: 0.5em;\r\n      padding: 0.3em;\r\n\r\n      .recommend-item {\r\n        display: grid;\r\n        grid-gap: 0.3em;\r\n        .img {\r\n          height: 9em;\r\n          width: 8em;\r\n        }\r\n        .name {\r\n          font-weight: 600;\r\n          font-size: 0.9em;\r\n        }\r\n        .rating {\r\n          font-weight: 500;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .timeline-ctnr {\r\n    grid-area: timeline;\r\n    padding: 0.5em;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.7em;\r\n\r\n    .timeline {\r\n      display: grid;\r\n      grid-gap: 1em;\r\n\r\n      .timeline-item {\r\n        display: grid;\r\n        grid-gap: 0.5em;\r\n        justify-content: start;\r\n        justify-items: start;\r\n        align-content: start;\r\n        align-items: start;\r\n        grid-auto-flow: column;\r\n        border-bottom: 0.1em solid rgba(0, 0, 0, 0.15);\r\n        padding: 0.7em 0;\r\n        .img {\r\n          grid-area: img;\r\n        }\r\n        .description {\r\n          display: grid;\r\n          grid-gap: 0.3em;\r\n          .name {\r\n            font-size: 0.95em;\r\n            font-weight: 900;\r\n          }\r\n          .body {\r\n            font-size: 0.87em;\r\n          }\r\n\r\n          .datetime {\r\n            font-size: 0.7em;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .class-ctnr {\r\n    grid-area: class;\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border-radius: 0.7em;\r\n    padding: 0.5em;\r\n\r\n    .classes {\r\n      display: grid;\r\n      grid-gap: 1.5em;\r\n\r\n      .class-item {\r\n        display: grid;\r\n        grid-gap: 0.5em;\r\n        align-content: start;\r\n        align-items: start;\r\n        .date {\r\n          font-size: 0.95em;\r\n          text-transform: uppercase;\r\n          padding: 0.2em 0;\r\n          border-bottom: 0.15em solid rgba(0, 0, 0, 0.1);\r\n        }\r\n\r\n        .title {\r\n          font-weight: 900;\r\n        }\r\n\r\n        .time {\r\n          font-size: 0.87em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Avatar, Paper } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { setSelectedClassAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { StyledHomeStudent } from \"./styles\";\r\n\r\ninterface HomeStudentViewInterface {}\r\n\r\nexport const HomeStudentView: FC<HomeStudentViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetching_data = () => {\r\n      dispatch(setSelectedClassAction(params.id));\r\n    };\r\n\r\n    mounted && fetching_data();\r\n    return () => (mounted = false);\r\n  }, [dispatch, params.id]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/student/home\",\r\n            title: \"Home\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <StyledHomeStudent>\r\n      <Paper className=\"recommended-tutor-ctnr\">\r\n        <div className=\"content-title\">Tutors you may like</div>\r\n        <div className=\"recommendations\">\r\n          <div className=\"recommend-item\">\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              className=\"img\"\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n            />\r\n            <NavLink to=\"/\" className=\"name\">\r\n              John Doe\r\n            </NavLink>\r\n            <div className=\"rating\">\r\n              3.4 <small>stars</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"recommend-item\">\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              className=\"img\"\r\n              src={`https://excellenthometutorghana.files.wordpress.com/2020/01/92485-math-tutor-12.jpg?w=1000`}\r\n            />\r\n            <NavLink to=\"/\" className=\"name\">\r\n              John Doe\r\n            </NavLink>\r\n            <div className=\"rating\">\r\n              3.4 <small>stars</small>\r\n            </div>\r\n          </div>\r\n          <div className=\"recommend-item\">\r\n            <Avatar\r\n              variant=\"rounded\"\r\n              className=\"img\"\r\n              src={`https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ9ciYleVOn1U316xJEVCnsVpW9D_rOEu8tfw&usqp=CAU`}\r\n            />\r\n            <NavLink to=\"/\" className=\"name\">\r\n              John Doe\r\n            </NavLink>\r\n            <div className=\"rating\">\r\n              3.4 <small>stars</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n\r\n      <Paper className=\"timeline-ctnr\">\r\n        <div className=\"content-title\">Timeline</div>\r\n        <div className=\"timeline\">\r\n          <div className=\"timeline-item\">\r\n            <Avatar\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n              className=\"pic\"\r\n            />\r\n            <div className=\"description\">\r\n              <div className=\"name\">Professor Idpalina</div>\r\n              <div className=\"body\">\r\n                Here are a few things you can do to get started\r\n              </div>\r\n              <div className=\"datetime\">Thu Jul 11, 2019 at 5:28 pm</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"timeline-item\">\r\n            <Avatar\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n              className=\"pic\"\r\n            />\r\n            <div className=\"description\">\r\n              <div className=\"name\">Professor Idpalina</div>\r\n              <div className=\"body\">\r\n                Here are a few things you can do to get started\r\n              </div>\r\n              <div className=\"datetime\">Thu Jul 11, 2019 at 5:28 pm</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"timeline-item\">\r\n            <Avatar\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n              className=\"pic\"\r\n            />\r\n            <div className=\"description\">\r\n              <div className=\"name\">Professor Idpalina</div>\r\n              <div className=\"body\">\r\n                Here are a few things you can do to get started\r\n              </div>\r\n              <div className=\"datetime\">Thu Jul 11, 2019 at 5:28 pm</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"timeline-item\">\r\n            <Avatar\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n              className=\"pic\"\r\n            />\r\n            <div className=\"description\">\r\n              <div className=\"name\">Professor Idpalina</div>\r\n              <div className=\"body\">\r\n                Here are a few things you can do to get started\r\n              </div>\r\n              <div className=\"datetime\">Thu Jul 11, 2019 at 5:28 pm</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"timeline-item\">\r\n            <Avatar\r\n              src={`https://cdn.tutors.com/assets/images/bg/desktop/math-tutor-cost.jpg`}\r\n              className=\"pic\"\r\n            />\r\n            <div className=\"description\">\r\n              <div className=\"name\">Professor Idpalina</div>\r\n              <div className=\"body\">\r\n                Here are a few things you can do to get started\r\n              </div>\r\n              <div className=\"datetime\">Thu Jul 11, 2019 at 5:28 pm</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n\r\n      <Paper className=\"class-ctnr\">\r\n        <div className=\"content-title\">On-going Sessions</div>\r\n\r\n        <div className=\"classes\">\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n\r\n          <div className=\"class-item\">\r\n            <div className=\"date\">FRIDAY, FEBRUARY 22, 2019</div>\r\n            <NavLink to=\"/\" className=\"title\">\r\n              Math 501\r\n            </NavLink>\r\n            <div className=\"time\">7:59 am</div>\r\n          </div>\r\n        </div>\r\n      </Paper>\r\n    </StyledHomeStudent>\r\n  );\r\n});\r\n\r\nexport default HomeStudentView;\r\n","import { Avatar, Button, Chip, Container } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { getDummyTutorsApi } from \"../../../Services/Api/TutorApi\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { TutorRatingsModel } from \"../../../Services/Models/TutorRatingsModel\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { insertDummyTutorRatingsAction } from \"../../../Services/Actions/TutorActions\";\r\nimport { SetCurrentUserAction } from \"../../../Services/Actions/UserActions\";\r\ninterface TutorRatingStudentViewInterface {}\r\n\r\ninterface RateTutorInterface {\r\n  picture: any;\r\n  tutor_pk: number;\r\n  name: string;\r\n  bio: string;\r\n  rating: number;\r\n}\r\n\r\nexport const TutorRatingStudentView: FC<TutorRatingStudentViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n    const [\r\n      rateTutors,\r\n      setRateTutors,\r\n    ] = useState<Array<TutorRatingsModel> | null>();\r\n\r\n    const [steps, setSteps] = useState(0);\r\n\r\n    const handleNextStep = () => {\r\n      setSteps((step) => {\r\n        if (step !== 4) {\r\n          return step + 1;\r\n        }\r\n\r\n        return step;\r\n      });\r\n    };\r\n    const handlePrevStep = () => {\r\n      setSteps((step) => {\r\n        if (step !== 0) {\r\n          return step - 1;\r\n        }\r\n\r\n        return step;\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_dummy_tutors = async () => {\r\n        const response = await getDummyTutorsApi();\r\n\r\n        if (response.success) {\r\n          setRateTutors(response.data);\r\n        }\r\n      };\r\n\r\n      mounted && fetch_dummy_tutors();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Please rate these tutors to let us find the best one for you.\"\r\n        open={user?.rated_tutor === \"n\"}\r\n        minWidth={400}\r\n        body={\r\n          <>\r\n            {rateTutors &&\r\n              rateTutors.map((t, i) =>\r\n                i === steps ? (\r\n                  <StyledTutorRatingStudentView key={i}>\r\n                    <Avatar\r\n                      className=\"pic\"\r\n                      src={`data:image/jpg;base64,${t.picture}`}\r\n                      variant=\"square\"\r\n                    />\r\n\r\n                    <div className=\"name\">{t.name}</div>\r\n\r\n                    <div className=\"bio\">\r\n                      <small>{t.bio}</small>\r\n                    </div>\r\n\r\n                    <div className=\"stars\">\r\n                      <Rating\r\n                        value={t.rating}\r\n                        name={t.name}\r\n                        onChange={(event, newValue) => {\r\n                          setRateTutors((prevTutor) => {\r\n                            const temp = prevTutor;\r\n                            const foundTutor = temp.findIndex(\r\n                              (item, k) => k === i\r\n                            );\r\n\r\n                            temp[foundTutor].rating = newValue;\r\n                            return [...temp];\r\n                          });\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </StyledTutorRatingStudentView>\r\n                ) : null\r\n              )}\r\n          </>\r\n        }\r\n        actions={\r\n          rateTutors && (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  handlePrevStep();\r\n                }}\r\n                disabled={steps === 0}\r\n              >\r\n                Previous\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={rateTutors[steps]?.rating === 0}\r\n                onClick={() => {\r\n                  if (steps === 4) {\r\n                    let payload = [];\r\n\r\n                    rateTutors.forEach((t) => {\r\n                      payload.push({\r\n                        ...t,\r\n                        picture: \"\",\r\n                      });\r\n                    });\r\n\r\n                    dispatch(\r\n                      setGeneralPrompt({\r\n                        open: true,\r\n                        continue_callback: () =>\r\n                          dispatch(\r\n                            insertDummyTutorRatingsAction(\r\n                              payload,\r\n                              (msg: string) => {\r\n                                dispatch(SetCurrentUserAction());\r\n                              }\r\n                            )\r\n                          ),\r\n                      })\r\n                    );\r\n                  } else {\r\n                    handleNextStep();\r\n                  }\r\n                }}\r\n              >\r\n                {steps === 4 ? \"Submit\" : \"Next\"}\r\n              </Button>\r\n            </>\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default TutorRatingStudentView;\r\n\r\nconst StyledTutorRatingStudentView = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: 1em;\r\n  .pic {\r\n    height: 220px;\r\n    width: 350px;\r\n  }\r\n  .name {\r\n    font-weight: 700;\r\n  }\r\n  .specialties {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-auto-flow: column;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DataTableClassStudentView from \"../Views/StudentViews/ClassStudentView/DataTableClassStudentView\";\r\nimport HomeStudentView from \"../Views/StudentViews/HomeStudentView/HomeStudentView\";\r\nimport ManageClassStudentView from \"../Views/StudentViews/ManageClassStudentView/ManageClassStudentView\";\r\nimport TutorRatingView from \"../Views/StudentViews/TutorRatingStudentView/TutorRatingStudentView\";\r\nimport ManageClassSelectedSessionTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassSelectedSessionTutorView\";\r\nimport ManageClassTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassTutorView\";\r\n\r\nconst StudentRoutes = () => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/student/home\" exact>\r\n          <HomeStudentView />\r\n        </Route>\r\n        <Route path=\"/student/class\" exact>\r\n          <DataTableClassStudentView />\r\n        </Route>\r\n\r\n        <Route\r\n          path={`/student/class/:class_pk/session/:session_pk`}\r\n          strict\r\n          exact\r\n        >\r\n          <ManageClassSelectedSessionTutorView />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/tutor/class/:class_pk/session/:session_pk\" strict exact>\r\n        <ManageClassSelectedSessionTutorView />\r\n      </Route> */}\r\n        <Route path=\"/student/class/:class_pk\" strict>\r\n          {/* <ManageClassStudentView /> */}\r\n          <ManageClassTutorView />\r\n        </Route>\r\n      </Switch>\r\n      <TutorRatingView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentRoutes;\r\n","import React, { memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginPortal from \"../Views/LoginPortal/LoginPortal\";\r\nimport { SetCurrentUserAction } from \"../Services/Actions/UserActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport PageLoader from \"../Component/PageLoader\";\r\nimport PagePrompt from \"../Component/PagePrompt\";\r\nimport PageSnackbar from \"../Component/PageSnackbar\";\r\nimport SysAdminRoutes from \"./AdminRoutes\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport RegisterSTudentView from \"../Views/RegisterStudentViews/RegisterStudentView\";\r\nimport TutorRoutes from \"./TutorRoutes\";\r\nimport PageSuccessPrompt from \"../Component/PageSuccessPrompt\";\r\nimport StudentRoutes from \"./StudentRoutes\";\r\n\r\nconst Routes = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getUserInfo = async () => {\r\n      dispatch(SetCurrentUserAction());\r\n    };\r\n\r\n    mounted && getUserInfo();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <PageLoader />\r\n        <PagePrompt />\r\n        <PageSnackbar />\r\n        <PageSuccessPrompt />\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact component={LoginPortal} /> */}\r\n          <Route path=\"/login\" exact component={LoginPortal} />\r\n          <Route\r\n            path=\"/student-registration\"\r\n            exact\r\n            component={RegisterSTudentView}\r\n          />\r\n          {/* <Route path=\"/notfound\" exact component={PageNotFound} /> */}\r\n          <Layout>\r\n            {user?.user_type === \"admin\" && <SysAdminRoutes />}\r\n            {user?.user_type === \"tutor\" && <TutorRoutes />}\r\n            {user?.user_type === \"student\" && <StudentRoutes />}\r\n          </Layout>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n});\r\nexport default Routes;\r\n","export type UserActionTypes =\r\n  | {\r\n      type: \"SET_CURRENT_USER\";\r\n      user: string;\r\n    }\r\n  | {\r\n      type: \"SET_LOADING_USER\";\r\n      isLoading: boolean;\r\n    };\r\n\r\nexport interface IUserReducer {\r\n  user: any;\r\n  userLoading: boolean;\r\n}\r\n\r\nconst defaultState: IUserReducer = {\r\n  user: null,\r\n  userLoading: false,\r\n};\r\n\r\nconst UserReducer = (\r\n  state: IUserReducer = defaultState,\r\n  action: UserActionTypes\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_USER\": {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    }\r\n\r\n    case \"SET_LOADING_USER\": {\r\n      return {\r\n        ...state,\r\n        userLoading: action.isLoading,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import { PageReducerModel, PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst defaultState: PageReducerModel = {\r\n  page_prompt: {\r\n    open: false,\r\n    custom_title: null,\r\n    custom_subtitle: null,\r\n    continue_callback: null,\r\n    close_callback: null,\r\n  },\r\n  page_loading: {\r\n    show: false,\r\n  },\r\n  page_snackbar: {\r\n    message: null,\r\n  },\r\n  page_links: [],\r\n};\r\n\r\nconst PageReducer = (\r\n  state: PageReducerModel = defaultState,\r\n  action: PageReducerTypes\r\n): PageReducerModel => {\r\n  switch (action.type) {\r\n    case \"SET_PAGE_PROMPT\":\r\n      return { ...state, page_prompt: action.page_prompt };\r\n    case \"SET_PAGE_LOADING\":\r\n      return { ...state, page_loading: action.page_loading };\r\n    case \"SET_PAGE_SNACKBAR\":\r\n      return { ...state, page_snackbar: action.page_snackbar };\r\n\r\n    case \"SET_PAGE_LINKS\":\r\n      return { ...state, page_links: action.page_links };\r\n\r\n    case \"SET_PAGE_SUCCESS_PROMPT\":\r\n      return { ...state, page_success_prompt: action.page_success_prompt };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PageReducer;\r\n","import { TutorReducerModel, TutorReducerTypes } from \"../Types/TutorTypes\";\r\n\r\nconst defaultState: TutorReducerModel = {\r\n  reload_single_tutor: 0,\r\n  reload_tutor_paging: 0,\r\n  fetching_single_tutor: false,\r\n  fetching_tutor_data_table: false,\r\n};\r\n\r\nconst TutorReducer = (\r\n  state: TutorReducerModel = defaultState,\r\n  action: TutorReducerTypes\r\n): TutorReducerModel => {\r\n  switch (action.type) {\r\n    case \"TUTOR_DATA_TABLE\": {\r\n      return {\r\n        ...state,\r\n        tutor_data_table: action.tutor_data_table,\r\n      };\r\n    }\r\n    case \"FETCHING_TUTOR_DATA_TABLE\": {\r\n      return {\r\n        ...state,\r\n        fetching_tutor_data_table: action.fetching_tutor_data_table,\r\n      };\r\n    }\r\n    case \"RELOAD_TUTOR_PAGING\": {\r\n      return {\r\n        ...state,\r\n        reload_tutor_paging: state.reload_tutor_paging++,\r\n      };\r\n    }\r\n\r\n    case \"SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        single_tutor: state.single_tutor,\r\n      };\r\n    }\r\n    case \"FETCHING_SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        fetching_single_tutor: state.fetching_single_tutor,\r\n      };\r\n    }\r\n    case \"RELOAD_SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        reload_single_tutor: state.reload_single_tutor++,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TutorReducer;\r\n","import { CourseReducerModel, CourseReducerTypes } from \"../Types/CourseTypes\";\r\n\r\nconst defaultState: CourseReducerModel = {\r\n  fetching_course_data_table: false,\r\n  fetching_selected_course: false,\r\n};\r\n\r\nconst CourseReducer = (\r\n  state: CourseReducerModel = defaultState,\r\n  action: CourseReducerTypes\r\n): CourseReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_course_data_table\": {\r\n      return {\r\n        ...state,\r\n        course_data_table: action.course_data_table,\r\n      };\r\n    }\r\n    case \"fetching_course_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_course_data_table: action.fetching_course_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_course\": {\r\n      return {\r\n        ...state,\r\n        selected_course: action.selected_course,\r\n      };\r\n    }\r\n    case \"fetching_selected_course\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_course: action.fetching_selected_course,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CourseReducer;\r\n","import { RoomReducerModel, RoomReducerTypes } from \"../Types/RoomTypes\";\r\n\r\nconst defaultState: RoomReducerModel = {\r\n  fetching_selected_room: false,\r\n  fetching_room_data_table: false,\r\n};\r\n\r\nconst RoomReducer = (\r\n  state: RoomReducerModel = defaultState,\r\n  action: RoomReducerTypes\r\n): RoomReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_room_data_table\": {\r\n      return {\r\n        ...state,\r\n        room_data_table: action.room_data_table,\r\n      };\r\n    }\r\n    case \"fetching_room_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_room_data_table: action.fetching_room_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_room\": {\r\n      return {\r\n        ...state,\r\n        selected_room: action.selected_room,\r\n      };\r\n    }\r\n    case \"fetching_selected_room\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_room: action.fetching_selected_room,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RoomReducer;\r\n","import { AdminReducerModel, AdminReducerTypes } from \"../Types/AdminTypes\";\r\n\r\nconst defaultState: AdminReducerModel = {\r\n  fetching_admin_data_table: false,\r\n  fetching_selected_admin: false,\r\n};\r\n\r\nconst AdminReducer = (\r\n  state: AdminReducerModel = defaultState,\r\n  action: AdminReducerTypes\r\n): AdminReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        admin_data_table: action.admin_data_table,\r\n      };\r\n    }\r\n    case \"fetching_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_admin_data_table: action.fetching_admin_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        selected_admin: action.selected_admin,\r\n      };\r\n    }\r\n    case \"fetching_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_admin: action.fetching_selected_admin,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { ClassReducerModel, ClassReducerTypes } from \"../Types/ClassTypes\";\r\n\r\nconst defaultState: ClassReducerModel = {\r\n  fetching_class_data_table: false,\r\n  fetching_selected_class: false,\r\n  fetch_tutor_class_table: false,\r\n};\r\n\r\nconst ClassReducer = (\r\n  state: ClassReducerModel = defaultState,\r\n  action: ClassReducerTypes\r\n): ClassReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_class_data_table\": {\r\n      return {\r\n        ...state,\r\n        class_data_table: action.class_data_table,\r\n      };\r\n    }\r\n    case \"fetching_class_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_class_data_table: action.fetching_class_data_table,\r\n      };\r\n    }\r\n\r\n    case \"set_selected_class\": {\r\n      return {\r\n        ...state,\r\n        selected_class: action.selected_class,\r\n      };\r\n    }\r\n    case \"fetching_selected_class\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_class: action.fetching_selected_class,\r\n      };\r\n    }\r\n\r\n    case \"set_tutor_class_table\": {\r\n      return {\r\n        ...state,\r\n        tutor_class_table: action.tutor_class_table,\r\n      };\r\n    }\r\n\r\n    case \"set_fetch_tutor_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_tutor_class_table: action.fetch_tutor_class_table,\r\n      };\r\n    }\r\n\r\n    case \"student_unenrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_unenrolled_class_table: action.student_unenrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"fetch_student_unenrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_unenrolled_class_table:\r\n          action.fetch_student_unenrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"student_enrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_enrolled_class_table: action.student_enrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"fetch_student_enrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_enrolled_class_table:\r\n          action.fetch_student_enrolled_class_table,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassReducer;\r\n","import {\r\n  StudentReducerModel,\r\n  StudentReducerTypes,\r\n} from \"../Types/StudentTypes\";\r\n\r\nconst defaultState: StudentReducerModel = {\r\n  fetching_selected_student: false,\r\n  fetching_student_data_table: false,\r\n};\r\n\r\nconst StudentReducer = (\r\n  state: StudentReducerModel = defaultState,\r\n  action: StudentReducerTypes\r\n): StudentReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_student_data_table\": {\r\n      return {\r\n        ...state,\r\n        student_data_table: action.student_data_table,\r\n      };\r\n    }\r\n    case \"fetching_student_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_student_data_table: action.fetching_student_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_student\": {\r\n      return {\r\n        ...state,\r\n        selected_student: action.selected_student,\r\n      };\r\n    }\r\n    case \"fetching_selected_student\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_student: action.fetching_selected_student,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StudentReducer;\r\n","import {\r\n  ClassSessionReducerModel,\r\n  ClassSessionReducerTypes,\r\n} from \"../Types/ClassSessionTypes\";\r\n\r\nconst defaultState: ClassSessionReducerModel = {\r\n  fetch_stats_class_session: false,\r\n  fetch_tutor_class_sessions: false,\r\n  fetch_class_sessions: false,\r\n};\r\n\r\nconst ClassSessionReducer = (\r\n  state: ClassSessionReducerModel = defaultState,\r\n  action: ClassSessionReducerTypes\r\n): ClassSessionReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_fetch_tutor_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        fetch_tutor_class_sessions: action.fetch_tutor_class_sessions,\r\n      };\r\n    }\r\n    case \"set_tutor_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        tutor_class_sessions: action.tutor_class_sessions,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_fetch_stats_class_session\": {\r\n      return {\r\n        ...state,\r\n        fetch_stats_class_session: action.fetch_stats_class_session,\r\n      };\r\n    }\r\n    case \"set_stats_class_session\": {\r\n      return {\r\n        ...state,\r\n        stats_class_session: action.stats_class_session,\r\n      };\r\n    }\r\n\r\n    case \"set_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        class_sessions: action.class_sessions,\r\n      };\r\n    }\r\n    case \"set_fetch_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_sessions: action.fetch_class_sessions,\r\n      };\r\n    }\r\n\r\n    case \"single_class_session\": {\r\n      return {\r\n        ...state,\r\n        single_class_session: action.single_class_session,\r\n      };\r\n    }\r\n    case \"fetch_single_class_session\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_session: action.fetch_single_class_session,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassSessionReducer;\r\n","import {\r\n  ClassStudentReducerModel,\r\n  ClassStudentReducerTypes,\r\n} from \"../Types/ClassStudentTypes\";\r\n\r\nconst defaultState: ClassStudentReducerModel = {\r\n  fetch_tbl_class_students: false,\r\n};\r\n\r\nconst ClassStudentReducer = (\r\n  state: ClassStudentReducerModel = defaultState,\r\n  action: ClassStudentReducerTypes\r\n): ClassStudentReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_tbl_class_students\": {\r\n      return {\r\n        ...state,\r\n        tbl_class_students: action.tbl_class_students,\r\n      };\r\n    }\r\n    case \"set_fetch_tbl_class_students\": {\r\n      return {\r\n        ...state,\r\n        fetch_tbl_class_students: action.fetch_tbl_class_students,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassStudentReducer;\r\n","import {\r\n  ClassMaterialReducerModel,\r\n  ClassMaterialReducerTypes,\r\n} from \"../Types/ClassMaterialTypes\";\r\n\r\nconst defaultState: ClassMaterialReducerModel = {\r\n  fetch_class_material: false,\r\n};\r\n\r\nconst ClassMaterialReducer = (\r\n  state: ClassMaterialReducerModel = defaultState,\r\n  action: ClassMaterialReducerTypes\r\n): ClassMaterialReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_tbl_class_materials\": {\r\n      return {\r\n        ...state,\r\n        tbl_class_materials: action.tbl_class_materials,\r\n      };\r\n    }\r\n    case \"set_fetch_class_material\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_material: action.fetch_class_material,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassMaterialReducer;\r\n","import {\r\n  ClassSessionTaskReducerModel,\r\n  ClassSessionTaskReducerTypes,\r\n} from \"../Types/ClassSessionTaskTypes\";\r\n\r\nconst defaultState: ClassSessionTaskReducerModel = {};\r\n\r\nconst ClassSessionTaskReducer = (\r\n  state: ClassSessionTaskReducerModel = defaultState,\r\n  action: ClassSessionTaskReducerTypes\r\n): ClassSessionTaskReducerModel => {\r\n  switch (action.type) {\r\n    case \"all_class_task\": {\r\n      return {\r\n        ...state,\r\n        all_class_task: action.all_class_task,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task: action.fetch_all_class_task,\r\n      };\r\n    }\r\n\r\n    case \"single_class_task\": {\r\n      return {\r\n        ...state,\r\n        single_class_task: action.single_class_task,\r\n      };\r\n    }\r\n    case \"fetch_single_class_task\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_task: action.fetch_single_class_task,\r\n      };\r\n    }\r\n\r\n    case \"all_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        all_class_task_ques: action.all_class_task_ques,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task_ques: action.fetch_all_class_task_ques,\r\n      };\r\n    }\r\n\r\n    case \"single_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        single_class_task_ques: action.single_class_task_ques,\r\n      };\r\n    }\r\n    case \"fetch_single_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_task_ques: action.fetch_single_class_task_ques,\r\n      };\r\n    }\r\n\r\n    case \"all_class_task_sub\": {\r\n      return {\r\n        ...state,\r\n        all_class_task_sub: action.all_class_task_sub,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task_sub\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task_sub: action.fetch_all_class_task_sub,\r\n      };\r\n    }\r\n\r\n    case \"all_student_submit\": {\r\n      return {\r\n        ...state,\r\n        all_student_submit: action.all_student_submit,\r\n      };\r\n    }\r\n    case \"fetch_all_student_submit\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_student_submit: action.fetch_all_student_submit,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassSessionTaskReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport UserReducer from \"./UserReducer\";\r\nimport PageReducer from \"./PageReducer\";\r\nimport TutorReducer from \"./TutorReducer\";\r\nimport CourseReducer from \"./CourseReducer\";\r\nimport RoomReducer from \"./RoomReducer\";\r\nimport AdminReducer from \"./AdminReducer\";\r\nimport ClassReducer from \"./ClassReducer\";\r\nimport StudentReducer from \"./StudentReducer\";\r\nimport ClassSessionReducer from \"./ClassSessionReducer\";\r\nimport ClassStudentReducer from \"./ClassStudentReducer\";\r\nimport ClassMaterialReducer from \"./ClassMaterialReducer\";\r\nimport ClassSessionTaskReducer from \"./ClassSessionTaskReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  UserReducer,\r\n  PageReducer,\r\n  TutorReducer,\r\n  CourseReducer,\r\n  RoomReducer,\r\n  AdminReducer,\r\n  ClassReducer,\r\n  StudentReducer,\r\n  ClassSessionReducer,\r\n  ClassStudentReducer,\r\n  ClassMaterialReducer,\r\n  ClassSessionTaskReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst Store = createStore(RootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\n\r\nexport default Store;\r\n","import { Color } from \"@material-ui/core\";\r\nimport {\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\n\r\ninterface ThemeProp {\r\n  appbar: IAppBar;\r\n}\r\n\r\ninterface IAppBar {\r\n  bgColor: string;\r\n  color: string;\r\n  height: number;\r\n}\r\n\r\ninterface IBodyStyles {\r\n  backgroundColor: string;\r\n}\r\n\r\nexport interface StyledComponentTheme {\r\n  theme: Theme;\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface ThemeOptions {\r\n    header?: IHeader;\r\n    sidebar?: ISidebar;\r\n    body?: IBodyStyles;\r\n  }\r\n\r\n  interface IHeader {\r\n    height: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n    fontFamily: string;\r\n  }\r\n\r\n  interface ISidebar {\r\n    maxWidth: number;\r\n    minWidth: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n  }\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n  interface Palette {\r\n    blue: Color;\r\n    bg: Color;\r\n  }\r\n\r\n  interface PaletteOptions {\r\n    blue?: PaletteOptions[\"primary\"];\r\n  }\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: `#1e2a78`,\r\n    },\r\n    secondary: {\r\n      // main: `#f3f169`,\r\n      main: `#ff1f5a`,\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      // textTransform: \"unset\",\r\n      fontWeight: 500,\r\n      fontSize: `.8em`,\r\n    },\r\n    fontFamily: [\r\n      \"lato\",\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n  header: {\r\n    backgroundColor: \"#fff\",\r\n    height: 65,\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n  sidebar: {\r\n    maxWidth: 300,\r\n    minWidth: 65,\r\n    backgroundColor: \"#black\",\r\n    color: \"black\",\r\n  },\r\n  body: {\r\n    backgroundColor: \" #edfcff\",\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import { IconButton } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Routes from \"./Routes/Routes\";\nimport Store from \"./Services/Store\";\nimport \"./Styles/App.css\";\nimport \"./Styles/PageCustomize.css\";\nimport theme from \"./Theme/MuiTheme\";\n\nconst App: React.FC = () => {\n  const notistackRef = React.createRef<SnackbarProvider>();\n  const onClickDismiss = (key: React.ReactText) => () => {\n    if (notistackRef.current) {\n      notistackRef.current.closeSnackbar(key);\n    }\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          maxSnack={5}\n          dense\n          ref={notistackRef}\n          hideIconVariant\n          action={(event: React.ReactText) => (\n            <IconButton\n              style={{ backgroundColor: \"rgba(255,255,255,.8)\" }}\n              size=\"small\"\n              onClick={onClickDismiss(event)}\n            >\n              <CloseRoundedIcon color=\"error\" />\n            </IconButton>\n          )}\n        >\n          <Routes />\n        </SnackbarProvider>\n      </Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// import \"typeface-montserrat\";\nimport \"typeface-lato\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}