{"version":3,"sources":["Assets/Images/Logo/app_logo.png","Helpers/helpGetRegexValidators.ts","Hooks/UseFetch.ts","Services/Api/UserApi.ts","Services/Actions/PageActions.ts","Component/Formik/FormikInputField.tsx","Hooks/UseInterval.ts","Views/LoginPortal/styles.ts","Helpers/helperErrorMessage.ts","Views/LoginPortal/LoginPortal.tsx","Helpers/importImagesFromFolder.ts","Views/LoginPortal/FieldPassword.tsx","Views/LoginPortal/FieldUsername.tsx","Views/RegisterStudentViews/RegisterStudentView.tsx","Views/RegisterStudentViews/styles.ts","Component/LoadingButton/styles.ts","Component/LoadingButton/index.tsx","Helpers/AppConfig.ts","Assets/Images/Login sync /.(png|jpg|jpe?g|svg|gif)$","Assets/Images/Login/background.jpg","Assets/Images/Login/background2.jpg","Assets/Images/Login/mohammad-shahhosseini-cPWUODAvXjk-unsplash.jpg","Assets/Images/Login/neonbrand-zFSo6bnZJTw-unsplash.jpg","Assets/Images/Login/step1.jpg","Assets/Images/Login/step2.jpg","Storage/LocalDatabase.ts","Component/PhotoField/PhotoField.tsx","Hooks/UseFileConverter.ts","Component/PageLoader.tsx","Component/PagePrompt.tsx","Component/PageSnackbar.tsx","Component/CustomAvatar.tsx","Views/AdminViews/AdminActivityView/styles.ts","Component/LinearLoadingProgress.tsx","Views/AdminViews/AdminActivityView/index.tsx","Hooks/UseDebounce.ts","Component/Formik/FormikAutocomplete.tsx","Component/Formik/FormikSelect.tsx","Hooks/UseScheduleGenerator.ts","Services/Api/CourseApi.ts","Services/Api/ClassSessionApi.ts","Services/Api/ClassApi.ts","Services/Actions/ClassActions.ts","Component/InfoDialog.tsx","Views/AdminViews/AdminClassView/AddClassAdminView.tsx","Hooks/UseTimeSlot.ts","Component/DataTableSearch.tsx","Component/DataTableSort.tsx","Hooks/useFilter.ts","Styles/GlobalStyles.ts","Views/AdminViews/AdminClassView/DataTableClassAdminView.tsx","Component/IconButtonPopper/IconButtonPopper.tsx","Component/LinkTabs.tsx","Hooks/UseDateParser.ts","Hooks/UseStringFormatter.ts","Services/Api/ClassStudentApi.ts","Services/Actions/ClassStudentActions.ts","Services/Api/TutorApi.ts","Services/Actions/TutorActions.ts","Views/AdminViews/AdminClassView/styles.ts","Component/FileViewer.tsx","Component/FormDialog/FormDialog.tsx","Helpers/convertObjectToFormData.ts","Services/Api/ClassMaterialApi.ts","Services/Actions/ClassMaterialActions.ts","Views/SharedViews/Class/ClassMaterialView.tsx","Views/SharedViews/Class/ClassRatingView.tsx","Services/Actions/ClassSessionActions.ts","Views/SharedViews/Class/ClassSessionView.tsx","Views/SharedViews/Class/ClassStudentView.tsx","Services/Api/ClassSessionTaskApi.ts","Services/Actions/ClassSessionTaskActions.ts","Views/SharedViews/Class/ClassTaskView.tsx","Views/SharedViews/Class/EditClassAdminDialog.tsx","Views/SharedViews/Class/EditClassStatusDialog.tsx","Views/SharedViews/Class/RateClassDialog.tsx","Views/SharedViews/Class/ManageClassView.tsx","Services/Actions/CourseActions.ts","Views/AdminViews/AdminCourseView/AddCourseAdminView.tsx","Views/AdminViews/AdminCourseView/EditCourseDialog.tsx","Views/AdminViews/AdminCourseView/EditCourseImageDialog.tsx","Views/AdminViews/AdminCourseView/DataTableCourseAdminView.tsx","Component/LinearGraph.tsx","Services/Api/AdminApi.ts","Services/Api/RoomApi.ts","Views/AdminViews/AdminDashboardView/DashboardAdminView.tsx","Services/Actions/AdminActions.ts","Views/SharedViews/ChangePasswordDialog.tsx","Views/AdminViews/AdminProfileView/EditAdminImage.tsx","Views/AdminViews/AdminProfileView/EditAdminInfoDialog.tsx","Views/AdminViews/AdminProfileView/styles.ts","Views/AdminViews/AdminProfileView/index.tsx","Views/AdminViews/AdminStudentView/DatatableStudentAdminView.tsx","Views/AdminViews/AdminStudentView/RatedTutorClassView.tsx","Views/AdminViews/AdminStudentView/StudentCalendarView.tsx","Views/AdminViews/AdminStudentView/StudentEnrollClassView.tsx","Views/AdminViews/AdminStudentView/ManageStudentAdminView.tsx","ValidationSchema/AddAdminTutorSchema.ts","Views/AdminViews/AdminTutorView/AddAdminTutorView.tsx","Views/AdminViews/AdminTutorView/DataTableAdminTutorView.tsx","Views/AdminViews/AdminTutorView/EditTutorDialog.tsx","Views/AdminViews/AdminTutorView/EditTutorImageDialog.tsx","Views/AdminViews/AdminTutorView/TutorAssignedClassView.tsx","Views/AdminViews/AdminTutorView/TutorCalendarView.tsx","Views/AdminViews/AdminTutorView/TutorRatingView.tsx","Views/AdminViews/AdminTutorView/ManageAdminTutorView.tsx","Views/AdminViews/CoAdminView/AddCoAdminView.tsx","Views/AdminViews/CoAdminView/DataTableCoAdminView.tsx","Services/Actions/RoomActions.ts","Views/AdminViews/Room/AddRoomAdminView.tsx","Views/AdminViews/Room/EditRoomDialog.tsx","Views/AdminViews/Room/DataTableRoomAdminView.tsx","Routes/AdminRoutes.tsx","Component/CustomTabs.tsx","Component/HookForm/DateFieldHookForm.tsx","Component/HookForm/TextFieldHookForm.tsx","Views/SharedViews/Tasks/EditTaskDialog.tsx","Views/SharedViews/Tasks/EditQues.tsx","Views/SharedViews/Tasks/ManageTaskQuesView.tsx","Views/SharedViews/Tasks/ViewSubmissionDialog.tsx","Views/SharedViews/Tasks/ManageTaskSubmit.tsx","Views/SharedViews/Tasks/ManageTaskView.tsx","Routes/Layout/Body.tsx","Component/PageLinks.tsx","Component/UserProfile/styles.ts","Component/UserProfile/UserProfile.tsx","Routes/Layout/Header.tsx","Component/NavLinks/NavSidebarDropDown.tsx","Routes/Layout/MobileSidebar.tsx","Routes/Layout/Layout.tsx","Views/TutorViews/ClassTutorViews/DataClassTutorView.tsx","Views/TutorViews/DashboardTutorView/styles.ts","Views/TutorViews/DashboardTutorView/EditTutorBiography.tsx","Views/TutorViews/DashboardTutorView/EditTutorPicture.tsx","Views/TutorViews/DashboardTutorView/index.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/EditSessionStatusDialog.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionDtls.tsx","Styles/MaterialStyles/StyledBadge.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionTabs.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/DialogAddTask.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionTasks.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/SessionVideoConf.tsx","Views/TutorViews/ManageClassTutorViews/ManageClassSession/styles.ts","Views/TutorViews/ManageClassTutorViews/ManageClassSession/index.tsx","Routes/TutorRoutes.tsx","Component/PageSuccessPrompt.tsx","Views/SharedViews/Tutor/styles.ts","Views/SharedViews/Tutor/RateTutorDIalog.tsx","Views/StudentViews/DataClassStudentView/EndedClassTableStudentView.tsx","Views/StudentViews/DataClassStudentView/OngoingClassTableStudentView.tsx","Views/StudentViews/DataClassStudentView/AvailableClassTableStudentView.tsx","Views/StudentViews/DataClassStudentView/index.tsx","Views/StudentViews/DashboardStudentView/styles.ts","Views/StudentViews/DashboardStudentView/EditStudentInfo.tsx","Views/StudentViews/DashboardStudentView/EditStudentPicture.tsx","Views/StudentViews/DashboardStudentView/index.tsx","Views/StudentViews/TutorRatingStudentView/TutorRatingStudentView.tsx","Routes/StudentRoutes.tsx","Routes/Routes.tsx","Services/Reducers/UserReducer.ts","Services/Reducers/PageReducer.ts","Services/Reducers/TutorReducer.ts","Services/Reducers/CourseReducer.ts","Services/Reducers/RoomReducer.ts","Services/Reducers/AdminReducer.ts","Services/Reducers/ClassReducer.ts","Services/Reducers/StudentReducer.ts","Services/Reducers/ClassSessionReducer.ts","Services/Reducers/ClassStudentReducer.ts","Services/Reducers/ClassMaterialReducer.ts","Services/Reducers/ClassSessionTaskReducer.ts","Services/Reducers/SharedReducer.ts","Services/Reducers/RootReducer.ts","Services/Store.ts","Theme/MuiTheme.tsx","App.tsx","index.tsx","Services/Actions/StudentActions.ts","Services/Actions/UserActions.ts","Component/SuccessDialog.tsx","Component/Formik/FormikRadio.tsx","Component/Mask/MaskedPhoneNumber.tsx","Services/Api/StudentApi.ts"],"names":["module","exports","validateEmail","validateUsernameLength","validateUsernameAllowedChar","validateUsernameBeginChar","validateUsernameEndChar","validateUsername","label","yup","required","matches","validatePassword","Axios","axios","create","PostFetch","endpoint","data","a","post","API_BASE_URL","headers","Authorization","getAccessToken","serverResponse","success","message","PostFileFetch","form_data","isRefreshing","refreshSubscribers","interceptors","response","use","error","config","status","originalRequest","removeToken","window","location","href","refresh_token","getRefreshToken","method","url","qs","stringify","grant_type","then","setTokens","access_token","onRrefreshed","catch","err","alert","Promise","resolve","reject","subscribeTokenRefresh","token","cb","push","map","CurrentUserApi","API_DEFAULT_ROUTE","LoginApi","payload","changeAdminPassword","getUserLogs","getAllLogs","setGeneralPrompt","promptSettings","dispatch","type","page_prompt","resetGeneralPrompt","open","custom_title","custom_subtitle","continue_callback","close_callback","setPageLinks","links","page_links","setSnackbar","msg","page_snackbar","options","variant","setPageSuccessPromptAction","page_success_prompt","toggleActivitySidebar","is_open","toggle_activity_sidebar","FormikInputField","props","useField","name","field","meta","errorText","touched","value","helperText","UseInterval","callbackFunc","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","LoginStyles","styled","Paper","theme","breakpoints","values","xs","md","p","palette","main","StyledImageBackground","div","src","helperErrorMessage","onError","toString","errors","forEach","authFormValues","username","password","images","importImagesFromFolder","require","LoginPortal","memo","useTheme","useDispatch","useState","currentBackground","setCurrentBackground","showPassword","setShowPassword","isAuthenticating","setIsAuthenticating","authError","setAuthError","history","useHistory","handleChange","useCallback","prev","length","handleTogglePassword","prevState","handleSubmit","formikHelpers","localStorage","setItem","APP_NAME","JSON","SetCurrentUserAction","resetForm","style","gridArea","className","imgSrc","index","key","clsx","active","app_logo","alt","process","initialValues","onSubmit","size","color","loading","fullWidth","disableElevation","onClick","keys","FieldPassword","htmlFor","startAdornment","position","fontSize","endAdornment","labelWidth","FieldUsername","autoFocus","initFormValues","firstname","middlename","lastname","suffix","grade","gender","email","mob_no","picture","user","confirm_password","formSchema","max","nullable","moreThan","lessThan","complete_address","test","this","parent","RegisterSTudentView","formRef","successDialog","setSuccessDialog","pic","setPic","handleSetPic","logo","handleFormSubmit","formHelpers","console","log","fileToBase64","addStudentAction","validationSchema","innerRef","setFieldValue","setValues","container","spacing","justify","item","height","width","selectedFile","placeholder","InputLabelProps","shrink","select","onChange","e","target","DbGradeLevels","val","InputProps","inputComponent","MaskedPhoneNumber","multiline","rows","padding","StyledRegisterStudentView","StyledLoadingButton","LoadingButton","disabled","handleClick","children","Button","CircularProgress","temp_storage","getItem","parse","acess_token","removeItem","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","Object","DbTutorPositions","DbCourseDurations","DbClassTypes","DbAdminPositions","PhotoField","preview","setPreview","onSelectFile","files","undefined","objectUrl","URL","createObjectURL","revokeObjectURL","fontWeight","marginBottom","StyledImageField","overlap","anchorOrigin","vertical","horizontal","badgeContent","title","backgroundColor","border","component","accept","boxShadow","display","justifyContent","textAlign","Badge","blob","reader","FileReader","readAsBinaryString","onload","result","btoa","onerror","PageLoader","useSelector","state","PageReducer","page_loading","show","loading_message","Backdrop","zIndex","modal","gridAutoFlow","gridGap","Typography","PagePrompt","handleContinue","handleCancel","StyledPagePrompt","scroll","disableBackdropClick","onEscapeKeyDown","PaperProps","margin","borderRadius","overflowY","DialogTitle","justifyItems","marginTop","Avatar","DialogContent","paragraph","DialogActions","startIcon","Dialog","PageSnackbar","enqueueSnackbar","useSnackbar","mounted","CustomAvatar","errorMessage","widthSpacing","heightSpacing","textTransform","letterSpacing","StyledActivity","LinearLoadingProgress","opacity","LinearProgress","AdminActivityView","store","all_logs","UserReducer","fetch_all_logs","UserActions","Drawer","anchor","minWidth","maxWidth","paddingTop","onClose","gridAutoColumns","alignContent","alignItems","IconButton","Grid","maxHeight","l","i","fullname","charAt","activity","moment","encoded_at","fromNow","useDebounce","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","FormikAutocomplete","optKeyId","optKeyLabel","inputFieldName","selectFieldName","endPoint","other_payload","setOptions","inputField","inputMeta","inputArgs","setLoading","selectField","selectArgs","debouncedSearchTerm","fetchData","setValue","Autocomplete","filterSelectedOptions","loadingText","getOptionLabel","option","renderOption","event","newValue","inputValue","onInputChange","newInputValue","filterOptions","renderInput","params","TextField","FormikSelect","hasEmptyValue","MenuItem","ind","extendMoment","Moment","getCourseDataTableApi","addCourseApi","getSingleCourseApi","course_pk","getCourseDurationApi","searchCourseApi","search","updateCourse","toggleCourseStatus","updateCourseImage","getTotalCourses","getClassSessionsApi","class_pk","getSingleClassSession","session_pk","startClassSession","endClassSession","unattendedClassSession","getTutorFutureSessionsApi","tutor_pk","getTutorClassSessionCalendarApi","getStatsSessionCalendarApi","getAllMessage","saveMessage","hideMessage","getTutorSessionCal","getStudentSessionCal","student_pk","getLoggedInTutorSessionCalendar","getLoggedStudentCalendar","getClassDataTableApi","getStudentEnrolledClassesApi","getStudentUnenrolledClassTableApi","getStudentAvailableClassTable","getStudentOngoingClassTable","getStudentEndedClassTable","getTutorClassTableApi","addClassApi","updateClassApi","approveClass","endClass","declineClass","getSingleClassApi","getAllTutorClasses","getStudentClassByStudentPk","getClassSummaryStats","getOpenClassProgressStats","getTotalClasses","getTotalTutorClassStats","getTotalStudentClassStats","rateClass","getEndedClassRatingStats","getClassRatings","setSelectedClassAction","fetching_selected_class","ClassApi","selected_class","fetch_all_tutor_classes","all_tutor_classes","fetch_student_class_by_student_pk","student_class_by_student_pk","fetch_class_summary_status","class_summary_status","fetch_open_class_progress_stats","open_class_progress_stats","fetch_total_tutor_class_stats","total_tutor_class_stats","fetch_total_student_class_stats","total_student_class_stats","onSuccess","fetch_student_available_class_table","student_available_class_table","fetch_student_ongoing_class_table","student_ongoing_class_table","fetch_student_ended_class_table","student_ended_class_table","fetch_ended_class_rating_stats","ended_class_rating_stats","fetch_class_ratings","class_ratings","InfoDialog","handleSetOpen","class_desc","course_desc","course_duration","room_pk","room_desc","class_type","tutor_name","start_date","start_time","end_time","session_count","class_sessions","min","GetCourseDuration","useFormikContext","CourseApi","est_duration","fetchCourseDuration","GetTutorFutureSessions","handleSetTutorFutureSessions","ClassSessionApi","fetching","AddClassAdminView","reschedProps","setReschedProps","tutorFutureSession","setTutorFutureSessions","sessions","form_values","openTutorFutureSched","setOpenTutorFutureSched","handleSetOpenTutorFutureSched","link","pathname","Container","validateOnChange","validateOnBlur","submitCount","Tooltip","v","Chip","Date","format","utils","DateFnsUtils","date","animateYearScrolling","disablePast","inputVariant","autoOk","ts","minutes","time_slots","initial_time","end","add","isSameOrBefore","isBefore","generateTimeSlot","session","schedulePayload","blocked_dates","counter","dates","temp_start_date","isoWeekday","conflict","bd","new_date_range","range","blocked_date_range","subtract","overlaps","toDate","generateDailyWeekDaysDates","render","arrayHelpers","onDelete","resched_date","dup","some","d","isSame","remove","SuccessDialog","handleReset","DataTableSearch","searchField","handleSetSearchField","FormControl","OutlinedInput","InputAdornment","DataTableSort","selectedSortIndex","handleChagenSelectedSortIndex","initialTableSort","SelectProps","disableUnderline","sort","useFilter","defaultSearch","initialLimit","tableSearch","setTableSearch","setSearchField","tableLimit","setTableLimit","tablePage","setTablePage","tableCount","setTableCount","setSelectedSortIndex","activeSort","setActiveSort","handleSetTableSearch","newState","handleSetLimit","newLimit","handleSetPage","newPage","handleChangePage","newCount","page","handleChangeRowsPerPage","parseInt","foundSortItem","generateSearchFilters","StyledClassContainer","StyledDashboardItem","initialSearch","column","direction","DataTableClassAdminView","table_loading","ClassReducer","fetching_class_data_table","data_table","class_data_table","table","begin","limit","filters","fetchTableData","minHeight","to","TablePagination","rowsPerPageOptions","count","rowsPerPage","onChangePage","onChangeRowsPerPage","preventDefault","gridTemplateColumns","sts_desc","sts_bgcolor","sts_color","closed_sessions","IconButtonPopper","buttonColor","buttons","iconColor","React","anchorEl","setAnchorEl","handleClose","Boolean","aria-describedby","currentTarget","Popover","transformOrigin","PopperContent","btn","Icon","text","AntTabs","withStyles","root","borderBottom","indicator","Tabs","AntTab","createStyles","typography","fontWeightRegular","marginRight","fontWeightMedium","selected","Tab","disableRipple","LinkTabs","tabs","RenderSwitchComponent","set_click_counter","StyledLinkTabs","orientation","findIndex","toLowerCase","includes","indicatorColor","textColor","InvalidTimeToDefault","defaultString","time","InvalidDateToDefault","InvalidDateTimeToDefault","parseDateAndDayOfWeekOrDefault","parseDateTimeOrDefault","StringEmptyToDefault","originalString","trim","setTblClassStudentsApi","enrollClassStudent","joinStudentToClassApi","blockClassStudentApi","class_stud_pk","reEnrollClassStudentApi","fetch_tbl_class_students","ClassStudentApi","tbl_class_students","getTutorDataTableApi","addTutorApi","getSingleTutorApi","getSingTutorToStudent","getDummyTutorsApi","insertDummyTutorRatingsApi","updateTutorImage","toggleActiveStatus","updateTutor","getTotalTutors","getLoggedInTutor","updateLoggedInTutorBio","rateTutor","favoriteTutor","getMostRatedTutors","setSingleTutor","fetching_single_tutor","single_tutor","TutorApi","fetch_loggedin_tutor","loggedin_tutor","single_tutor_to_student","fetch_single_tutor_to_student","fetch_most_rated_tutors","most_rated_tutors","StyledManageClassAdmin","FileViwer","file","viewer","WebViewer","path","initialDoc","isReadOnly","instance","docViewer","ref","FormDialog","body","actions","fullScreen","hideCloseButton","descriptionElementRef","mobile","useMediaQuery","down","radResultNo","useParams","descriptionElement","focus","disableEscapeKeyDown","DialogTitleStyle","disableTypography","DialogContentStyle","DialogActionsStyle","primary","light","contrastText","common","white","FormData","append","getTblClassMaterialApi","addClassMaterialApi","deleteClassMaterialApi","mat_pk","fetch_class_material","ClassMaterialApi","tbl_class_materials","ClassMaterialView","user_type","selectedMaterial","setSelectedMaterial","ClassMaterialReducer","openEnrollStudentModel","setOpenEnrollStudentModel","ClassMaterialActions","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","colSpan","material","descrip","justifySelf","convertObjectToFormData","form","ClassRatingView","tbl_class_ratings","fetch_tbl_class_ratings","ClassActions","r","student_info","rate_val","Rating","precision","readOnly","rated_at","setSingleClassSession","fetch_single_class_session","single_class_session","fetch_tutor_session_cal","tutor_session_cal","fetch_student_session_cal","student_session_cal","fetch_logged_in_tutor_session_cal","logged_in_tutor_session_cal","fetch_logged_student_calendar","logged_student_calendar","ClassSessionView","ClassSessionReducer","fetch_class_sessions","getClassSessionsAction","began","ended","ClassStudentView","ClassStudentReducer","ClassStudentActions","student","student_details","student_name","getAllClassTask","getSingleClassTask","class_task_pk","addClassTask","updateClassTask","toggleSubmitClassTask","changeStatusClassTask","getAllClassTaskQues","getSingleClassTaskQues","task_ques_pk","updateClassTaskQues","getAllClassTaskSub","getAllStudentsSubmit","addClassTaskSub","updateTaskSub","fetch_all_class_task","ClassSessionTaskApi","all_class_task","toNull","single_class_task","fetch_single_class_task","fetch_all_class_task_ques","all_class_task_ques","fetch_all_class_task_sub","all_class_task_sub","fetch_all_student_submit","all_student_submit","ClassTaskView","ClassSessionTaskReducer","ClassSessionTaskActions","t","task_title","task_desc","status_dtls","due_date","EditClassAdminDialog","initial_form_values","open_edit_class","handleCloseEditClass","handleOpenEditClass","remarks","EditClassStatusDialog","new_sts","initial_values","RateClassDialog","ManageClassView","set_open_edit_class","new_status","set_new_status","open_edit_class_status","set_open_edit_class_status","handleOpenEditClassStatus","handleCloseEditClassStatus","open_rating","set_open_rating","handleCloseRating","ButtonOptions","sts_pk","lg","Skeleton","animation","average_rating","student_rating","tutor_info","cursor","TutorActions","exact","notes","AddCourseAdminView","formValues","EditCourseDialog","handleReloadDataTable","CourseActions","noValidate","FormHelperText","EditCourseImageDialog","base64_pic","tableColumns","DataTableCourseAdminView","CourseReducer","fetching_course_data_table","course_data_table","selected_course","set_selected_course","open_edit_course","set_open_edit_course","reload_data_table","set_reload_data_table","handleOpenEditCourse","handleCloseEditCourse","open_change_image","set_open_change_image","handleOpenChangeCourse","handleCloseChangeCourseImage","c","handleToggleActiveStatus","overflowX","stickyHeader","col","row","whiteSpace","overflow","textOverflow","is_active","LinearGraph","progress_count","total","perc","getAdminDataTableApi","addAdminApi","getLoggedAdmin","updateAdminInfo","updateAdminImage","getTotalAdmin","getRoomDataTableApi","addRoomApi","getSingleRoomApi","searchRoomApi","updateRoom","toggleRoomStatus","getTotalRoom","DashboardAdminView","TutorReducer","total_students","set_total_students","loading_total_stats","set_loading_total_stats","StudentApi","getTotalStudents","student_res","tutor_res","AdminApi","admin_res","course_res","RoomApi","room_res","class_res","totals","fetch_data","sm","labels","datasets","borderColor","responsiveAnimationDuration","tooltips","enabled","plugins","showZero","fontColor","tutor_pic","ended_session","yAxesGroup","fill","scales","yAxes","stacked","scaleLabel","labelString","lineHeight","toFixed","fetching_logged_admin","logged_admin","old_password","new_password","ChangePasswordDialog","EditAdminImage","admin_pk","AdminActions","birth_date","EditAdminInfoDialog","FormikRadio","disableFuture","StyledAdminProfile","AdminProfileView","user_logs","fetch_user_logs","AdminReducer","open_change_image_dialog","set_open_change_image_dialog","handleOpenChangeImageDialog","handleCloseChangeImageDialog","open_edit_info","set_open_edit_info","handleOpenEditInfo","handleCloseEditInfo","open_change_pass","set_open_change_pass","handleOpenChangePass","handleCloseChangePass","thickness","prefix","DataTableStudentAdminView","StudentReducer","fetching_student_data_table","student_data_table","setStudentDataTableApi","RatedTutorClassView","StudentCalendarView","ClassSessionActions","schedulerLicenseKey","initialView","resourceTimeGridPlugin","interactionPlugin","views","timeGridFourDay","duration","days","buttonText","events","eventMinHeight","expandRows","stickyHeaderDates","slotMinTime","slotMaxTime","contentHeight","allDaySlot","eventContent","wordSpacing","extendedProps","StudentEnrollClassView","arrow","ManageStudentAdminView","selected_student","handleApproveStudent","StudentActions","approveStudent","setSelectedStudentAction","handleBlockStudent","blockStudent","initialFormValues","bio","AddAdminTutorView","AddAdminTutorSchema","DataTableAdminTutorView","fetching_tutor_data_table","tutor_table","tutor_data_table","EditTutorDialog","EditTutorImageDialog","TutorAssignedClassView","TutorCalendarView","TutorRatingView","ManageAdminAdminView","selected_tutor","fetching_selected_tutor","open_edit_tutor","set_open_edit_tutor","handleOpenEditTutor","handleCloseEditTutor","handleOpenChangeImage","handleCloseChangeImage","handleToggleActive","AddCoAdminView","DataTableCoAdminView","fetching_admin_data_table","admin_data_table","AddRoomAdminView","EditRoomDialog","RoomActions","DataTableRoomAdminView","RoomReducer","fetching_room_data_table","room_data_table","selected_room","set_selected_room","open_edit_room_dialog","set_open_edit_room_dialog","handleOpenRoomDialog","handleCloseRoomDialog","handleToggleRoomStatus","SysAdminRoutes","strict","CustomTab","desktop","up","StyledCustomTabs","borderRight","divider","RenderComponent","DateFieldHookForm","useFormContext","control","error_message","hasOwnProperty","defaultValue","onBlur","disableToolbar","TextFieldHookForm","getValues","invalid","isTouched","isDirty","inputRef","validate_task","Yup","EditTaskDialog","task","handleSetOpenEditTask","form_edit_task","useForm","resolver","yupResolver","mode","defaultValues","handleSubmitFormTask","reset","validate_task_ques","question","cor_answer","pnt","EditQues","task_ques","handleSetOpenEditQues","form_edit_task_ques","ManageTaskQuesView","open_edit_ques","set_open_edit_ques","selected_task_ques","set_selected_task_ques","q","StudentQuestion","questions","useFieldArray","fields","prepend","swap","move","insert","ViewSubmissionDialog","selected_submission","handleViewSubmitDtls","element","is_correct","task_sub_pk","Checkbox","checked","answer","ManageTaskSubmit","view_submit_dtls","set_view_submit_dtls","selected_submit","set_selected_submit","s","answered_at","ManageTaskView","md_screen","open_edit_task","set_open_edit_task","set_tabls","gen_tab","loadTabs","allow_submit","Body","isOpenMobileHeader","StyledBody","header","PageLinks","StyledPageLinks","Breadcrumbs","aria-label","AppBar","StyledUserProfile","secondary","StyledPopOverContent","UserProfile","handleLogout","Header","PageNavLinks","handleToggleHeader","handleToggleSidebar","isOpenMobileSidebar","StyledHeader","nav","activeClassName","sidebar","StyledNavSidebarDropdown","NavSidebarDropDown","isActive","navLinks","setOpen","Collapse","in","MobileSidebar","handleCloseMobileSidebar","StyledMobileSidebar","hasSubLinks","parentKey","generateNavLinks","Layout","reducers","setIsOpenMobileHeader","prevHeader","setIsOpenMobileSidebar","prevSidebar","DataClassTutorView","fetch_tutor_class_table","tutor_class_table","StyledDashboardTutor","EditTutorBiography","EditTutorPicture","DashboardTutorView","open_edit_picture","set_open_edit_picture","handleOpenEditPicture","handleCloseEditPicture","open_edit_bio","set_open_edit_bio","handleOpenEditBio","handleCloseEditBio","fav_count","borderLeft","borderTop","EditSessionStatusDialog","SessionDtls","set_open_dialog_end","ellapsed_time","set_ellapsed_time","handleChangeEllapseTime","ellapse","diff","hours","seconds","class_info","course_info","status_info","StyledBadge","badge","background","paper","top","left","content","transform","SessionTabs","socketRef","messagesEndRef","active_tab","set_active_tab","active_students","set_active_students","message_body","set_message_body","message_table","set_message_table","reload_messages","set_reload_messages","handleSetMessageBody","handleSubmitMessage","msg_body","emit","io","query","on","users","disconnect","reloadMessages","scrollIntoView","stud","user_pk","user_id","sent_at","rowsMax","onKeyDown","shiftKey","validate_add_task","DialogAddTask","form_create_task","open_add_ques","set_open_add_ques","set_questions","handleSetOpenAddQuest","form_add_task","handleSubmitFormAddTask","splice","SessionTasks","open_add_task","set_open_add_task","handleSetOpenAddTask","SessionVideoConf","hash_pk","roomName","displayName","containerStyles","loadingComponent","errorComponent","configOverwrite","enableWelcomePage","prejoinPageEnabled","disableLogCollector","defaultLogLevel","onJitsi","loggerConfigOverwrite","interfaceConfigOverwrite","DISPLAY_WELCOME_FOOTER","GENERATE_ROOMNAMES_ON_WELCOME_PAGE","HIDE_INVITE_MORE_HEADER","HIDE_DEEP_LINKING_LOGO","SHOW_JITSI_WATERMARK","SHOW_WATERMARK_FOR_GUESTS","TOOLBAR_BUTTONS","allow","StyledSelectedSession","ManageClassSelectedSessionTutorView","TutorRoutes","Transition","forwardRef","Slide","PageSuccessPrompt","StyledSuccessDialog","TransitionComponent","gutterBottom","action_buttons","b","StyledRateTutorDialog","RateTutorDialog","handleCloseDialog","rating","Switch","favorited","EndedClassTableStudentView","refetchUnenrolledClasses","OngoingClassTableStudentView","AvailableClassTableStudentView","DataClassStudentView","StyledDashboardStudent","EditStudentInfo","updateStudent","getLoggedStudentInfo","EditStudentPicture","updateStudentImage","open_edit_student_info","set_open_edit_student_info","handleOpenEditStudentInfo","handleCloseEditStudentInfo","logged_student_info","fetch_logged_student_info","TutorRatingStudentView","rateTutors","setRateTutors","steps","setSteps","fetch_dummy_tutors","rated_tutor","StyledTutorRatingStudentView","prevTutor","temp","foundTutor","k","step","insertDummyTutorRatingsAction","StudentRoutes","Routes","getUserInfo","defaultState","userLoading","action","isLoading","fetching_user_logs","fetching_all_logs","reload_single_tutor","reload_tutor_paging","fetching_selected_course","fetching_selected_room","fetching_selected_admin","selected_admin","student_unenrolled_class_table","fetch_student_unenrolled_class_table","student_enrolled_class_table","fetch_student_enrolled_class_table","fetching_selected_student","fetch_stats_class_session","fetch_tutor_class_sessions","tutor_class_sessions","stats_class_session","single_class_task_ques","fetch_single_class_task_ques","SharedReducer","selected_tutor_rate","RootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","createMuiTheme","button","fontFamily","join","responsiveFontSizes","App","notistackRef","createRef","maxSnack","dense","hideIconVariant","closeSnackbar","ReactDOM","document","getElementById","getStudentDataTableApi","getSingleStudentApi","addStudentApi","UserApi","other","inputElement","mask","showMask","guide","BASE_URL"],"mappings":"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","file":"static/js/main.c3c3b08f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app_logo.c76c6f3b.png\";","import * as yup from \"yup\";\r\n\r\nexport const validateEmail = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n// export const validateMobile = /^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/;\r\nexport const validateMobile = /^(\\+639)\\d{9}$/;\r\n\r\nexport const validateUsernameLength = /^(?=.{8,20}$)/;\r\nexport const validateUsernameAllowedChar = /[a-zA-Z0-9._]/;\r\nexport const validateUsernameBeginChar = /(?![_.])/;\r\nexport const validateUsernameEndChar = /(?<![_.])/;\r\n\r\nexport const validateUsername = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      validateUsernameBeginChar,\r\n      `${label} must not begin special characters period(.) or underscore(_)`\r\n    )\r\n    .matches(\r\n      validateUsernameAllowedChar,\r\n      `${label} must not contain special characters except (._)`\r\n    )\r\n    .matches(\r\n      validateUsernameLength,\r\n      `${label} must be 8 characters short and 20 characters long`\r\n    )\r\n    .matches(\r\n      validateUsernameEndChar,\r\n      `${label} must not end special characters period(.) or underscore(_)`\r\n    );\r\n\r\n  return validatedUsername;\r\n};\r\n\r\nexport const validatePassword = (label) => {\r\n  const validatedUsername = yup\r\n    .string()\r\n    .label(label)\r\n    .required()\r\n    .matches(\r\n      /^(?=.*[0-9])[a-zA-Z0-9!@#$%^&_*]{6,25}$/,\r\n      `${label} must be 6 to 25 characters long with numbers and special characters`\r\n    );\r\n  return validatedUsername;\r\n};\r\n","import axios, { AxiosInstance } from \"axios\";\r\nimport qs from \"qs\";\r\nimport {\r\n  API_BASE_URL,\r\n  getAccessToken,\r\n  getRefreshToken,\r\n  removeToken,\r\n  setTokens,\r\n} from \"../Helpers/AppConfig\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\n\r\nexport const Axios: AxiosInstance = axios.create();\r\n\r\nexport const GetFetch = async (endpoint: string): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.get(\r\n      API_BASE_URL + endpoint,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nexport const PostFetch = async (\r\n  endpoint: string,\r\n  data: any\r\n): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.post(\r\n      API_BASE_URL + endpoint,\r\n      data,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nexport const PostFileFetch = async (\r\n  endpoint: string,\r\n  form_data: FormData\r\n): Promise<IServerResponse> => {\r\n  try {\r\n    const serverResponse: IServerResponse = await Axios.post(\r\n      API_BASE_URL + endpoint,\r\n      form_data,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${getAccessToken()}`,\r\n        },\r\n      }\r\n    );\r\n    return serverResponse.data;\r\n  } catch (error) {\r\n    return {\r\n      success: false,\r\n      message: `Fetch request error: ${error}`,\r\n    };\r\n  }\r\n};\r\n\r\nlet isRefreshing = false;\r\nlet refreshSubscribers: Array<any> = [];\r\n\r\nAxios.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    const {\r\n      config,\r\n      response: { status },\r\n    } = error;\r\n    const originalRequest = config;\r\n\r\n    if (status === 409) {\r\n      removeToken();\r\n      window.location.href = \"/login\";\r\n    }\r\n\r\n    if (status === 401) {\r\n      if (!isRefreshing) {\r\n        isRefreshing = true;\r\n\r\n        const refresh_token = getRefreshToken();\r\n\r\n        if (refresh_token) {\r\n          axios({\r\n            method: \"post\",\r\n            url: API_BASE_URL + `api/token`,\r\n            data: qs.stringify({\r\n              grant_type: \"refresh_token\",\r\n              refresh_token: refresh_token,\r\n            }),\r\n            headers: {\r\n              \"content-type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            },\r\n          })\r\n            .then((response) => {\r\n              setTokens(\r\n                response.data.access_token,\r\n                response.data.refresh_token\r\n              );\r\n\r\n              isRefreshing = false;\r\n              onRrefreshed(response.data.access_token);\r\n              refreshSubscribers = [];\r\n            })\r\n            .catch((err) => {\r\n              removeToken();\r\n              alert(\r\n                `Ops, it seems that your session is no longer valid. Please login again.`\r\n              );\r\n              window.location.href = \"/login\";\r\n            });\r\n        } else {\r\n          window.location.href = \"/login\";\r\n        }\r\n      }\r\n\r\n      const retryOrigReq = new Promise((resolve, reject) => {\r\n        subscribeTokenRefresh((token: any) => {\r\n          originalRequest.headers[\"Authorization\"] = \"Bearer \" + token;\r\n          resolve(axios(originalRequest));\r\n        });\r\n      });\r\n      return retryOrigReq;\r\n    } else {\r\n      return Promise.reject(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst subscribeTokenRefresh = (cb: any) => {\r\n  refreshSubscribers.push(cb);\r\n};\r\n\r\nconst onRrefreshed = (token: string) => {\r\n  refreshSubscribers.map((cb) => cb(token));\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserLogin, UserModel } from \"../Models/UserModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/users/`;\r\n\r\nexport const CurrentUserApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"currentUser\", null);\r\n  return response;\r\n};\r\n\r\nexport const LoginApi = async (\r\n  payload: UserLogin\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"login\", payload);\r\n  return response;\r\n};\r\n\r\nconst changeAdminPassword = async (\r\n  payload: UserModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"changeAdminPassword\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getUserLogs = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getUserLogs\", null);\r\n  return response;\r\n};\r\n\r\nconst getAllLogs = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllLogs\", null);\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  changeAdminPassword,\r\n  getUserLogs,\r\n  getAllLogs,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport {\r\n  PagePromptTypes,\r\n  PageReducerTypes,\r\n  PageLoadingTypes,\r\n  PageLinkTypes,\r\n  PageSuccessPromptTypes,\r\n} from \"../Types/PageTypes\";\r\n\r\nexport const setGeneralPrompt = (promptSettings: PagePromptTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: promptSettings,\r\n  });\r\n};\r\n\r\nexport const resetGeneralPrompt = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_PROMPT\",\r\n    page_prompt: {\r\n      open: false,\r\n      custom_title: null,\r\n      custom_subtitle: null,\r\n      continue_callback: null,\r\n      close_callback: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const showPageLoading = (loadingSetting: PageLoadingTypes) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  const { loading_message } = loadingSetting;\r\n\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: true,\r\n      loading_message: loading_message\r\n        ? loading_message\r\n        : \"We are processing your request, thank you for your patience.\",\r\n    },\r\n  });\r\n};\r\n\r\nexport const closePageLoading = () => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LOADING\",\r\n    page_loading: {\r\n      show: false,\r\n      loading_message: null,\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageLinks = (links: Array<PageLinkTypes>) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_LINKS\",\r\n    page_links: links,\r\n  });\r\n};\r\n\r\nexport const setSnackbar = (\r\n  msg: string,\r\n  type: \"error\" | \"success\" | \"warning\"\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SNACKBAR\",\r\n    page_snackbar: {\r\n      message: msg,\r\n      options: {\r\n        variant: type,\r\n      },\r\n    },\r\n  });\r\n};\r\n\r\nexport const setPageSuccessPromptAction = (\r\n  payload: PageSuccessPromptTypes\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  dispatch({\r\n    type: \"SET_PAGE_SUCCESS_PROMPT\",\r\n    page_success_prompt: payload,\r\n  });\r\n};\r\n\r\nexport const toggleActivitySidebar = (is_open: boolean) => async (\r\n  dispatch: Dispatch<PageReducerTypes>\r\n) => {\r\n  dispatch({\r\n    type: \"toggle_activity_sidebar\",\r\n    toggle_activity_sidebar: is_open,\r\n  });\r\n};\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst FormikInputField = (props: TextFieldProps) => {\r\n  const [field, meta] = useField(\r\n    typeof props.name !== \"undefined\" ? props.name : \"\"\r\n  );\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      {...field}\r\n      value={field.value ? field.value : \"\"}\r\n      error={!!errorText}\r\n      helperText={errorText}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FormikInputField;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nconst UseInterval = (callbackFunc: () => void, delay: number) => {\r\n  const savedCallback = useRef<() => void>();\r\n  useEffect(() => {\r\n    savedCallback.current = callbackFunc;\r\n  }, [callbackFunc]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      if (typeof savedCallback.current !== \"undefined\") {\r\n        savedCallback.current();\r\n      }\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n};\r\n\r\nexport default UseInterval;\r\n","import { Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const LoginStyles = styled(Paper)`\r\n  min-height: 100vh;\r\n  min-width: 100vw;\r\n  height: 100%;\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-areas: \"login\";\r\n  background: #314755;\r\n  background: linear-gradient(to left, #26a0da, #314755);\r\n\r\n  .login-container {\r\n    background-color: #fff;\r\n    align-self: center;\r\n    justify-self: center;\r\n    display: grid;\r\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.56);\r\n    z-index: 2;\r\n    /* grid-gap: 1em; */\r\n    border-radius: 7px !important;\r\n    overflow: hidden !important;\r\n    perspective: 1px;\r\n    overflow: hidden;\r\n    opacity: 0.9;\r\n\r\n    @media all and (min-width: ${(props) =>\r\n        props.theme.breakpoints.values.xs}px) {\r\n      grid-auto-columns: 1fr;\r\n      /* grid-auto-columns: 30em 25em; */\r\n      min-height: auto;\r\n      align-self: start;\r\n      /* justify-self: center; */\r\n\r\n      border-radius: unset;\r\n      grid-auto-flow: row;\r\n      grid-auto-rows: 13em 1fr;\r\n      margin-top: 2em;\r\n      margin-bottom: 2em;\r\n\r\n      .slider-ctnr {\r\n        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\r\n      }\r\n    }\r\n\r\n    @media all and (min-width: ${(props) =>\r\n        props.theme.breakpoints.values.md}px) {\r\n      grid-auto-columns: 33em 25em;\r\n      grid-auto-flow: column !important;\r\n      grid-auto-rows: unset !important;\r\n      align-self: center !important;\r\n      min-height: unset !important;\r\n    }\r\n\r\n    .slider-ctnr {\r\n      display: grid;\r\n      grid-template-areas: \"slides\";\r\n\r\n      .slides {\r\n        height: 100%;\r\n        width: 100%;\r\n        grid-area: slides;\r\n      }\r\n    }\r\n\r\n    .form-ctnr {\r\n      display: grid;\r\n      /* justify-content: center; */\r\n      align-items: start;\r\n      align-content: start;\r\n      padding: 1em 2em;\r\n      padding-bottom: 0.3em;\r\n      /* padding-top: 0; */\r\n\r\n      .header {\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n        justify-items: center;\r\n        /* text-align: center; */\r\n\r\n        .brand-logo {\r\n          height: 4em;\r\n\r\n          width: 4em;\r\n        }\r\n        .brand-name {\r\n          padding: 0.5em 0;\r\n          text-align: center;\r\n        }\r\n      }\r\n\r\n      .error {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        justify-items: start;\r\n        justify-content: start;\r\n        align-items: center;\r\n        font-size: 0.8em;\r\n        font-weight: 500;\r\n        max-width: 90%;\r\n        color: ${(p) => p.theme.palette.error.main};\r\n      }\r\n\r\n      .body {\r\n        display: grid;\r\n        grid-gap: 1em;\r\n        align-content: start;\r\n\r\n        .body-title {\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          justify-items: start;\r\n          align-items: center;\r\n        }\r\n\r\n        .form {\r\n          display: grid;\r\n          grid-gap: 1em;\r\n          align-content: start;\r\n          align-items: start;\r\n\r\n          .forgetpass {\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0;\r\n            font-size: 0.7rem;\r\n            margin-top: -10px;\r\n            &:hover {\r\n              color: blue !important;\r\n            }\r\n\r\n            a {\r\n              color: #333 !important;\r\n              text-decoration: none !important;\r\n            }\r\n          }\r\n\r\n          .buttons {\r\n            margin-top: 1em;\r\n            display: grid;\r\n            grid-auto-flow: row;\r\n            grid-gap: 0.5em;\r\n            .submit-btn {\r\n            }\r\n            .MuiButtonBase-root {\r\n              border-radius: 35px !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer {\r\n        margin-top: 1em;\r\n        border-top: 1px solid black;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        grid-gap: 0.4em;\r\n        .title {\r\n          justify-self: center;\r\n          background-color: #ecfffb;\r\n          margin-top: -10px;\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          padding: 0 0.5em;\r\n        }\r\n\r\n        .tuo_logo {\r\n          height: 35px;\r\n          width: 35px;\r\n        }\r\n\r\n        .tuo-name {\r\n          font-weight: 500;\r\n          font-size: 0.8em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledImageBackground = styled.div<{ src: any }>`\r\n  background: linear-gradient(to top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.4)),\r\n    url(\"${(p: any) => p.src}\") no-repeat center center;\r\n  opacity: 0;\r\n  background-size: cover;\r\n  margin-left: 0;\r\n\r\n  transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -webkit-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -moz-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  -o-transition: 2s opacity cubic-bezier(0.95, 0.05, 0.795, 0.035);\r\n  .app-name {\r\n    display: grid;\r\n    align-content: end;\r\n    align-items: end;\r\n    text-shadow: 0 3px 0 black;\r\n    color: #fff;\r\n    padding: 0.5em;\r\n    /* font-size: 2.1em; */\r\n    /* font-weight: 900; */\r\n    text-align: center;\r\n  }\r\n  &.active {\r\n    opacity: 1;\r\n  }\r\n`;\r\n","import { Dispatch } from \"react\";\r\nimport IServerResponse from \"../Services/Interface/IServerResponse\";\r\nimport { PageReducerTypes } from \"../Services/Types/PageTypes\";\r\n\r\nconst helperErrorMessage = (\r\n  dispatch: Dispatch<PageReducerTypes>,\r\n  response: IServerResponse,\r\n  onError?: () => any\r\n) => {\r\n  if (response.message && typeof response.message === \"string\") {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: response.message.toString(),\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  response?.errors?.forEach((err) => {\r\n    dispatch({\r\n      type: \"SET_PAGE_SNACKBAR\",\r\n      page_snackbar: {\r\n        message: ` ${err} `,\r\n        options: {\r\n          variant: \"error\",\r\n        },\r\n      },\r\n    });\r\n  });\r\n  if (typeof onError === \"function\") {\r\n    onError();\r\n  }\r\n};\r\n\r\nexport default helperErrorMessage;\r\n","import { Avatar, Button } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Form, Formik, FormikHelpers } from \"formik\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport app_logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport LoadingButton from \"../../Component/LoadingButton\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport importImagesFromFolder from \"../../Helpers/importImagesFromFolder\";\r\nimport UseInterval from \"../../Hooks/UseInterval\";\r\nimport { ILoginPortalAuthFormValues } from \"../../Interfaces/LoginPortalInterface\";\r\nimport { SetCurrentUserAction } from \"../../Services/Actions/UserActions\";\r\nimport { LoginApi } from \"../../Services/Api/UserApi\";\r\nimport FieldPassword from \"./FieldPassword\";\r\nimport FieldUsername from \"./FieldUsername\";\r\nimport { LoginStyles, StyledImageBackground } from \"./styles\";\r\n\r\ninterface ILoginPortal {}\r\n\r\nconst authFormValues: ILoginPortalAuthFormValues = {\r\n  username: \"\",\r\n  password: \"\",\r\n};\r\n\r\nconst images: Array<any> = importImagesFromFolder(\r\n  require.context(\r\n    \"../../Assets/Images/Login/\",\r\n    true,\r\n    /\\.(png|jpg|jpe?g|svg|gif)$/\r\n  )\r\n);\r\n\r\nconst delaySec = 5000;\r\n\r\nexport const LoginPortal: FC<ILoginPortal> = memo(() => {\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n  const [currentBackground, setCurrentBackground] = useState(0);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isAuthenticating, setIsAuthenticating] = useState(false);\r\n  const [authError, setAuthError] = useState(\"\");\r\n  const history = useHistory();\r\n  const handleChange = useCallback(() => {\r\n    setCurrentBackground((prev) => (prev === images.length - 1 ? 0 : prev + 1));\r\n  }, []);\r\n\r\n  const handleTogglePassword = useCallback(() => {\r\n    setShowPassword((prevState) => !prevState);\r\n  }, []);\r\n\r\n  UseInterval(handleChange, delaySec);\r\n\r\n  const handleSubmit = useCallback(\r\n    async (\r\n      values: ILoginPortalAuthFormValues,\r\n      formikHelpers: FormikHelpers<ILoginPortalAuthFormValues>\r\n    ) => {\r\n      setIsAuthenticating(true);\r\n      const response = await LoginApi(values);\r\n      setIsAuthenticating(false);\r\n      if (response.success) {\r\n        localStorage.setItem(\r\n          APP_NAME,\r\n          JSON.stringify({\r\n            access_token: response.data.token,\r\n          })\r\n        );\r\n        dispatch(SetCurrentUserAction());\r\n      } else {\r\n        if (typeof response.message === \"string\") {\r\n          setAuthError(response.message);\r\n        }\r\n        formikHelpers.resetForm();\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <LoginStyles theme={theme}>\r\n      <div style={{ gridArea: \"login\" }} className=\"login-container\">\r\n        <div className=\"slider-ctnr\">\r\n          {images.map((imgSrc: any, index: number) => (\r\n            <StyledImageBackground\r\n              src={imgSrc}\r\n              key={index}\r\n              className={clsx(\"slides\", {\r\n                active: index === currentBackground,\r\n              })}\r\n            >\r\n              <h1 className=\"app-name\">{APP_NAME}</h1>\r\n            </StyledImageBackground>\r\n          ))}\r\n        </div>\r\n        <div className=\"form-ctnr\">\r\n          <section className=\"header\">\r\n            <img className=\"brand-logo\" src={app_logo} alt=\"\" />\r\n\r\n            <h2 className=\"brand-name\">{process.env.REACT_APP_CLIENT}</h2>\r\n          </section>\r\n\r\n          <section className=\"body\">\r\n            <small className=\"body-title\">\r\n              You can sign into your account here\r\n            </small>\r\n\r\n            {!!authError && <div className=\"error\">{authError}</div>}\r\n\r\n            <Formik initialValues={authFormValues} onSubmit={handleSubmit}>\r\n              <Form className=\"form\">\r\n                <FieldUsername />\r\n                <FieldPassword\r\n                  showPassword={showPassword}\r\n                  handleTogglePassword={handleTogglePassword}\r\n                />\r\n\r\n                {/* <NavLink to=\"/login\" className=\"forgetpass\">\r\n                  <div className=\"forget-text\">\r\n                    Let us help you if you <span>forgot your password?</span>\r\n                  </div>\r\n                </NavLink> */}\r\n                <div className=\"buttons\">\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    variant=\"contained\"\r\n                    // disableElevation\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    loading={isAuthenticating}\r\n                    fullWidth={true}\r\n                  >\r\n                    Log in\r\n                  </LoadingButton>\r\n                  <Button\r\n                    type=\"button\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/student-registration`);\r\n                    }}\r\n                  >\r\n                    Create Student Account\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n            </Formik>\r\n          </section>\r\n          <section className=\"footer\">\r\n            <div className=\"title\">Developed & Maintained By</div>\r\n            <Avatar className=\"tuo_logo\" src={app_logo} />\r\n            <div className=\"tuo-name\">{process?.env.REACT_APP_PROVIDER}</div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </LoginStyles>\r\n  );\r\n});\r\n\r\nexport default LoginPortal;\r\n","export const importImagesFromFolder = (src: any) => {\r\n  return src.keys().map(src);\r\n};\r\n\r\nexport default importImagesFromFolder;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\r\nimport VpnKeyRoundedIcon from \"@material-ui/icons/VpnKeyRounded\";\r\n\r\ninterface IFieldPassword {\r\n  showPassword: boolean;\r\n  handleTogglePassword: () => void;\r\n}\r\n\r\nexport const FieldPassword: FC<IFieldPassword> = memo(\r\n  ({ showPassword, handleTogglePassword }) => {\r\n    const [field] = useField({ name: \"password\" });\r\n    return (\r\n      <FormControl fullWidth variant=\"outlined\">\r\n        <InputLabel htmlFor=\"outlined-adornment-amount\">Password</InputLabel>\r\n        <OutlinedInput\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          id=\"outlined-adornment-amount\"\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <VpnKeyRoundedIcon fontSize=\"small\" />\r\n            </InputAdornment>\r\n          }\r\n          endAdornment={\r\n            <div>\r\n              {showPassword ? (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              ) : (\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={handleTogglePassword}\r\n                  color=\"primary\"\r\n                >\r\n                  <VisibilityOffRoundedIcon fontSize=\"small\" />\r\n                </IconButton>\r\n              )}\r\n            </div>\r\n          }\r\n          labelWidth={75}\r\n          {...field}\r\n        />\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FieldPassword;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo, FC } from \"react\";\r\nimport PersonRoundedIcon from \"@material-ui/icons/PersonRounded\";\r\ninterface IFieldUsername {}\r\n\r\nexport const FieldUsername: FC<IFieldUsername> = memo(() => {\r\n  const [field] = useField({ name: \"username\" });\r\n  return (\r\n    <FormControl fullWidth variant=\"outlined\">\r\n      <InputLabel htmlFor=\"outlined-adornment-amount\">Username</InputLabel>\r\n      <OutlinedInput\r\n        id=\"outlined-adornment-amount\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <PersonRoundedIcon fontSize=\"small\" />\r\n          </InputAdornment>\r\n        }\r\n        labelWidth={80}\r\n        {...field}\r\n        autoFocus={true}\r\n      />\r\n    </FormControl>\r\n  );\r\n});\r\n\r\nexport default FieldUsername;\r\n","import { Button, Grid, MenuItem, TextField, useTheme } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikHelpers, FormikProps } from \"formik\";\r\nimport React, { FC, memo, useCallback, useRef, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport app_logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport FormikInputField from \"../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../Component/SuccessDialog\";\r\nimport {\r\n  validateEmail,\r\n  validateMobile,\r\n  validatePassword,\r\n  validateUsername,\r\n} from \"../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../Hooks/UseFileConverter\";\r\nimport { setGeneralPrompt } from \"../../Services/Actions/PageActions\";\r\nimport { addStudentAction } from \"../../Services/Actions/StudentActions\";\r\nimport { StudentModel } from \"../../Services/Models/StudentModel\";\r\nimport { DbGradeLevels } from \"../../Storage/LocalDatabase\";\r\nimport { StyledRegisterStudentView } from \"./styles\";\r\n\r\ninterface IRegisterSTudentView {}\r\n\r\nconst initFormValues: StudentModel = {\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  grade: null,\r\n  gender: null,\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  picture: \"\",\r\n  user: {\r\n    username: \"\",\r\n    password: \"\",\r\n    confirm_password: \"\",\r\n  },\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  middlename: yup.string().max(100).label(\"Midle Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  suffix: yup.string().max(10).label(\"Suffix\"),\r\n  grade: yup\r\n    .number()\r\n    .nullable()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(20)\r\n    .label(\"Grade Level\"),\r\n  email: yup\r\n    .string()\r\n    .required()\r\n    .label(\"Email Address\")\r\n    .matches(validateEmail, \"Email address has invalid format\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    ),\r\n  gender: yup.string().nullable().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n  user: yup.object({\r\n    username: validateUsername(\"Username\"),\r\n    password: validatePassword(\"Password\"),\r\n    confirm_password: yup\r\n      .string()\r\n      .required()\r\n      .label(\"Re-enter password\")\r\n      .test(\"Passwords do not much\", \"Passwords must match\", function (value) {\r\n        const { password } = this.parent;\r\n        return password === value;\r\n      }),\r\n  }),\r\n});\r\n\r\nexport const RegisterSTudentView: FC<IRegisterSTudentView> = memo(() => {\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const formRef = useRef<FormikProps<StudentModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (values, formHelpers: FormikHelpers<StudentModel>) => {\r\n      console.log(`values`, values);\r\n      values.picture = await fileToBase64(pic);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addStudentAction(values, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  return (\r\n    <StyledRegisterStudentView theme={theme}>\r\n      <div style={{ gridArea: \"login\" }} className=\"login-container\">\r\n        <div className=\"form-ctnr\">\r\n          <section className=\"header\">\r\n            <img className=\"brand-logo\" src={app_logo} alt=\"\" />\r\n            <h1>{process.env.REACT_APP_NAME}</h1>\r\n            <h3>{process.env.REACT_APP_CLIENT}</h3>\r\n\r\n            <div className=\"brand-name\">\r\n              We simply bring learnings in you. Start leaning now!\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"body\">\r\n            <div className=\"body-title\">\r\n              Fill-up all the required fields to create an account!\r\n            </div>\r\n\r\n            {/* {!!authError && <div className=\"error\">{authError}</div>} */}\r\n\r\n            <Formik\r\n              initialValues={initFormValues}\r\n              validationSchema={formSchema}\r\n              onSubmit={handleFormSubmit}\r\n              innerRef={formRef}\r\n            >\r\n              {({\r\n                values,\r\n                errors,\r\n                touched,\r\n                setFieldValue,\r\n                handleChange,\r\n                setValues,\r\n              }) => (\r\n                <Form className=\"form\">\r\n                  <Grid container spacing={3}>\r\n                    <Grid xs={12} container justify=\"center\" item>\r\n                      <div>\r\n                        <PhotoField\r\n                          label=\"\"\r\n                          height={180}\r\n                          width={180}\r\n                          selectedFile={pic}\r\n                          name=\"pic\"\r\n                          handleChange={handleSetPic}\r\n                        />\r\n                      </div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"form-title\">Personal Information</div>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        placeholder=\"Enter firstname name\"\r\n                        name=\"firstname\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Middle Name (optional)\"\r\n                        placeholder=\"Enter middle name\"\r\n                        name=\"middlename\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        placeholder=\"Enter last name\"\r\n                        name=\"lastname\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <FormikInputField\r\n                        label=\"Suffix (optional)\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      {(() => {\r\n                        const name = \"grade\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name] ? values[name] : \"\"}\r\n                            label=\"Grade Level\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                          >\r\n                            {DbGradeLevels.map((val, index) => (\r\n                              <MenuItem key={index} value={val.id}>\r\n                                {val.label}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Mobile Number\"\r\n                        placeholder=\"Mobile Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        placeholder=\"Enter email address\"\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Complete Address\"\r\n                          placeholder=\"Enter complete address\"\r\n                          name=\"complete_address\"\r\n                          type=\"text\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={3}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"form-title\">Account Information</div>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        label=\"Username\"\r\n                        placeholder=\"Enter username\"\r\n                        name=\"user.username\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Password\"\r\n                        placeholder=\"Enter password\"\r\n                        name=\"user.password\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                      <FormikInputField\r\n                        label=\"Re-enter password\"\r\n                        placeholder=\"Re-enter password\"\r\n                        name=\"user.confirm_password\"\r\n                        type=\"password\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      container\r\n                      xs={12}\r\n                      spacing={2}\r\n                      justify=\"flex-end\"\r\n                      style={{\r\n                        padding: `2em 0`,\r\n                      }}\r\n                    >\r\n                      <Grid item>\r\n                        <Button\r\n                          color=\"primary\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          size=\"large\"\r\n                          type=\"submit\"\r\n                        >\r\n                          Create Account\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          color=\"secondary\"\r\n                          variant=\"contained\"\r\n                          disableElevation\r\n                          size=\"large\"\r\n                          onClick={() => {\r\n                            history.push(`/login`);\r\n                          }}\r\n                        >\r\n                          Go Back\r\n                        </Button>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          </section>\r\n          <section className=\"footer\">\r\n            <div className=\"title\">Developed & Maintained By</div>\r\n            <div className=\"tuo-name\">{process?.env.REACT_APP_PROVIDER}</div>\r\n          </section>\r\n\r\n          <SuccessDialog {...successDialog}>\r\n            <Button\r\n              color=\"primary\"\r\n              disableElevation={false}\r\n              onClick={() => {\r\n                history.push(`/login`);\r\n              }}\r\n            >\r\n              Go to Login Page\r\n            </Button>\r\n          </SuccessDialog>\r\n        </div>\r\n      </div>\r\n    </StyledRegisterStudentView>\r\n  );\r\n});\r\n\r\nexport default RegisterSTudentView;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledRegisterStudentView = styled.div`\r\n  min-height: 100vh;\r\n  /* min-width: 100vw; */\r\n  height: 100%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n  display: grid;\r\n  grid-template-areas: \"login\";\r\n  background: #314755;\r\n  background: linear-gradient(to left, #26a0da, #314755);\r\n\r\n  .login-container {\r\n    background-color: #fff;\r\n    align-self: center;\r\n    justify-self: center;\r\n    display: grid;\r\n    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.56),\r\n      0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\r\n    z-index: 2;\r\n    border-radius: 15px;\r\n    perspective: 1px;\r\n    overflow: hidden;\r\n    margin: 2em 0 !important;\r\n    opacity: 0.9;\r\n    width: 600px;\r\n\r\n    .form-ctnr {\r\n      display: grid;\r\n      /* justify-content: center; */\r\n      align-items: start;\r\n      align-content: start;\r\n      grid-gap: 1em;\r\n      padding: 1em;\r\n      /* padding-top: 0; */\r\n\r\n      .header {\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n        justify-items: center;\r\n        /* text-align: center; */\r\n\r\n        .brand-logo {\r\n          height: 5em;\r\n          width: 5em;\r\n        }\r\n        .brand-name {\r\n          font-weight: 600;\r\n          padding: 0.5em 0;\r\n          font-size: 1em;\r\n        }\r\n      }\r\n\r\n      .error {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        justify-items: start;\r\n        justify-content: start;\r\n        align-items: center;\r\n        font-size: 0.8em;\r\n        font-weight: 500;\r\n        max-width: 90%;\r\n        color: ${(p) => p.theme.palette.error.main};\r\n      }\r\n\r\n      .body {\r\n        margin: 1em 0;\r\n        display: grid;\r\n        grid-gap: 1em;\r\n        align-content: start;\r\n\r\n        .body-title {\r\n          /* text-align: center; */\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          /* justify-content: center; */\r\n          justify-items: start;\r\n          align-items: center;\r\n          font-size: 0.87em;\r\n          font-weight: 500;\r\n          color: rgba(0, 0, 0, 0.7);\r\n        }\r\n\r\n        .form {\r\n          display: grid;\r\n          grid-gap: 1em;\r\n          align-content: start;\r\n          align-items: start;\r\n\r\n          .forgetpass {\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0;\r\n            font-size: 0.7rem;\r\n            margin-top: -10px;\r\n            &:hover {\r\n              color: blue !important;\r\n            }\r\n\r\n            a {\r\n              color: #333 !important;\r\n              text-decoration: none !important;\r\n            }\r\n          }\r\n\r\n          .buttons {\r\n            display: grid;\r\n            grid-auto-flow: row;\r\n            grid-gap: 0.5em;\r\n            .submit-btn {\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      .footer {\r\n        margin-top: 1em;\r\n        border-top: 1px solid black;\r\n        display: grid;\r\n        justify-items: center;\r\n        align-items: center;\r\n        grid-gap: 0.4em;\r\n        .title {\r\n          justify-self: center;\r\n          background-color: #ecfffb;\r\n          margin-top: -10px;\r\n          font-size: 0.7em;\r\n          text-align: center;\r\n          padding: 0 0.5em;\r\n        }\r\n\r\n        .tuo_logo {\r\n          height: 35px;\r\n          width: 35px;\r\n        }\r\n\r\n        .tuo-name {\r\n          font-weight: 500;\r\n          font-size: 0.8em;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledLoadingButton = styled.div`\r\n  display: grid;\r\n  grid-template-areas: \"combine\";\r\n  .btn {\r\n    grid-area: combine;\r\n  }\r\n  .loader {\r\n    font-weight: 900;\r\n    font-size: 2em;\r\n    z-index: 10;\r\n    grid-area: combine;\r\n    justify-self: center;\r\n    align-self: center;\r\n  }\r\n`;\r\n","import { Button, CircularProgress } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { StyledLoadingButton } from \"./styles\";\r\n\r\ninterface IProps {\r\n  // className :\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  size?: \"small\" | \"medium\" | \"large\" | undefined;\r\n  variant: \"text\" | \"outlined\" | \"contained\" | undefined;\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  handleClick?: () => void;\r\n  fullWidth: boolean;\r\n  className?: string | undefined;\r\n  style?: any;\r\n}\r\n\r\nconst LoadingButton: React.FC<IProps> = ({\r\n  type,\r\n  color,\r\n  disabled,\r\n  loading,\r\n  variant,\r\n  handleClick,\r\n  size,\r\n  fullWidth,\r\n  className,\r\n  children,\r\n  style,\r\n}) => {\r\n  return (\r\n    <StyledLoadingButton>\r\n      <Button\r\n        className={`btn ${className}`}\r\n        type={type}\r\n        color={color}\r\n        variant={variant}\r\n        size={size}\r\n        disabled={disabled || loading}\r\n        onClick={handleClick}\r\n        fullWidth={fullWidth}\r\n        style={style}\r\n        disableElevation\r\n      >\r\n        {children}\r\n      </Button>\r\n      {loading && <CircularProgress size={22} className=\"loader\" />}\r\n    </StyledLoadingButton>\r\n  );\r\n};\r\n\r\nexport default LoadingButton;\r\n","export const APP_NAME: any = process.env.REACT_APP_NAME;\r\nexport const API_BASE_URL =\r\n  process.env.NODE_ENV === \"development\"\r\n    ? \"http://localhost:4040/\"\r\n    : process.env.REACT_APP_API_BASE_URL;\r\n\r\nexport const getAccessToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).access_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const getRefreshToken = (): string | null => {\r\n  let token: string | null = null;\r\n  try {\r\n    const temp_storage: string | null = localStorage.getItem(APP_NAME);\r\n    if (temp_storage) {\r\n      token = JSON.parse(temp_storage).refresh_token;\r\n    }\r\n  } catch (error) {}\r\n\r\n  return token;\r\n};\r\n\r\nexport const setTokens = (acess_token: string, refresh_token: string) => {\r\n  localStorage.setItem(\r\n    APP_NAME,\r\n    JSON.stringify({\r\n      access_token: acess_token,\r\n      refresh_token: refresh_token,\r\n    })\r\n  );\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(APP_NAME);\r\n};\r\n","var map = {\n\t\"./background.jpg\": 406,\n\t\"./background2.jpg\": 407,\n\t\"./mohammad-shahhosseini-cPWUODAvXjk-unsplash.jpg\": 408,\n\t\"./neonbrand-zFSo6bnZJTw-unsplash.jpg\": 409,\n\t\"./step1.jpg\": 410,\n\t\"./step2.jpg\": 411\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 405;","module.exports = __webpack_public_path__ + \"static/media/background.501f9372.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background2.0f9bf32d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mohammad-shahhosseini-cPWUODAvXjk-unsplash.3c52127e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/neonbrand-zFSo6bnZJTw-unsplash.4da4d28d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step1.e15e7552.jpg\";","module.exports = __webpack_public_path__ + \"static/media/step2.55d5f98f.jpg\";","export const DbTutorPositions = [\r\n  \"Tutor\",\r\n  \"Mentor\",\r\n  \"Professor\",\r\n  \"Teacher\",\r\n  \"Others\",\r\n];\r\n\r\nexport const DbCourseDurations = [\r\n  {\r\n    id: 30,\r\n    label: `30m`,\r\n  },\r\n  {\r\n    id: 60,\r\n    label: `60m | 1hr`,\r\n  },\r\n  {\r\n    id: 90,\r\n    label: `90m | 1hr & 30min`,\r\n  },\r\n  {\r\n    id: 120,\r\n    label: `120m | 2hrs`,\r\n  },\r\n  {\r\n    id: 150,\r\n    label: `150m | 2hrs & 30min`,\r\n  },\r\n  {\r\n    id: 180,\r\n    label: `180m | 3hrs`,\r\n  },\r\n  {\r\n    id: 210,\r\n    label: `210m | 3hrs 30min`,\r\n  },\r\n  {\r\n    id: 240,\r\n    label: `240m | 4hrs`,\r\n  },\r\n];\r\n\r\nexport const DbClassTypes = [\r\n  {\r\n    id: \"o\",\r\n    label: \"online\",\r\n  },\r\n  {\r\n    id: \"f\",\r\n    label: `face to face`,\r\n  },\r\n];\r\n\r\nexport const DbGradeLevels = [\r\n  {\r\n    id: 7,\r\n    label: \"Grade 7\",\r\n  },\r\n  {\r\n    id: 8,\r\n    label: \"Grade 8\",\r\n  },\r\n  {\r\n    id: 9,\r\n    label: \"Grade 9\",\r\n  },\r\n  {\r\n    id: 10,\r\n    label: \"Grade 10\",\r\n  },\r\n  {\r\n    id: 11,\r\n    label: \"Grade 11\",\r\n  },\r\n  {\r\n    id: 12,\r\n    label: \"Grade 12\",\r\n  },\r\n];\r\n\r\n// export const DbClassTypes = [\r\n//   {\r\n//     id: \"o\",\r\n//     label: \"online\",\r\n//   },\r\n//   {\r\n//     id: \"f\",\r\n//     label: `face to face`,\r\n//   },\r\n// ];\r\n\r\nexport const DbAdminPositions = [\"IT\", \"QMO\", \"HR\", \"Others\"];\r\n","import { Avatar, Badge, IconButton, Tooltip } from \"@material-ui/core\";\r\nimport ImageSearchIcon from \"@material-ui/icons/ImageSearch\";\r\nimport React, { memo, useCallback, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IPhotoField {\r\n  selectedFile: File | null;\r\n  handleChange: (e: File | null) => any;\r\n  name?: string;\r\n  label?: string;\r\n  height?: number;\r\n  width?: number;\r\n  variant?: any;\r\n}\r\n\r\nconst PhotoField: React.FC<IPhotoField> = memo(\r\n  ({ selectedFile, handleChange, name, label, height, width, variant }) => {\r\n    const [preview, setPreview] = useState<any>(null);\r\n\r\n    const onSelectFile = useCallback(\r\n      async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (!e.target.files || e.target.files.length === 0) {\r\n          handleChange(undefined);\r\n          return;\r\n        }\r\n\r\n        if (e.target.files[0]) {\r\n          handleChange(e.target.files[0]);\r\n        }\r\n      },\r\n      [handleChange]\r\n    );\r\n\r\n    useEffect(() => {\r\n      if (!selectedFile) {\r\n        setPreview(null);\r\n        return;\r\n      }\r\n\r\n      const objectUrl = URL.createObjectURL(selectedFile);\r\n      setPreview(objectUrl);\r\n\r\n      return () => URL.revokeObjectURL(objectUrl);\r\n    }, [selectedFile]);\r\n\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            fontSize: \".78em\",\r\n            fontWeight: 400,\r\n            color: \"rgba(0,0,0,.7)\",\r\n            marginBottom: \"1em\",\r\n          }}\r\n        >\r\n          {label}\r\n        </div>\r\n\r\n        <StyledImageField\r\n          overlap=\"circle\"\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"right\",\r\n          }}\r\n          badgeContent={\r\n            <Tooltip title=\"Select a photo\">\r\n              <div className=\"btn-search-photo\">\r\n                <IconButton\r\n                  className=\"btn\"\r\n                  style={{\r\n                    backgroundColor: \"#e3f2fd\",\r\n                    border: `.01em solid #90caf9`,\r\n                  }}\r\n                  htmlFor={name}\r\n                  component=\"label\"\r\n                >\r\n                  <ImageSearchIcon color=\"primary\" fontSize=\"small\" />\r\n                </IconButton>\r\n                <input\r\n                  id={name}\r\n                  className=\"fileInput\"\r\n                  onChange={onSelectFile}\r\n                  type=\"file\"\r\n                  accept=\"image/x-png,image/gif,image/jpeg\"\r\n                />\r\n              </div>\r\n            </Tooltip>\r\n          }\r\n        >\r\n          <Avatar\r\n            src={preview}\r\n            style={{\r\n              height: height,\r\n              width: width,\r\n              backgroundColor: \"#fff\",\r\n              boxShadow: `0 4px 6px -1px rgba(0, 0, 0, 0.1),\r\n              0 2px 4px -1px rgba(0, 0, 0, 0.06)`,\r\n              border: \".01em solid rgba(0,0,0,.1)\",\r\n            }}\r\n            variant={variant ? variant : \"circle\"}\r\n          >\r\n            {!preview && (\r\n              <div\r\n                style={{\r\n                  display: \"grid\",\r\n                  justifyContent: \"center\",\r\n                  textAlign: \"center\",\r\n                  color: `rgba(0,0,0,.6)`,\r\n                  fontWeight: 600,\r\n                  fontSize: `.87em`,\r\n                }}\r\n              >\r\n                Upload an image\r\n              </div>\r\n            )}\r\n          </Avatar>\r\n        </StyledImageField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default PhotoField;\r\n\r\nexport const StyledImageField = styled(Badge)`\r\n  .btn-search-photo {\r\n    display: grid;\r\n    grid-template-areas: \"content\";\r\n    .btn {\r\n      grid-area: content;\r\n    }\r\n    .fileInput {\r\n      grid-area: content;\r\n      display: none;\r\n      opacity: 0;\r\n    }\r\n  }\r\n`;\r\n","export const fileToBase64 = (blob: Blob): Promise<string | null> =>\r\n  new Promise((resolve, reject) => {\r\n    if (!blob) {\r\n      return resolve(null);\r\n    }\r\n    const reader: FileReader = new FileReader();\r\n    reader.readAsBinaryString(blob);\r\n\r\n    reader.onload = () => {\r\n      if (typeof reader.result === \"string\") {\r\n        return resolve(btoa(reader.result));\r\n      }\r\n    };\r\n\r\n    reader.onerror = (error: any) => {\r\n      return resolve(null);\r\n    };\r\n  });\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\ninterface IPageLoader {}\r\n\r\nexport const PageLoader: FC<IPageLoader> = memo(() => {\r\n  const theme = useTheme();\r\n\r\n  const { show, loading_message } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_loading\r\n  );\r\n\r\n  return (\r\n    <Backdrop\r\n      style={{\r\n        zIndex: theme.zIndex.modal + 100,\r\n        color: \"#fff\",\r\n        display: \"grid\",\r\n        gridAutoFlow: \"column\",\r\n        gridGap: \"1em\",\r\n      }}\r\n      open={show}\r\n    >\r\n      <CircularProgress color=\"inherit\" />\r\n      <Typography variant=\"subtitle1\">{loading_message}</Typography>\r\n    </Backdrop>\r\n  );\r\n});\r\n\r\nexport default PageLoader;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport React, { memo, useCallback, FC } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { resetGeneralPrompt } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport WarningRoundedIcon from \"@material-ui/icons/WarningRounded\";\r\ninterface IPagePrompt {}\r\n\r\nexport const PagePrompt: FC<IPagePrompt> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const {\r\n    open,\r\n    custom_title,\r\n    custom_subtitle,\r\n    continue_callback,\r\n    close_callback,\r\n  } = useSelector((state: RootStore) => state.PageReducer.page_prompt);\r\n\r\n  const handleContinue = useCallback(() => {\r\n    if (continue_callback) {\r\n      dispatch(resetGeneralPrompt());\r\n\r\n      if (typeof continue_callback === \"function\") {\r\n        continue_callback();\r\n      }\r\n    }\r\n  }, [continue_callback, dispatch]);\r\n  const handleCancel = useCallback(() => {\r\n    dispatch(resetGeneralPrompt());\r\n    if (close_callback) {\r\n      if (typeof close_callback === \"function\") {\r\n        close_callback();\r\n      }\r\n    }\r\n  }, [close_callback, dispatch]);\r\n\r\n  return (\r\n    <StyledPagePrompt\r\n      open={open}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      onEscapeKeyDown={() => {\r\n        handleCancel();\r\n      }}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"-50px\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              height: \"3.5em\",\r\n              width: \"3.5em\",\r\n              backgroundColor: \"#ff9800\",\r\n            }}\r\n          >\r\n            <WarningRoundedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className=\"dialog-content\">\r\n        <Typography variant=\"h6\" paragraph={false}>\r\n          {custom_title\r\n            ? custom_title\r\n            : \"Are you sure that you want to continue?\"}\r\n        </Typography>\r\n        <Typography>\r\n          {custom_subtitle\r\n            ? custom_subtitle\r\n            : \"If you proceed, you won't be able to revert this process.\"}\r\n        </Typography>\r\n      </DialogContent>\r\n      <DialogActions className=\"dialog-actions\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          startIcon={<CheckRoundedIcon fontSize=\"small\" />}\r\n          disableElevation\r\n          onClick={handleContinue}\r\n        >\r\n          Yes, Continue\r\n        </Button>\r\n        <Button\r\n          color=\"secondary\"\r\n          variant=\"contained\"\r\n          startIcon={<CloseRoundedIcon fontSize=\"small\" />}\r\n          onClick={handleCancel}\r\n          disableElevation\r\n        >\r\n          No, Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </StyledPagePrompt>\r\n  );\r\n});\r\n\r\nexport default PagePrompt;\r\n\r\nconst StyledPagePrompt = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n    .big-text {\r\n      color: red;\r\n      font-weight: 600;\r\n      font-size: 1.1em;\r\n    }\r\n    .small-text {\r\n      font-size: 0.87em;\r\n    }\r\n  }\r\n`;\r\n","import { useSnackbar } from \"notistack\";\r\nimport { memo, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst PageSnackbar = memo(() => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const { message, options } = useSelector(\r\n    (state: RootStore) => state.PageReducer.page_snackbar\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const triggerSnackbar = () => {\r\n      if (message) {\r\n        if (options) {\r\n          enqueueSnackbar(message, { ...options });\r\n        } else {\r\n          enqueueSnackbar(message);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && triggerSnackbar();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [enqueueSnackbar, message, options]);\r\n\r\n  return null;\r\n});\r\n\r\nexport default PageSnackbar;\r\n","import { Avatar, useTheme } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\ninterface ICustomAvatar {\r\n  src: string | null;\r\n  errorMessage: string;\r\n  className?: string;\r\n  variant?: \"circle\" | \"rounded\" | \"square\";\r\n  widthSpacing?: number;\r\n  heightSpacing?: number;\r\n  style?: any;\r\n}\r\n\r\nconst CustomAvatar: React.FC<ICustomAvatar> = memo(\r\n  ({\r\n    src,\r\n    errorMessage,\r\n    className,\r\n    widthSpacing,\r\n    heightSpacing,\r\n    variant,\r\n    style,\r\n  }) => {\r\n    const theme = useTheme();\r\n    return src === \"\" || src === \"null\" || src === null || !src ? (\r\n      <Avatar\r\n        className={className}\r\n        style={{\r\n          height: theme.spacing(heightSpacing ? heightSpacing : 5),\r\n          width: theme.spacing(widthSpacing ? widthSpacing : 5),\r\n          backgroundColor: `#1565c0`,\r\n          color: `#fff3e0`,\r\n          ...style,\r\n        }}\r\n        variant={variant}\r\n      >\r\n        <div\r\n          style={{\r\n            textAlign: \"center\",\r\n            textTransform: \"uppercase\",\r\n            fontSize: `.7em`,\r\n            fontWeight: 900,\r\n            letterSpacing: \".3pt\",\r\n          }}\r\n        >\r\n          {errorMessage}\r\n        </div>\r\n      </Avatar>\r\n    ) : (\r\n      <Avatar\r\n        className={className}\r\n        style={{\r\n          height: theme.spacing(heightSpacing ? heightSpacing : 5),\r\n          width: theme.spacing(widthSpacing ? widthSpacing : 5),\r\n          ...style,\r\n        }}\r\n        src={`data:image/jpg;base64,${src}`}\r\n        variant={variant}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default CustomAvatar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledActivity = styled.div`\r\n  display: grid;\r\n  justify-content: start;\r\n  grid-template-areas: \"img act\" \"img dt\";\r\n  align-items: start;\r\n  align-content: start;\r\n  justify-items: start;\r\n  grid-auto-columns: auto 1fr;\r\n  font-size: 0.7em;\r\n  padding: 1em;\r\n  grid-gap: 0.8em;\r\n  .img {\r\n    grid-area: img;\r\n    align-self: center;\r\n    justify-self: center;\r\n  }\r\n  .activity {\r\n    grid-area: act;\r\n  }\r\n  .datetime {\r\n    grid-area: dt;\r\n    opacity: 0.9;\r\n    font-size: 0.9em;\r\n  }\r\n`;\r\n","import { LinearProgress } from \"@material-ui/core\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface ILinearLoadingProgress {\r\n  show: boolean;\r\n}\r\n\r\nconst LinearLoadingProgress: React.FC<ILinearLoadingProgress> = memo(\r\n  ({ show }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          opacity: show ? 1 : 0,\r\n        }}\r\n      >\r\n        <LinearProgress />\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinearLoadingProgress;\r\n","import { Drawer, Grid, IconButton } from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect } from \"react\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport { StyledActivity } from \"./styles\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { toggleActivitySidebar } from \"../../../Services/Actions/PageActions\";\r\nimport UserActions from \"../../../Services/Actions/UserActions\";\r\nimport moment from \"moment\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\n\r\ninterface IAdminActivityView {}\r\n\r\nexport const AdminActivityView: FC<IAdminActivityView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const is_open = useSelector(\r\n    (store: RootStore) => store.PageReducer.toggle_activity_sidebar\r\n  );\r\n\r\n  const all_logs = useSelector(\r\n    (store: RootStore) => store.UserReducer.all_logs\r\n  );\r\n  const fetch_all_logs = useSelector(\r\n    (store: RootStore) => store.UserReducer.fetch_all_logs\r\n  );\r\n\r\n  useEffect(() => {\r\n    is_open && dispatch(UserActions.getAllLogs());\r\n  }, [dispatch, is_open]);\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        anchor=\"right\"\r\n        PaperProps={{\r\n          style: {\r\n            minWidth: 300,\r\n            maxWidth: 300,\r\n            padding: `.5em`,\r\n            paddingTop: `0`,\r\n          },\r\n        }}\r\n        open={is_open}\r\n        onClose={() => dispatch(toggleActivitySidebar(false))}\r\n      >\r\n        <div\r\n          style={{\r\n            display: `grid`,\r\n            gridAutoFlow: `column`,\r\n            gridAutoColumns: `1fr auto`,\r\n            gridGap: `.5em`,\r\n            padding: `0 .3em`,\r\n            alignContent: `center`,\r\n            alignItems: `center`,\r\n            height: 60,\r\n          }}\r\n        >\r\n          <div className=\"container-title\">Latest Activities</div>\r\n          <IconButton\r\n            size=\"small\"\r\n            style={{\r\n              backgroundColor: `#ffebee`,\r\n              color: `#b71c1c\r\n                `,\r\n            }}\r\n            onClick={() => dispatch(toggleActivitySidebar(false))}\r\n          >\r\n            <CloseRoundedIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <LinearLoadingProgress show={fetch_all_logs} />\r\n\r\n        <Grid\r\n          container\r\n          spacing={2}\r\n          style={{\r\n            height: `90%`,\r\n            maxHeight: `calc(100%-60px)`,\r\n            overflowY: `auto`,\r\n          }}\r\n          alignContent=\"flex-start\"\r\n          alignItems=\"flex-start\"\r\n        >\r\n          {all_logs?.map((l, i) => (\r\n            <Grid item xs={12} key={i}>\r\n              <StyledActivity>\r\n                <CustomAvatar\r\n                  heightSpacing={4}\r\n                  widthSpacing={4}\r\n                  className=\"img\"\r\n                  src={l?.user?.picture}\r\n                  errorMessage={\r\n                    l?.user?.fullname ? l?.user?.fullname?.charAt(0) : \"U\"\r\n                  }\r\n                />\r\n                <div className=\"activity\">\r\n                  <b>{l?.user?.fullname}</b> {l?.activity}\r\n                </div>\r\n                <div className=\"datetime\">\r\n                  {moment(l?.encoded_at).fromNow()}\r\n                </div>\r\n              </StyledActivity>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Drawer>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default AdminActivityView;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useDebounce = (value: string, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value ? value : \"\");\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { useField } from \"formik\";\r\nimport React, { useEffect, useState, memo, FC } from \"react\";\r\nimport useDebounce from \"../../Hooks/UseDebounce\";\r\nimport { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\n\r\ninterface IFormikAutocomplete {\r\n  label?: string;\r\n  optKeyId: string;\r\n  optKeyLabel: string;\r\n  inputFieldName: string;\r\n  selectFieldName: string;\r\n  endPoint: string;\r\n  className?: string;\r\n  rows?: string;\r\n  multiline?: string;\r\n  variant?: any;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  size?: \"small\" | \"medium\";\r\n  onSelectChange?: () => void;\r\n  other_payload?: any;\r\n}\r\n\r\nconst FormikAutocomplete: FC<IFormikAutocomplete> = memo(\r\n  ({\r\n    label,\r\n    optKeyId,\r\n    optKeyLabel,\r\n    inputFieldName,\r\n    selectFieldName,\r\n    endPoint,\r\n    className,\r\n    rows,\r\n    multiline,\r\n    variant,\r\n    required,\r\n    placeholder,\r\n    size,\r\n    other_payload,\r\n  }) => {\r\n    const [options, setOptions] = useState([]);\r\n    const [inputField, inputMeta, inputArgs] = useField({\r\n      name: inputFieldName,\r\n    });\r\n    const errorText =\r\n      inputMeta.error && inputMeta.touched ? inputMeta.error : \"\";\r\n    const [loading, setLoading] = useState(false);\r\n    const [selectField, selectMeta, selectArgs] = useField({\r\n      name: selectFieldName,\r\n    });\r\n\r\n    const debouncedSearchTerm = useDebounce(\r\n      selectField.value ? selectField.value : \"\",\r\n      500\r\n    );\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        setLoading(true);\r\n        setOptions([]);\r\n\r\n        let payload: any = other_payload ? other_payload : {};\r\n\r\n        payload = {\r\n          ...payload,\r\n          value: selectField.value ? selectField.value : \"\",\r\n        };\r\n\r\n        const response = await PostFetch(endPoint, payload);\r\n        setLoading(false);\r\n        if (response.success) {\r\n          setOptions(response.data);\r\n        }\r\n      }\r\n\r\n      if (\r\n        typeof debouncedSearchTerm === \"string\" &&\r\n        debouncedSearchTerm !== null\r\n      ) {\r\n        fetchData();\r\n      } else {\r\n        setOptions([]);\r\n      }\r\n    }, [debouncedSearchTerm]);\r\n\r\n    useEffect(() => {\r\n      selectArgs.setValue(selectField.value ? selectField.value : \"\");\r\n      return () => {};\r\n    }, []);\r\n\r\n    return (\r\n      <Autocomplete\r\n        // value={inputField?.value[optKeyId]}\r\n        options={options}\r\n        loading={loading}\r\n        filterSelectedOptions={true}\r\n        loadingText=\"Loading options\"\r\n        getOptionLabel={(option) => option[optKeyLabel]}\r\n        renderOption={(option, state) => {\r\n          if (option.picture) {\r\n            return (\r\n              <div className=\"autocomplete-picture\">\r\n                <CustomAvatar\r\n                  src={option.picture}\r\n                  errorMessage={option.label.charAt(0)}\r\n                  className=\"\"\r\n                />\r\n                {option.label}\r\n              </div>\r\n            );\r\n          } else {\r\n            return <option>{option.label}</option>;\r\n          }\r\n        }}\r\n        onChange={(event, newValue) => {\r\n          if (newValue && typeof newValue !== \"undefined\") {\r\n            if (typeof newValue[optKeyId] === \"number\") {\r\n              inputArgs.setValue(newValue[optKeyId].toString());\r\n            } else {\r\n              inputArgs.setValue(newValue[optKeyId]);\r\n            }\r\n          } else {\r\n            inputArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        inputValue={selectField?.value ? selectField?.value : \"\"}\r\n        onInputChange={(event, newInputValue) => {\r\n          if (newInputValue) {\r\n            selectArgs.setValue(newInputValue);\r\n          } else {\r\n            selectArgs.setValue(\"\");\r\n          }\r\n        }}\r\n        filterOptions={(options, state) => options}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            {...inputField}\r\n            {...size}\r\n            size={size}\r\n            helperText={errorText}\r\n            error={!!errorText}\r\n            label={label}\r\n            variant={variant}\r\n            // InputProps={{\r\n            //   ...inputField,\r\n            //   value: inputField.value ? inputField.value : \"\",\r\n            // }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            rows={rows}\r\n            multiline={multiline ? true : false}\r\n            required={required ? true : false}\r\n            placeholder={placeholder}\r\n            fullWidth\r\n          />\r\n        )}\r\n        className={className}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikAutocomplete;\r\n","import { MenuItem, TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\ninterface IOptions {\r\n  id: string | number;\r\n  label: string | number;\r\n}\r\n\r\ninterface IFormikSelect {\r\n  data: Array<IOptions>;\r\n  label: string;\r\n  name: string;\r\n  hasEmptyValue?: boolean;\r\n}\r\n\r\nexport const FormikSelect: React.FC<IFormikSelect & TextFieldProps> = ({\r\n  data,\r\n  name,\r\n  hasEmptyValue,\r\n  ...props\r\n}) => {\r\n  const [field, meta] = useField({ name });\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n  return (\r\n    <TextField\r\n      id=\"outlined-select-currency\"\r\n      error={!!errorText}\r\n      helperText={errorText}\r\n      {...props}\r\n      {...field}\r\n      label={props.label}\r\n      variant=\"outlined\"\r\n      select\r\n    >\r\n      {hasEmptyValue === true && (\r\n        <MenuItem value={\"\"}>\r\n          <small>\r\n            <em>None</em>\r\n          </small>\r\n        </MenuItem>\r\n      )}\r\n\r\n      {data.map((val, ind) => (\r\n        <MenuItem key={ind} value={val.id}>\r\n          {val.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n};\r\n\r\nexport default FormikSelect;\r\n","import * as Moment from \"moment\";\r\nimport { extendMoment } from \"moment-range\";\r\nimport { TutorFutureSessionModel } from \"../Services/Models/ClassSessionModel\";\r\n\r\nconst moment = extendMoment(Moment);\r\n\r\nexport interface IScheduleGeneratorPayload {\r\n  start_date: Date | null;\r\n  end_date: Date | null;\r\n  start_time: Date | null;\r\n  end_time: Date | null;\r\n  freq: \"daily\" | \"weekly\" | \"monthly\" | \"yearly\";\r\n  interval: number;\r\n  range_type: \"d\" | \"s\";\r\n  tilldate: Date | null;\r\n  tillsession: number;\r\n  daysofweek: Array<number>;\r\n}\r\n\r\nexport interface IGeneratedDates {\r\n  included?: boolean;\r\n  start_date: Date;\r\n  end_date?: Date;\r\n  start_time: Date | null;\r\n  end_time: Date | null;\r\n}\r\n\r\nexport const genDailyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genWeeklyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    daysofweek,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      let found: boolean = false;\r\n      for (let i: number = 0; i < daysofweek.length; i++) {\r\n        const dayOfWeekStartDate: number = moment(tempStartDate).day();\r\n        if (dayOfWeekStartDate === daysofweek[i]) {\r\n          found = true;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        dates.push({\r\n          included: true,\r\n          start_date: tempStartDate,\r\n          end_date: tempEndDate,\r\n          start_time: start_time,\r\n          end_time: end_time,\r\n        });\r\n      }\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"days\")\r\n          .toDate();\r\n      }\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      let found: boolean = false;\r\n\r\n      for (let i: number = 0; i < daysofweek.length; i++) {\r\n        const dayOfWeekStartDate: number = moment(tempStartDate).day();\r\n        if (dayOfWeekStartDate === daysofweek[i]) {\r\n          found = true;\r\n        }\r\n      }\r\n\r\n      if (found) {\r\n        dates.push({\r\n          included: true,\r\n          start_date: tempStartDate,\r\n          end_date: tempEndDate,\r\n          start_time: start_time,\r\n          end_time: end_time,\r\n        });\r\n        counter++;\r\n      }\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"days\")\r\n        .toDate();\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"days\")\r\n          .toDate();\r\n      }\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genMonthlyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n\r\n      if (tempEndDate instanceof Date) {\r\n        tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n          .add(interval, \"months\")\r\n          .toDate();\r\n      }\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"months\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\nexport const genYearlyDates = (\r\n  schedulePayload: IScheduleGeneratorPayload\r\n): Array<IGeneratedDates> => {\r\n  const {\r\n    start_date,\r\n    interval,\r\n    tilldate,\r\n    tillsession,\r\n    end_date,\r\n    start_time,\r\n    end_time,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<IGeneratedDates> = [];\r\n\r\n  if (\r\n    start_date === null ||\r\n    end_date === null ||\r\n    start_time === null ||\r\n    end_time === null\r\n  ) {\r\n    return [];\r\n  }\r\n\r\n  let tempStartDate = start_date;\r\n  let tempEndDate = end_date;\r\n\r\n  if (schedulePayload.range_type === \"d\") {\r\n    if (tilldate === null) {\r\n      return [];\r\n    }\r\n\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n    } while (\r\n      moment(moment(tempStartDate).format(\"LL\")).isSameOrBefore(\r\n        moment(moment(tilldate).format(\"LL\"))\r\n      )\r\n    );\r\n  } else if (schedulePayload.range_type === \"s\") {\r\n    if (tillsession === null) {\r\n      return [];\r\n    }\r\n    do {\r\n      dates.push({\r\n        included: true,\r\n        start_date: tempStartDate,\r\n        end_date: tempEndDate,\r\n        start_time: start_time,\r\n        end_time: end_time,\r\n      });\r\n      tempStartDate = moment(tempStartDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      tempEndDate = moment(tempEndDate, \"DD/MM/YYYY\")\r\n        .add(interval, \"years\")\r\n        .toDate();\r\n      counter++;\r\n    } while (counter < tillsession);\r\n  }\r\n\r\n  return dates;\r\n};\r\n\r\ninterface GenerateDailyWeekDaysDatesInterface {\r\n  start_date: Date;\r\n  start_time: string;\r\n  end_time: string;\r\n  session_count: number;\r\n  blocked_dates: Array<TutorFutureSessionModel>;\r\n}\r\n\r\ninterface DailyWeekDaysDatesResultInterface {\r\n  include: boolean;\r\n  session_date: Date;\r\n}\r\n\r\nexport const generateDailyWeekDaysDates = (\r\n  schedulePayload: GenerateDailyWeekDaysDatesInterface\r\n): Array<Date> => {\r\n  let {\r\n    start_date,\r\n    session_count,\r\n    start_time,\r\n    end_time,\r\n    blocked_dates,\r\n  } = schedulePayload;\r\n\r\n  let counter: number = 0;\r\n  const dates: Array<Date> = [];\r\n\r\n  if (start_date === null) {\r\n    return [];\r\n  }\r\n\r\n  let temp_start_date = start_date;\r\n\r\n  if (session_count === null || session_count <= 0 || session_count > 10) {\r\n    return [];\r\n  }\r\n\r\n  do {\r\n    if (\r\n      moment(temp_start_date).isoWeekday() !== 6 &&\r\n      moment(temp_start_date).isoWeekday() !== 7\r\n    ) {\r\n      let conflict = false;\r\n\r\n      for (const bd of blocked_dates) {\r\n        const new_date_range = moment.range(\r\n          moment(\r\n            moment(temp_start_date).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              moment(start_time, \"hh:mm A\").format(\"HH:mm:ss\")\r\n          ),\r\n          moment(\r\n            moment(temp_start_date).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              moment(end_time, \"hh:mm A\").format(\"HH:mm:ss\")\r\n          )\r\n        );\r\n\r\n        const blocked_date_range = moment.range(\r\n          moment(\r\n            moment(new Date(bd.start_date)).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              bd.start_time\r\n          ).add(1, \"minutes\"),\r\n          moment(\r\n            moment(new Date(bd.start_date)).format(\"MM/DD/YYYY\") +\r\n              \" \" +\r\n              bd.end_time\r\n          ).subtract(1, \"minutes\")\r\n        );\r\n\r\n        if (new_date_range.overlaps(blocked_date_range)) {\r\n          // console.log(`conflict`);\r\n          // session_count++;\r\n          conflict = true;\r\n          break;\r\n        }\r\n\r\n        console.log(conflict, new_date_range, blocked_date_range);\r\n      }\r\n\r\n      if (!conflict) {\r\n        dates.push(moment(temp_start_date).toDate());\r\n        counter++;\r\n      }\r\n    }\r\n\r\n    temp_start_date = moment(new Date(temp_start_date), \"DD/MM/YYYY\")\r\n      .add(1, \"days\")\r\n      .toDate();\r\n  } while (counter < session_count);\r\n\r\n  console.log(`dates`, dates);\r\n\r\n  return dates;\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { CourseModel } from \"../Models/CourseModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/course/`;\r\n\r\nconst getCourseDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getCourseDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addCourseApi = async (payload: CourseModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addCourse\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleCourseApi = async (\r\n  course_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleCourse\", {\r\n    course_pk: course_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getCourseDurationApi = async (\r\n  course_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getCourseDuration\", {\r\n    course_pk: course_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst searchCourseApi = async (search: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchCourse\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst updateCourse = async (payload: CourseModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateCourse\", payload);\r\n  return response;\r\n};\r\n\r\nconst toggleCourseStatus = async (\r\n  course_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"toggleCourseStatus\", {\r\n    course_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst updateCourseImage = async (\r\n  payload: CourseModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateCourseImage\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTotalCourses = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTotalCourses\", {});\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getCourseDataTableApi,\r\n  addCourseApi,\r\n  getSingleCourseApi,\r\n  searchCourseApi,\r\n  getCourseDurationApi,\r\n  updateCourse,\r\n  toggleCourseStatus,\r\n  updateCourseImage,\r\n  getTotalCourses,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { FilterEventModel } from \"../Models/CaledarModels\";\r\nimport {\r\n  ClassSesMsgModel,\r\n  ClassSessionModel,\r\n} from \"../Models/ClassSessionModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classsession/`;\r\n\r\nconst getClassSessionsApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getClassSessions\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassSession = async (\r\n  session_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getSingleClassSession\",\r\n    {\r\n      session_pk: session_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst startClassSession = async (\r\n  payload: ClassSessionModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"startClassSession\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst endClassSession = async (\r\n  payload: ClassSessionModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"endClassSession\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst unattendedClassSession = async (\r\n  payload: ClassSessionModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"unattendedClassSession\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorFutureSessionsApi = async (\r\n  tutor_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorFutureSessions\",\r\n    {\r\n      tutor_pk: tutor_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorClassSessionCalendarApi = async (\r\n  payload: FilterEventModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorClassSessionCalendar\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStatsSessionCalendarApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStatsSessionCalendar\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllMessage = async (session_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllMessage\", {\r\n    session_pk: session_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst saveMessage = async (\r\n  payload: ClassSesMsgModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"saveMessage\", payload);\r\n  return response;\r\n};\r\n\r\nconst hideMessage = async (\r\n  payload: ClassSesMsgModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"hideMessage\", payload);\r\n  return response;\r\n};\r\n\r\nconst getTutorSessionCal = async (tutor_pk): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTutorSessionCal\", {\r\n    tutor_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getStudentSessionCal = async (student_pk): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getStudentSessionCal\", {\r\n    student_pk: student_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getLoggedInTutorSessionCalendar = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getLoggedInTutorSessionCalendar\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getLoggedStudentCalendar = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getLoggedStudentCalendar\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getClassSessionsApi,\r\n  getTutorFutureSessionsApi,\r\n  getTutorClassSessionCalendarApi,\r\n  getStatsSessionCalendarApi,\r\n\r\n  getAllMessage,\r\n  saveMessage,\r\n  hideMessage,\r\n  getSingleClassSession,\r\n\r\n  getTutorSessionCal,\r\n  getStudentSessionCal,\r\n  //\r\n  getLoggedInTutorSessionCalendar,\r\n  getLoggedStudentCalendar,\r\n  //\r\n  startClassSession,\r\n  endClassSession,\r\n  unattendedClassSession,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { ClassModel } from \"../Models/ClassModel\";\r\nimport { ClassRatingModel } from \"../Models/ClassRatingModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/class/`;\r\n\r\nconst getClassDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getClassDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentEnrolledClassesApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentEnrolledClasses\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentUnenrolledClassTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentUnenrolledClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentAvailableClassTable = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentAvailableClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentOngoingClassTable = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentOngoingClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getStudentEndedClassTable = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentEndedClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTutorClassTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorClassTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addClassApi = async (payload: ClassModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateClassApi = async (\r\n  payload: ClassModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst approveClass = async (payload: ClassModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"approveClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst endClass = async (payload: ClassModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"endClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst declineClass = async (payload: ClassModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"declineClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleClassApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleClass\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getAllTutorClasses = async (tutor_pk): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllTutorClasses\", {\r\n    tutor_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getStudentClassByStudentPk = async (\r\n  student_pk\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getStudentClassByStudentPk\",\r\n    {\r\n      student_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getClassSummaryStats = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getClassSummaryStats\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getOpenClassProgressStats = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getOpenClassProgressStats\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTotalClasses = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTotalClasses\", null);\r\n  return response;\r\n};\r\n\r\nconst getTotalTutorClassStats = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTotalTutorClassStats\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTotalStudentClassStats = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTotalStudentClassStats\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst rateClass = async (\r\n  payload: ClassRatingModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"rateClass\", payload);\r\n  return response;\r\n};\r\n\r\nconst getEndedClassRatingStats = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getEndedClassRatingStats\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getClassRatings = async (class_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getClassRatings\", {\r\n    class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getClassDataTableApi,\r\n  addClassApi,\r\n  updateClassApi,\r\n  getSingleClassApi,\r\n  getTutorClassTableApi,\r\n  //\r\n  approveClass,\r\n  endClass,\r\n  declineClass,\r\n  //\r\n  getStudentEnrolledClassesApi,\r\n  getStudentUnenrolledClassTableApi,\r\n  getAllTutorClasses,\r\n  //\r\n  getStudentClassByStudentPk,\r\n  getClassSummaryStats,\r\n  getOpenClassProgressStats,\r\n  //\r\n  getTotalClasses,\r\n  //\r\n  getTotalTutorClassStats,\r\n  getTotalStudentClassStats,\r\n  //\r\n  getStudentAvailableClassTable,\r\n  getStudentOngoingClassTable,\r\n  getStudentEndedClassTable,\r\n  //\r\n  rateClass,\r\n  getEndedClassRatingStats,\r\n  getClassRatings,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { ClassReducerTypes } from \"../Types/ClassTypes\";\r\nimport { ClassModel } from \"../Models/ClassModel\";\r\nimport ClassApi from \"../Api/ClassApi\";\r\nimport { ClassRatingModel } from \"../Models/ClassRatingModel\";\r\n\r\nexport const setClassDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_class_data_table\",\r\n      fetching_class_data_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getClassDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_class_data_table\",\r\n      fetching_class_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_class_data_table\",\r\n        class_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setTutorClassTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_table\",\r\n      fetch_tutor_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getTutorClassTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_table\",\r\n      fetch_tutor_class_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tutor_class_table\",\r\n        tutor_class_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setStudentUnenrolledClassTable = (\r\n  payload: PaginationModel\r\n) => async (dispatch: Dispatch<ClassReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_unenrolled_class_table\",\r\n      fetch_student_unenrolled_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentUnenrolledClassTableApi(\r\n      payload\r\n    );\r\n\r\n    console.log(`unenroled`, response);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_unenrolled_class_table\",\r\n        student_unenrolled_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_unenrolled_class_table\",\r\n      fetch_student_unenrolled_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setStudentEnrolledClassTable = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_enrolled_class_table\",\r\n      fetch_student_enrolled_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentEnrolledClassesApi();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_enrolled_class_table\",\r\n        student_enrolled_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_enrolled_class_table\",\r\n      fetch_student_enrolled_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedClassAction = (course_pk: number) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_class\",\r\n      fetching_selected_class: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getSingleClassApi(\r\n      course_pk\r\n    );\r\n\r\n    dispatch({\r\n      type: \"fetching_selected_class\",\r\n      fetching_selected_class: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_class\",\r\n        selected_class: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addClassAction = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.addClassApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst declineClass = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.declineClass(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst approveClass = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.approveClass(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst endClass = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.endClass(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst rateClass = (\r\n  payload: ClassRatingModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.rateClass(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateClassAction = (\r\n  payload: ClassModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<ClassReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassApi.updateClassApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getAllTutorClasses = (tutor_pk: number) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_tutor_classes\",\r\n      fetch_all_tutor_classes: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getAllTutorClasses(\r\n      tutor_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_tutor_classes\",\r\n        all_tutor_classes: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_tutor_classes\",\r\n      fetch_all_tutor_classes: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getStudentClassByStudentPk = (student_pk: number) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_class_by_student_pk\",\r\n      fetch_student_class_by_student_pk: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentClassByStudentPk(\r\n      student_pk\r\n    );\r\n\r\n    console.log(`response`, response);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_class_by_student_pk\",\r\n        student_class_by_student_pk: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_student_class_by_student_pk\",\r\n      fetch_student_class_by_student_pk: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getClassSummaryStats = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_class_summary_status\",\r\n      fetch_class_summary_status: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getClassSummaryStats();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"class_summary_status\",\r\n        class_summary_status: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_class_summary_status\",\r\n      fetch_class_summary_status: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getOpenClassProgressStats = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_open_class_progress_stats\",\r\n      fetch_open_class_progress_stats: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getOpenClassProgressStats();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"open_class_progress_stats\",\r\n        open_class_progress_stats: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_open_class_progress_stats\",\r\n      fetch_open_class_progress_stats: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getTotalTutorClassStats = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_total_tutor_class_stats\",\r\n      fetch_total_tutor_class_stats: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getTotalTutorClassStats();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"total_tutor_class_stats\",\r\n        total_tutor_class_stats: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_total_tutor_class_stats\",\r\n      fetch_total_tutor_class_stats: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getTotalStudentClassStats = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_total_student_class_stats\",\r\n      fetch_total_student_class_stats: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getTotalStudentClassStats();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"total_student_class_stats\",\r\n        total_student_class_stats: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_total_student_class_stats\",\r\n      fetch_total_student_class_stats: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\n//student actions\r\n\r\nconst getStudentAvailableClassTable = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_available_class_table\",\r\n      fetch_student_available_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentAvailableClassTable(\r\n      payload\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_available_class_table\",\r\n        student_available_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_available_class_table\",\r\n      fetch_student_available_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getStudentOngoingClassTable = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_ongoing_class_table\",\r\n      fetch_student_ongoing_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentOngoingClassTable(\r\n      payload\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_ongoing_class_table\",\r\n        student_ongoing_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_ongoing_class_table\",\r\n      fetch_student_ongoing_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getStudentEndedClassTable = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_ended_class_table\",\r\n      fetch_student_ended_class_table: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getStudentEndedClassTable(\r\n      payload\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_ended_class_table\",\r\n        student_ended_class_table: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_ended_class_table\",\r\n      fetch_student_ended_class_table: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getEndedClassRatingStats = () => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_ended_class_rating_stats\",\r\n      fetch_ended_class_rating_stats: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getEndedClassRatingStats();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"ended_class_rating_stats\",\r\n        ended_class_rating_stats: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_ended_class_rating_stats\",\r\n      fetch_ended_class_rating_stats: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getClassRatings = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_class_ratings\",\r\n      fetch_class_ratings: true,\r\n    });\r\n    const response: IServerResponse = await ClassApi.getClassRatings(class_pk);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"class_ratings\",\r\n        class_ratings: response.data,\r\n      });\r\n    } else {\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_class_ratings\",\r\n      fetch_class_ratings: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  getAllTutorClasses,\r\n  getStudentClassByStudentPk,\r\n  getClassSummaryStats,\r\n  getOpenClassProgressStats,\r\n  getTotalTutorClassStats,\r\n  getTotalStudentClassStats,\r\n  declineClass,\r\n  approveClass,\r\n  endClass,\r\n  getStudentAvailableClassTable,\r\n  getStudentOngoingClassTable,\r\n  getStudentEndedClassTable,\r\n  rateClass,\r\n  getEndedClassRatingStats,\r\n  getClassRatings,\r\n};\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n} from \"@material-ui/core\";\r\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface InfoDialogInterface {\r\n  open: boolean;\r\n  handleSetOpen: (open: boolean) => void;\r\n  title: any;\r\n  width?: number;\r\n}\r\n\r\nexport const InfoDialog: FC<InfoDialogInterface> = memo(\r\n  ({ open, handleSetOpen, children, title, width }) => {\r\n    return (\r\n      <StyledPagePrompt\r\n        open={open}\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        onEscapeKeyDown={() => {\r\n          handleSetOpen(false);\r\n        }}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            borderRadius: 10,\r\n            width: width ? width : 400,\r\n            overflowY: \"visible\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              justifyItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            {title}\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent className=\"dialog-content\">{children}</DialogContent>\r\n\r\n        <DialogActions className=\"dialog-actions\">\r\n          <Button\r\n            color=\"secondary\"\r\n            variant=\"contained\"\r\n            startIcon={<CloseRoundedIcon fontSize=\"small\" />}\r\n            onClick={() => handleSetOpen(false)}\r\n            disableElevation\r\n          >\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </StyledPagePrompt>\r\n    );\r\n  }\r\n);\r\n\r\nexport default InfoDialog;\r\n\r\nconst StyledPagePrompt = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n    .big-text {\r\n      color: red;\r\n      font-weight: 600;\r\n      font-size: 1.1em;\r\n    }\r\n    .small-text {\r\n      font-size: 0.87em;\r\n    }\r\n  }\r\n`;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  MenuItem,\r\n  TextField,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport DateRangeRoundedIcon from \"@material-ui/icons/DateRangeRounded\";\r\nimport EventNoteRoundedIcon from \"@material-ui/icons/EventNoteRounded\";\r\nimport {\r\n  FieldArray,\r\n  FieldArrayRenderProps,\r\n  Form,\r\n  Formik,\r\n  FormikProps,\r\n  useFormikContext,\r\n} from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikAutocomplete from \"../../../Component/Formik/FormikAutocomplete\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { generateDailyWeekDaysDates } from \"../../../Hooks/UseScheduleGenerator\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n  setSnackbar,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport CourseApi from \"../../../Services/Api/CourseApi\";\r\nimport ClassSessionApi from \"../../../Services/Api/ClassSessionApi\";\r\nimport {\r\n  DbClassTypes,\r\n  DbCourseDurations,\r\n} from \"../../../Storage/LocalDatabase\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  generateTimeSlot,\r\n  TimeSlotInterface,\r\n} from \"../../../Hooks/UseTimeSlot\";\r\nimport { addClassAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport {\r\n  ClassSessionModel,\r\n  TutorFutureSessionModel,\r\n} from \"../../../Services/Models/ClassSessionModel\";\r\nimport InfoDialog from \"../../../Component/InfoDialog\";\r\n\r\ninterface AddClassAdminViewInterface {}\r\n\r\nconst initFormValues: ClassModel = {\r\n  class_desc: \"\",\r\n  course_pk: null,\r\n  course_desc: \"\",\r\n  course_duration: 0,\r\n  room_pk: null,\r\n  room_desc: \"\",\r\n  class_type: \"\",\r\n  tutor_pk: null,\r\n  tutor_name: \"\",\r\n  start_date: null,\r\n  start_time: \"\",\r\n  end_time: \"\",\r\n  session_count: 0,\r\n  class_sessions: [],\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  class_desc: yup.string().required().max(255).label(\"Class Description\"),\r\n  course_pk: yup.string().nullable().required().max(255).label(\"Course\"),\r\n  course_desc: yup.string().required().max(255).label(\"Course\"),\r\n  course_duration: yup.string().required().max(255).label(\"Class Duration\"),\r\n  room_pk: yup.string().nullable().max(255).label(\"Room\"),\r\n  room_desc: yup.string().max(255).label(\"Room\"),\r\n  class_type: yup.string().required().max(255).label(\"Class Type\"),\r\n  tutor_pk: yup.string().nullable().required().max(255).label(\"Tutor\"),\r\n  tutor_name: yup.string().required().max(255).label(\"Tutor\"),\r\n  start_date: yup.date().nullable().required().label(\"Start Date\"),\r\n  start_time: yup.string().required().max(255).label(\"Start Time\"),\r\n  end_time: yup.string().required().max(255).label(\"End Time\"),\r\n  session_count: yup\r\n    .number()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(11)\r\n    .label(\"Number of sessions\"),\r\n  class_sessions: yup.array().min(1, \"Please select at least one date\"),\r\n});\r\n\r\ninterface ReschedRpopsInterface {\r\n  open: boolean;\r\n  index?: number;\r\n}\r\n\r\nconst GetCourseDuration = () => {\r\n  const { values, setFieldValue } = useFormikContext<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchCourseDuration = async () => {\r\n      if (!values.course_pk) {\r\n        setFieldValue(\"course_duration\", \"\");\r\n      } else {\r\n        const response = await CourseApi.getCourseDurationApi(values.course_pk);\r\n        if (response?.data?.est_duration) {\r\n          setFieldValue(\"course_duration\", response?.data?.est_duration);\r\n        } else {\r\n          setFieldValue(\"course_duration\", \"\");\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && fetchCourseDuration();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [setFieldValue, values.course_pk]);\r\n\r\n  return null;\r\n};\r\n\r\nconst GetTutorFutureSessions = ({ handleSetTutorFutureSessions }) => {\r\n  const { values, setFieldValue } = useFormikContext<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetching = async () => {\r\n      if (!values.tutor_pk) {\r\n        handleSetTutorFutureSessions([]);\r\n      } else {\r\n        setFieldValue(\"class_sessions\", []);\r\n        const response = await ClassSessionApi.getTutorFutureSessionsApi(\r\n          values.tutor_pk\r\n        );\r\n        if (response?.data) {\r\n          handleSetTutorFutureSessions(response.data);\r\n        } else {\r\n          handleSetTutorFutureSessions([]);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && fetching();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [handleSetTutorFutureSessions, setFieldValue, values.tutor_pk]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const AddClassAdminView: FC<AddClassAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<ClassModel> | null>(null);\r\n\r\n  const [reschedProps, setReschedProps] = useState<ReschedRpopsInterface>({\r\n    open: false,\r\n    index: null,\r\n  });\r\n\r\n  const [tutorFutureSession, setTutorFutureSessions] = useState<\r\n    Array<TutorFutureSessionModel>\r\n  >([]);\r\n\r\n  const handleSetTutorFutureSessions = useCallback(\r\n    (sessions: Array<TutorFutureSessionModel>) => {\r\n      setTutorFutureSessions(sessions);\r\n    },\r\n    []\r\n  );\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (form_values: ClassModel) => {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addClassAction(form_values, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const [openTutorFutureSched, setOpenTutorFutureSched] = useState(false);\r\n  const handleSetOpenTutorFutureSched = (open: boolean) => {\r\n    setOpenTutorFutureSched(open);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/class\",\r\n            title: \"Class\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Class\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n          <Form\r\n            className=\"clinic-adding-form\"\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 10,\r\n              padding: `1em 2em`,\r\n            }}\r\n          >\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Step 1: Fill-up the class main information\r\n                </div>\r\n              </div>\r\n              <GetCourseDuration />\r\n              <GetTutorFutureSessions\r\n                handleSetTutorFutureSessions={handleSetTutorFutureSessions}\r\n              />\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      name=\"class_desc\"\r\n                      label=\"Class Description\"\r\n                      placeholder=\"Enter the class description\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikSelect\r\n                      data={DbClassTypes}\r\n                      label=\"Class Type\"\r\n                      name=\"class_type\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Room\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"room_pk\"\r\n                      selectFieldName=\"room_desc\"\r\n                      endPoint=\"api/room/searchRoom\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select room\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={12} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Course\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"course_pk\"\r\n                      selectFieldName=\"course_desc\"\r\n                      endPoint=\"api/course/searchCourse\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select course\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikSelect\r\n                      data={DbCourseDurations}\r\n                      label=\"Duration\"\r\n                      name=\"course_duration\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    <FormikInputField\r\n                      name=\"session_count\"\r\n                      label=\"Number of Sessions\"\r\n                      placeholder=\"Enter the number of sessions\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      type=\"number\"\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid xs={10} item>\r\n                    <FormikAutocomplete\r\n                      label=\"Tutor\"\r\n                      optKeyId=\"id\"\r\n                      optKeyLabel=\"label\"\r\n                      inputFieldName=\"tutor_pk\"\r\n                      selectFieldName=\"tutor_name\"\r\n                      endPoint=\"api/tutor/searchTutor\"\r\n                      variant=\"outlined\"\r\n                      placeholder=\"Select room\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2} item>\r\n                    <Tooltip title=\"See this tutor's PRIOR SCHEDULE\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          if (values.tutor_pk > 0) {\r\n                            handleSetOpenTutorFutureSched(true);\r\n                          }\r\n                        }}\r\n                      >\r\n                        <EventNoteRoundedIcon />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    {openTutorFutureSched && (\r\n                      <InfoDialog\r\n                        open={openTutorFutureSched}\r\n                        handleSetOpen={handleSetOpenTutorFutureSched}\r\n                        // title=\r\n                        title={\r\n                          <span>\r\n                            These are the upcoming sessions of tutor{\" \"}\r\n                            <span\r\n                              style={{ fontWeight: 900 }}\r\n                            >{` ${values.tutor_name}`}</span>\r\n                          </span>\r\n                        }\r\n                        width={600}\r\n                      >\r\n                        <Grid container spacing={1}>\r\n                          {tutorFutureSession.length <= 0 && (\r\n                            <div className=\"color\">\r\n                              No upcoming sessions yet.\r\n                            </div>\r\n                          )}\r\n                          {tutorFutureSession.map((v, i) => (\r\n                            <Grid key={i} item>\r\n                              <Chip\r\n                                label={\r\n                                  moment(new Date(v.start_date)).format(\r\n                                    \"MM/DD/YYYY\"\r\n                                  ) +\r\n                                  \" \" +\r\n                                  v.start_time +\r\n                                  \" - \" +\r\n                                  v.end_time\r\n                                }\r\n                              />\r\n                            </Grid>\r\n                          ))}\r\n                        </Grid>\r\n                      </InfoDialog>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    {(() => {\r\n                      const name = \"start_date\";\r\n                      const label = \"Start Date\";\r\n                      const errorText =\r\n                        errors[name] && touched[name] ? errors[name] : \"\";\r\n                      const handleChange = (date) => {\r\n                        setFieldValue(name, moment(date).format());\r\n                      };\r\n                      return (\r\n                        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                          <Grid container justify=\"space-around\">\r\n                            <KeyboardDatePicker\r\n                              value={values.start_date}\r\n                              onChange={handleChange}\r\n                              label={label}\r\n                              variant=\"inline\"\r\n                              animateYearScrolling={true}\r\n                              disablePast={true}\r\n                              format=\"MM/dd/yyyy\"\r\n                              placeholder=\"MM/DD/YYYY\"\r\n                              fullWidth={true}\r\n                              inputVariant=\"outlined\"\r\n                              InputLabelProps={{\r\n                                shrink: true,\r\n                              }}\r\n                              autoOk={true}\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                            />\r\n                          </Grid>\r\n                        </MuiPickersUtilsProvider>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n\r\n                  <Grid xs={6} item>\r\n                    {(() => {\r\n                      const label = \"Time Slot\";\r\n\r\n                      const handleChange = (ts: TimeSlotInterface) => {\r\n                        setFieldValue(\"start_time\", ts.start_time);\r\n                        setFieldValue(\"end_time\", ts.end_time);\r\n                      };\r\n\r\n                      const errorText =\r\n                        errors.start_time && touched.start_time\r\n                          ? errors.start_time\r\n                          : \"\";\r\n\r\n                      return (\r\n                        <TextField\r\n                          label={label}\r\n                          // value={`${values.start_time} - ${values.end_time}`}\r\n                          value={JSON.stringify({\r\n                            start_time: values.start_time,\r\n                            end_time: values.end_time,\r\n                          })}\r\n                          fullWidth\r\n                          onChange={(e: any) => {\r\n                            handleChange(JSON.parse(e.target.value));\r\n                          }}\r\n                          error={!!errorText}\r\n                          helperText={errorText}\r\n                          variant=\"outlined\"\r\n                          select\r\n                        >\r\n                          {generateTimeSlot(values?.course_duration).map(\r\n                            (val: any, ind) => (\r\n                              <MenuItem key={ind} value={JSON.stringify(val)}>\r\n                                {val.start_time} - {val.end_time}\r\n                              </MenuItem>\r\n                            )\r\n                          )}\r\n                        </TextField>\r\n                      );\r\n                    })()}\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">Review prior class sessions</div>\r\n              </div>\r\n\r\n              <div className=\"box-body\">\r\n                <Button\r\n                  startIcon={<DateRangeRoundedIcon />}\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    const session: Array<ClassSessionModel> = [];\r\n\r\n                    generateDailyWeekDaysDates({\r\n                      session_count: values.session_count,\r\n                      start_date: values.start_date,\r\n                      start_time: values.start_time,\r\n                      end_time: values.end_time,\r\n                      blocked_dates: tutorFutureSession,\r\n                    }).map((value) =>\r\n                      session.push({\r\n                        start_date: value,\r\n                      })\r\n                    );\r\n\r\n                    setFieldValue(\"class_sessions\", session);\r\n                  }}\r\n                >\r\n                  Generate date sessions\r\n                </Button>\r\n                {(() => {\r\n                  const errorText =\r\n                    errors.session_count && touched.session_count\r\n                      ? errors.session_count\r\n                      : \"\";\r\n\r\n                  if (!!errorText) {\r\n                    return <div className=\"error\">{errors.session_count}</div>;\r\n                  }\r\n                })()}\r\n\r\n                <div>\r\n                  {values?.class_sessions?.length > 0 && (\r\n                    <small\r\n                      style={{\r\n                        opacity: 0.8,\r\n                        fontSize: `.8em`,\r\n                      }}\r\n                    >\r\n                      Note: Conflict tutor schedules are automatically skipped!\r\n                    </small>\r\n                  )}\r\n                </div>\r\n\r\n                <FieldArray\r\n                  name=\"class_sessions\"\r\n                  render={(arrayHelpers: FieldArrayRenderProps) => {\r\n                    return (\r\n                      <Grid\r\n                        container\r\n                        item\r\n                        spacing={2}\r\n                        style={{ marginTop: `1.5em` }}\r\n                      >\r\n                        {values?.class_sessions?.map((session, i) => (\r\n                          <Grid item key={i}>\r\n                            <Chip\r\n                              label={`\r\n                                    ${moment(session.start_date).format(\r\n                                      \"MM/DD/YYYY\"\r\n                                    )} \r\n                                    -\r\n                                    ${moment(session.start_date).format(\"dd\")}\r\n                                    `}\r\n                              onDelete={() => {\r\n                                setReschedProps({\r\n                                  open: true,\r\n                                  index: i,\r\n                                });\r\n                              }}\r\n                            />\r\n                          </Grid>\r\n                        ))}\r\n\r\n                        {(() => {\r\n                          const label = \"Start Date\";\r\n                          const handleChange = (resched_date: Date) => {\r\n                            let dup = false;\r\n\r\n                            values.class_sessions.some((d, i) => {\r\n                              if (\r\n                                moment(d.start_date).isSame(\r\n                                  moment(resched_date)\r\n                                )\r\n                              ) {\r\n                                dup = true;\r\n                                return true;\r\n                              }\r\n                              return false;\r\n                            });\r\n\r\n                            if (!dup) {\r\n                              arrayHelpers.push(resched_date);\r\n                              arrayHelpers.remove(reschedProps.index);\r\n                            } else {\r\n                              dispatch(\r\n                                setSnackbar(\r\n                                  \"The date you selected has already been added.\",\r\n                                  \"error\"\r\n                                )\r\n                              );\r\n                            }\r\n\r\n                            setReschedProps({\r\n                              open: false,\r\n                            });\r\n                          };\r\n                          return (\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                  value={values.start_date}\r\n                                  onChange={handleChange}\r\n                                  onClose={() => {\r\n                                    setReschedProps({\r\n                                      open: false,\r\n                                      index: undefined,\r\n                                    });\r\n                                  }}\r\n                                  label={label}\r\n                                  variant=\"dialog\"\r\n                                  open={reschedProps.open}\r\n                                  animateYearScrolling={true}\r\n                                  disablePast={true}\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  placeholder=\"MM/DD/YYYY\"\r\n                                  inputVariant=\"outlined\"\r\n                                  style={{ display: `none`, opacity: 0 }}\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                                  autoOk={false}\r\n                                  // error={!!errorText}\r\n                                  // helperText={errorText}\r\n                                />\r\n                              </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n                    );\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      label=\"Notes/Notice\"\r\n                      name=\"notes\"\r\n                      placeholder=\"Write some notes here...\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      multiline={true}\r\n                      rows={6}\r\n                    />\r\n                  </Grid> */}\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Class\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/room`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/class`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddClassAdminView;\r\n","import moment from \"moment\";\r\n\r\nexport interface TimeSlotInterface {\r\n  start_time?: string;\r\n  end_time?: string;\r\n}\r\n\r\nexport const generateTimeSlot = (minutes: number): Array<TimeSlotInterface> => {\r\n  const time_slots: Array<TimeSlotInterface> = [];\r\n\r\n  if (!minutes) {\r\n    return time_slots;\r\n  }\r\n\r\n  let initial_time = moment(\"07:00\", \"hh:mm A\");\r\n\r\n  do {\r\n    const ts: TimeSlotInterface = {};\r\n    ts.start_time = initial_time.format(\"hh:mm A\");\r\n\r\n    const end = initial_time.add(minutes, \"minutes\");\r\n    ts.end_time = end.format(\"hh:mm A\");\r\n    initial_time = end;\r\n\r\n    if (initial_time.isSameOrBefore(moment(\"20:00\", \"hh:mm A\"))) {\r\n      time_slots.push(ts);\r\n    }\r\n  } while (initial_time.isBefore(moment(\"20:00\", \"hh:mm A\")));\r\n\r\n  return time_slots;\r\n};\r\n","import {\r\n  FormControl,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport SearchRoundedIcon from \"@material-ui/icons/SearchRounded\";\r\n\r\ninterface IDataTableSearch {\r\n  onSubmit: (values: any) => void;\r\n  handleSetSearchField: (value: string) => void;\r\n  searchField: string;\r\n}\r\n\r\nexport const DataTableSearch: FC<IDataTableSearch> = memo(\r\n  ({ onSubmit, searchField, handleSetSearchField }) => {\r\n    return (\r\n      <form onSubmit={onSubmit}>\r\n        <FormControl fullWidth variant=\"outlined\" size=\"small\">\r\n          <OutlinedInput\r\n            style={{ borderRadius: `30px` }}\r\n            id=\"outlined-adornment-amount\"\r\n            placeholder=\"Enter the keywords to search\"\r\n            endAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <IconButton type=\"submit\">\r\n                  <SearchRoundedIcon color=\"primary\" />\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n            autoFocus\r\n            value={searchField}\r\n            onChange={(e) => {\r\n              handleSetSearchField(e.target.value);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </form>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSearch;\r\n","import { MenuItem, TextField } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\n\r\ninterface IDataTableSort {\r\n  selectedSortIndex: string | number;\r\n  handleChagenSelectedSortIndex: (e: any) => void;\r\n  initialTableSort: any;\r\n}\r\n\r\nexport const DataTableSort: FC<IDataTableSort> = memo(\r\n  ({ selectedSortIndex, handleChagenSelectedSortIndex, initialTableSort }) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          display: `grid`,\r\n          gridAutoFlow: \"column\",\r\n          alignItems: `center`,\r\n          alignContent: `center`,\r\n          gridGap: `.7em`,\r\n          justifyContent: `start`,\r\n          justifyItems: `start`,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            fontWeight: 500,\r\n            fontSize: `.9em`,\r\n          }}\r\n        >\r\n          Sort By:\r\n        </div>\r\n\r\n        <TextField\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          select\r\n          // size=\"small\"\r\n          fullWidth\r\n          value={selectedSortIndex}\r\n          style={{ width: 150 }}\r\n          SelectProps={{\r\n            disableUnderline: true,\r\n          }}\r\n          onChange={(e) => {\r\n            handleChagenSelectedSortIndex(e.target.value);\r\n          }}\r\n        >\r\n          {initialTableSort.map((sort, index) => (\r\n            <MenuItem key={index} className=\"sort-item\" value={index}>\r\n              {sort.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableSort;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nconst useFilter = (\r\n  defaultSearch: any,\r\n  initialTableSort: any,\r\n  initialLimit: any\r\n) => {\r\n  const [tableSearch, setTableSearch] = useState(defaultSearch);\r\n  const [searchField, setSearchField] = useState(\"\");\r\n  const [tableLimit, setTableLimit] = useState(\r\n    typeof initialLimit === \"number\" ? initialLimit : 25\r\n  );\r\n  const [tablePage, setTablePage] = useState(0);\r\n  const [tableCount, setTableCount] = useState(0);\r\n\r\n  if (initialTableSort.length <= 0) {\r\n    console.error(`please make sure that the sort has value`);\r\n  }\r\n\r\n  const [selectedSortIndex, setSelectedSortIndex] = useState(0);\r\n  const [activeSort, setActiveSort] = useState(null);\r\n\r\n  const handleChagenSelectedSortIndex = useCallback((index) => {\r\n    setSelectedSortIndex(index);\r\n  }, []);\r\n\r\n  const handleSetSearchField = useCallback((value) => {\r\n    setSearchField(value);\r\n  }, []);\r\n\r\n  const handleSetTableSearch = useCallback((newState) => {\r\n    setTableSearch(newState);\r\n  }, []);\r\n\r\n  const handleSetLimit = useCallback((newLimit) => {\r\n    setTableLimit(newLimit);\r\n  }, []);\r\n\r\n  const handleSetPage = useCallback((newPage) => {\r\n    setTablePage(newPage);\r\n  }, []);\r\n\r\n  const handleSetCount = useCallback((newCount) => {\r\n    setTableCount(newCount);\r\n  }, []);\r\n\r\n  const handleChangePage = useCallback(\r\n    (event, page) => {\r\n      handleSetPage(page);\r\n    },\r\n    [handleSetPage]\r\n  );\r\n\r\n  const handleChangeRowsPerPage = useCallback(\r\n    (event) => {\r\n      if (typeof event.target.value !== \"undefined\") {\r\n        handleSetLimit(parseInt(event.target.value));\r\n        handleSetPage(0);\r\n      }\r\n    },\r\n    [handleSetLimit, handleSetPage]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const generateSearchFilters = () => {\r\n      const foundSortItem = initialTableSort[selectedSortIndex];\r\n\r\n      if (foundSortItem) {\r\n        if (foundSortItem?.value) {\r\n          setActiveSort(foundSortItem?.value);\r\n        }\r\n      }\r\n    };\r\n\r\n    mounted && generateSearchFilters();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [initialTableSort, selectedSortIndex]);\r\n\r\n  return [\r\n    tableSearch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableCount,\r\n    activeSort,\r\n    searchField,\r\n    selectedSortIndex,\r\n    handleSetTableSearch,\r\n    // handleSetLimit,\r\n    // handleSetPage,\r\n    // handleSetCount,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    handleChagenSelectedSortIndex,\r\n    handleSetSearchField,\r\n  ];\r\n};\r\n\r\nexport default useFilter;\r\n","import { Grid, Paper } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledTableData = styled.div`\r\n  /* display: grid; */\r\n  grid-gap: 1em;\r\n  align-content: start;\r\n  align-items: start;\r\n  justify-items: start;\r\n\r\n  @media all and (min-width: ${(props) =>\r\n      props.theme.breakpoints.values.xs}px) {\r\n    grid-auto-flow: row;\r\n    grid-auto-columns: auto;\r\n  }\r\n\r\n  @media all and (min-width: ${(props) =>\r\n      props.theme.breakpoints.values.md}px) {\r\n    /* grid-auto-columns: 250px 100%; */\r\n    grid-auto-flow: column;\r\n  }\r\n\r\n  .table-grid {\r\n    .table-ctnr {\r\n      box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledBox = styled.div`\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */\r\n  border-radius: 10px;\r\n  padding: 1em;\r\n  background-color: #fdfdfd;\r\n\r\n  .box-title {\r\n    padding: 0.5em 0;\r\n    /* border-bottom: 1px solid rgba(0, 0, 0, 0.2); */\r\n    font-size: 1.2em;\r\n    font-weight: 600;\r\n    letter-spacing: 0.3pt;\r\n    word-spacing: 0.3pt;\r\n  }\r\n\r\n  .box-body {\r\n    margin: 1em 0;\r\n  }\r\n`;\r\n\r\nexport const StyledClassContainer = styled.div`\r\n  background-color: #fff;\r\n  border-radius: 0.5em;\r\n  border: 0.05em solid rgba(0, 0, 0, 0.1);\r\n  /* box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1); */\r\n  height: 100%;\r\n  overflow: hidden;\r\n  font-size: 0.87em;\r\n  &:hover {\r\n    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);\r\n    transition: 0.3s all ease-in-out;\r\n  }\r\n\r\n  .image {\r\n    display: inline-block;\r\n    position: relative;\r\n    height: 120px;\r\n    width: 100%;\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n      image-rendering: -webkit-optimize-contrast;\r\n    }\r\n\r\n    .btn {\r\n      position: absolute;\r\n      top: 0;\r\n      right: 0;\r\n      margin: 0.5em;\r\n    }\r\n  }\r\n\r\n  .info-container {\r\n    display: grid;\r\n    padding: 1em;\r\n    padding-top: 0.35em;\r\n    grid-gap: 0.4em;\r\n    align-items: start;\r\n    align-content: start;\r\n\r\n    .title {\r\n      border-radius: 3px;\r\n      padding: 0.5em 0;\r\n      grid-gap: 0.1em;\r\n      display: grid;\r\n      color: blue;\r\n      .main {\r\n        font-size: 1.1em;\r\n        font-weight: 600;\r\n      }\r\n      .sub {\r\n        font-size: 0.75em;\r\n        opacity: 0.7;\r\n        font-weight: 600;\r\n      }\r\n    }\r\n\r\n    .item {\r\n      padding: 0.3em 0;\r\n      border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .tutor {\r\n      display: grid;\r\n      align-items: center;\r\n      justify-content: start;\r\n      grid-auto-flow: column;\r\n      grid-gap: 0.5em;\r\n      font-weight: 600;\r\n      font-size: 0.9em;\r\n      padding: 0.3em 0;\r\n      border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .details {\r\n      margin-top: 1em;\r\n      font-size: 0.9em;\r\n\r\n      > * {\r\n        padding: 4px 0;\r\n      }\r\n\r\n      .time,\r\n      .item {\r\n        font-size: 0.87em;\r\n      }\r\n    }\r\n  }\r\n\r\n  .footer-ctnr {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    align-content: center;\r\n    grid-gap: 0.5em;\r\n    margin-top: 1em;\r\n  }\r\n`;\r\n\r\nexport const StyledDashboardItem = styled.div`\r\n  display: grid;\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 1.5em 1em;\r\n  border-radius: 10px;\r\n  align-items: start;\r\n  align-content: start;\r\n  /* padding-bottom: 2em; */\r\n  grid-template-areas: \"label avatar\" \"val avatar\";\r\n  .label {\r\n    grid-area: label;\r\n    font-weight: 600;\r\n    font-size: 0.83em !important;\r\n    opacity: 0.7;\r\n    color: blue;\r\n    justify-self: start;\r\n  }\r\n\r\n  .stat-value {\r\n    grid-area: val;\r\n    font-weight: 700;\r\n    font-size: 2em;\r\n    justify-self: start;\r\n  }\r\n\r\n  .avatar {\r\n    grid-area: avatar;\r\n    height: 60px;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-self: end;\r\n    width: 60px;\r\n    /* margin-right: 1em; */\r\n  }\r\n`;\r\n\r\nexport const StyledOpenClasses = styled.div`\r\n  padding: 0.5em;\r\n  margin: 0.5em;\r\n  border: 0.02em solid rgba(0, 0, 0, 0.1);\r\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\r\n  border-radius: 5px;\r\n  background-color: #fff;\r\n\r\n  .class-item {\r\n    display: grid;\r\n    border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n    padding: 0.2em 0;\r\n    .label {\r\n      font-weight: 900;\r\n      font-size: 0.67em;\r\n      opacity: 0.4;\r\n    }\r\n    .value {\r\n      font-weight: 600 !important;\r\n      font-size: 0.9em !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledClassMaterial = styled.div`\r\n  .zc {\r\n  }\r\n`;\r\n\r\nexport const StyledEnrolledClass = styled.div`\r\n  .enrolled-classes {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-gap: 1em;\r\n\r\n    .class-item {\r\n      display: grid;\r\n      grid-gap: 0.3em;\r\n      padding: 1em;\r\n      border-radius: 7px;\r\n      background-color: #fcfcfc;\r\n      border: 0.05em solid rgba(0, 0, 0, 0.1);\r\n\r\n      .class-title {\r\n        font-weight: 500;\r\n        display: grid;\r\n        align-items: center;\r\n        justify-content: start;\r\n        align-content: start;\r\n        grid-gap: 0.5em;\r\n        grid-auto-flow: column;\r\n\r\n        .circle {\r\n          height: 7px;\r\n          width: 7px;\r\n          background-color: yellowgreen;\r\n          border-radius: 50%;\r\n          animation: beat 0.5s infinite alternate;\r\n        }\r\n\r\n        @keyframes beat {\r\n          to {\r\n            transform: scale(1.4);\r\n          }\r\n        }\r\n      }\r\n\r\n      .sub-title {\r\n        font-size: 0.77em;\r\n        font-weight: 600;\r\n        opacity: 0.8;\r\n        margin-left: 1.3em;\r\n      }\r\n      .tutor {\r\n        display: grid;\r\n        grid-gap: 0.5em;\r\n        grid-auto-flow: column;\r\n        justify-content: start;\r\n        align-items: center;\r\n        align-content: center;\r\n        font-size: 0.9em;\r\n        .img {\r\n          height: 30px;\r\n          width: 30px;\r\n        }\r\n      }\r\n      .time {\r\n        font-size: 0.83em;\r\n        font-weight: 500;\r\n        justify-self: end;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledSessionTutorView = styled(Paper)`\r\n  grid-template-areas: \"course_img course_desc\" \"tabs tabs\";\r\n  display: grid;\r\n  grid-gap: 1em;\r\n  grid-auto-columns: 220px 1fr;\r\n  padding: 1em;\r\n  /* border-color: #fff; */\r\n  /* box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); */\r\n  width: 100%;\r\n\r\n  .course_img {\r\n    grid-area: course_img;\r\n    justify-self: center;\r\n  }\r\n  .course-desc {\r\n    grid-area: course_desc;\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    justify-items: start;\r\n    justify-content: start;\r\n    align-items: start;\r\n    align-content: start;\r\n\r\n    .course-title {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-items: start;\r\n      align-items: center;\r\n      grid-gap: 0.8em;\r\n      font-size: 2em;\r\n      font-weight: 500;\r\n    }\r\n    .course-subtitle {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      justify-items: start;\r\n      grid-gap: 0.8em;\r\n      font-size: 0.87em;\r\n      font-weight: 600;\r\n      /* opacity: 0.9; */\r\n    }\r\n  }\r\n\r\n  .tabs {\r\n    grid-area: tabs;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: 1fr;\r\n    grid-gap: 1em;\r\n\r\n    /* border-top: 2px solid rgba(0, 0, 0, 0.1); */\r\n    /* padding-top: 1em; */\r\n\r\n    .links {\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n      font-size: 0.93em;\r\n      padding-right: 0;\r\n      min-height: 500px;\r\n      height: 100%;\r\n      /* border-right: 2px solid rgba(0, 0, 0, 0.1); */\r\n      align-content: start;\r\n      align-items: start;\r\n      /* justify-items: center; */\r\n\r\n      /* box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1); */\r\n\r\n      .link-item {\r\n        color: black !important;\r\n        height: 2em;\r\n        display: grid;\r\n        align-items: center;\r\n        /* transition: 0.1s border-right ease-in-out; */\r\n        /* padding: 0 3.5em; */\r\n        /* text-align: center; */\r\n\r\n        &.link-item-active {\r\n          color: #3d5af1 !important;\r\n          /* border-right: 2px solid #3d5af1; */\r\n          /* transition: 0.1s border-right ease-in-out; */\r\n        }\r\n      }\r\n    }\r\n\r\n    .tab-container {\r\n      width: 100%;\r\n\r\n      .class-tab {\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setClassDataTableAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface DataTableClassAdminInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const DataTableClassAdminView: FC<DataTableClassAdminInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetching_class_data_table\r\n    );\r\n    const data_table: Array<ClassModel & StatusMasterModel> = useSelector(\r\n      (store: RootStore) => store.ClassReducer.class_data_table?.table\r\n    );\r\n\r\n    console.log(data_table);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setClassDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/class\",\r\n              title: \"Classes\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/class/add\">\r\n                <Button color=\"primary\" variant=\"contained\">\r\n                  Create a Class\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={3}>\r\n            <LinearLoadingProgress show={table_loading} />\r\n            {data_table?.length < 1 && (\r\n              <span className=\"empty-rows\">No records found!</span>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                className=\"class-container\"\r\n                style={{\r\n                  display: `grid`,\r\n                  gridGap: `2em`,\r\n                  alignItems: `start`,\r\n                  alignContent: `start`,\r\n                  gridTemplateColumns: `repeat(auto-fit, minmax(min(270px, 100%), 1fr))`,\r\n                }}\r\n              >\r\n                {data_table?.map((v, i) => (\r\n                  <StyledClassContainer key={i}>\r\n                    <div className=\"image\">\r\n                      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                      <img\r\n                        src={`data:image/jpg;base64,${v.pic}`}\r\n                        alt={`no image found`}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"info-container\">\r\n                      <NavLink\r\n                        to={`/admin/class/${v.class_pk}/session`}\r\n                        className=\"title\"\r\n                      >\r\n                        {v.class_desc}\r\n                        {\" - \"}\r\n                        {v.course_desc}\r\n                      </NavLink>\r\n                      <div className=\"status\">\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            justifyContent: `start`,\r\n                            justifyItems: `start`,\r\n                            alignItems: `center`,\r\n                            gridAutoFlow: `column`,\r\n                            gridAutoColumns: `1fr auto`,\r\n                          }}\r\n                        >\r\n                          <Chip\r\n                            label={v.sts_desc}\r\n                            style={{\r\n                              backgroundColor: v.sts_bgcolor,\r\n                              color: v.sts_color,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"time item\">\r\n                        {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                        {\" - \"}\r\n                        {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"item\"\r\n                        style={{ textTransform: `capitalize` }}\r\n                      >\r\n                        {v.tutor_name}\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"value\">\r\n                          {v.closed_sessions} of {v.session_count} completed\r\n                          sessions\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </StyledClassContainer>\r\n                ))}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableClassAdminView;\r\n","import { Button, IconButton, Paper, Popover } from \"@material-ui/core\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IIconButtonPopper {\r\n  buttonColor?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n  iconColor?:\r\n    | \"inherit\"\r\n    | \"disabled\"\r\n    | \"action\"\r\n    | \"primary\"\r\n    | \"secondary\"\r\n    | \"error\"\r\n    | undefined;\r\n  buttons: Array<IButtonItem>;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  size?: \"small\" | \"medium\";\r\n}\r\n\r\ninterface IButtonItem {\r\n  text: string;\r\n  Icon?: any;\r\n  disabled?: boolean;\r\n  handleClick?: () => void;\r\n  color?: \"inherit\" | \"primary\" | \"secondary\" | \"default\" | undefined;\r\n}\r\n\r\nconst IconButtonPopper: React.FC<IIconButtonPopper> = memo(\r\n  ({ buttonColor, className, iconColor, buttons, style, size }) => {\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n      null\r\n    );\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n      setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n      setAnchorEl(null);\r\n    };\r\n\r\n    const open = Boolean(anchorEl);\r\n    const id = open ? \"simple-popover\" : undefined;\r\n\r\n    return (\r\n      <div style={style} className={className}>\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-describedby={id}\r\n          onClick={handleClick}\r\n          // size={size}\r\n          size=\"small\"\r\n          style={{\r\n            padding: `.3em`,\r\n            // color: `#e3f2fd`,\r\n            boxShadow: `0 2px 4px rgba(0,0,0,.1)`,\r\n            // backgroundColor: `#1a237e`,\r\n          }}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <Popover\r\n          id={id}\r\n          open={open}\r\n          anchorEl={anchorEl}\r\n          onClose={handleClose}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n          }}\r\n          transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n          }}\r\n        >\r\n          <PopperContent>\r\n            {buttons.map((btn: IButtonItem, index: number) => (\r\n              <Button\r\n                key={index}\r\n                color={btn.color}\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  handleClose();\r\n                  if (typeof btn.handleClick !== \"undefined\") {\r\n                    btn.handleClick();\r\n                  }\r\n                }}\r\n                startIcon={btn.Icon ? <btn.Icon fontSize=\"small\" /> : null}\r\n                disableElevation\r\n                disabled={btn.disabled}\r\n              >\r\n                <span style={{ fontWeight: 700, fontSize: `.87em` }}>\r\n                  {btn.text}\r\n                </span>\r\n              </Button>\r\n            ))}\r\n          </PopperContent>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default IconButtonPopper;\r\n\r\nconst PopperContent = styled(Paper)`\r\n  padding: 1em 0.5em;\r\n  display: grid;\r\n  grid-gap: 0.5em;\r\n  min-width: 150px;\r\n\r\n  .btn {\r\n  }\r\n  .MuiButton-label {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    justify-content: start;\r\n    justify-items: start;\r\n    align-items: center;\r\n    align-content: center;\r\n  }\r\n`;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React, { memo, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ITab {\r\n  label: string;\r\n  link: string;\r\n}\r\n\r\ninterface StyledTabsProps {\r\n  value: number;\r\n  onChange: (event: React.ChangeEvent<{}>, newValue: number) => void;\r\n}\r\n\r\ninterface ILinkTabs {\r\n  tabs: Array<ITab>;\r\n  RenderSwitchComponent: any;\r\n}\r\n\r\ninterface StyledTabProps {\r\n  label: any;\r\n}\r\n\r\nconst AntTabs = withStyles({\r\n  root: {\r\n    borderBottom: \"1px solid #e8e8e8\",\r\n  },\r\n  indicator: {\r\n    backgroundColor: \"#1890ff\",\r\n  },\r\n})(Tabs);\r\n\r\nconst AntTab = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      textTransform: \"none\",\r\n      minWidth: 72,\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      marginRight: theme.spacing(4),\r\n      \"&:hover\": {\r\n        color: \"#40a9ff\",\r\n        opacity: 1,\r\n      },\r\n      \"&$selected\": {\r\n        color: \"#1890ff\",\r\n        fontWeight: theme.typography.fontWeightMedium,\r\n      },\r\n      \"&:focus\": {\r\n        color: \"#40a9ff\",\r\n      },\r\n    },\r\n    selected: {},\r\n  })\r\n)((props: any) => <Tab disableRipple {...props} />);\r\n\r\nconst LinkTabs: React.FC<ILinkTabs> = memo(\r\n  ({ tabs, RenderSwitchComponent }) => {\r\n    const history = useHistory();\r\n\r\n    const [click_counter, set_click_counter] = useState(0);\r\n\r\n    return (\r\n      <StyledLinkTabs>\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <AntTabs\r\n              orientation={\"horizontal\"}\r\n              variant=\"scrollable\"\r\n              value={tabs.findIndex((p) =>\r\n                window.location.pathname\r\n                  .toLowerCase()\r\n                  .includes(p.link.toLowerCase())\r\n              )}\r\n              className=\"tabs\"\r\n              indicatorColor=\"primary\"\r\n              textColor=\"primary\"\r\n            >\r\n              {tabs.map((value, index) => (\r\n                <AntTab\r\n                  label={value.label}\r\n                  key={index}\r\n                  value={index}\r\n                  onClick={() => {\r\n                    set_click_counter((prev) => prev + 1);\r\n                    history.push(value.link);\r\n                  }}\r\n                ></AntTab>\r\n              ))}\r\n            </AntTabs>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <div className=\"body\" style={{ minHeight: 400, padding: `1em` }}>\r\n              {RenderSwitchComponent}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </StyledLinkTabs>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinkTabs;\r\n\r\nconst StyledLinkTabs = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  span.PrivateTabIndicator-root-1.PrivateTabIndicator-colorPrimary-2.MuiTabs-indicator {\r\n    border-bottom-color: blue !important;\r\n  }\r\n  .tabs {\r\n    .Mui-selected {\r\n      color: #2196f3 !important;\r\n      border-bottom-color: #2196f3 !important;\r\n    }\r\n\r\n    .MuiTab-wrapper {\r\n    }\r\n  }\r\n  .body {\r\n    /* margin-top: 0.5em; */\r\n    /* padding: 1em; */\r\n    /* border: 0.01em solid rgb(0, 0, 0, 0.1); */\r\n    border-radius: 7px;\r\n  }\r\n`;\r\n","import moment from \"moment\";\r\n\r\nexport const displayMySqlDate = (\r\n  date: string,\r\n  replaceEmpty?: string\r\n): string | undefined => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return replaceEmpty;\r\n  }\r\n  return moment(parsedDate).format(\"MMM. DD, YYYY\");\r\n};\r\n\r\nexport const displayMySqlDateTime = (date: string): string | null => {\r\n  const parsedDate = new Date(date);\r\n  if (!moment(parsedDate).isValid) {\r\n    return null;\r\n  }\r\n\r\n  const parsedData = moment(parsedDate).format(\"MMM. DD, YYYY hh:mm A\");\r\n\r\n  if (!moment(parsedData).isValid()) {\r\n    return \"-\";\r\n  }\r\n\r\n  return parsedData;\r\n};\r\n\r\nexport const displayMySqlTime = (time: string): string | null => {\r\n  // const parsedDate = new Date(date);\r\n  // if (!moment(parsedDate).isValid) {\r\n  //   return null;\r\n  // }\r\n  // const parsedData = moment(parsedDate).format(\"hh:mm A\");\r\n  // return parsedData;\r\n\r\n  return moment(time, \"hh:mm:ss\").format(\"HH:mm a\");\r\n};\r\n\r\nexport const displaySex = (sex: \"m\" | \"f\") => {\r\n  if (sex.toLocaleLowerCase() === \"m\") {\r\n    return \"Male\";\r\n  }\r\n  if (sex.toLocaleLowerCase() === \"f\") {\r\n    return \"Female\";\r\n  }\r\n};\r\n\r\nexport const dateParseJsToAspDate = (date: Date): any => {\r\n  return moment(new Date(date)).format(\"LLLL\");\r\n};\r\n\r\nexport const InvalidTimeToDefault = (\r\n  date: Date | null | string,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const time = moment(date, \"HH:mm:ss\").format(\"hh:mm a\");\r\n\r\n  if (time.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return time;\r\n};\r\n\r\nexport const InvalidDateToDefault = (\r\n  date: Date | null | string,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const InvalidDateTimeToDefault = (\r\n  date: Date | null | string,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY hh:mm a\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseTimeOrDefault = (\r\n  time: string,\r\n  defaultString: string\r\n): string => {\r\n  if (!time) {\r\n    return defaultString;\r\n  }\r\n\r\n  const moment_time = moment(time, \"HH:mm:ss\");\r\n\r\n  if (moment_time.isValid()) {\r\n    const t = moment_time.format(\"HH:mma\");\r\n\r\n    return t;\r\n  } else {\r\n    return defaultString;\r\n  }\r\n};\r\n\r\nexport const parseDateOrDefault = (\r\n  date: Date | string | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseDateAndDayOfWeekOrDefault = (\r\n  date: Date | string | null,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"dddd, MMM DD, YYYY\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n\r\nexport const parseDateTimeOrDefault = (\r\n  date: Date | string,\r\n  defaultString: string\r\n): string => {\r\n  if (!date) {\r\n    return defaultString;\r\n  }\r\n\r\n  const d = moment(date).format(\"MMM DD, YYYY HH:mm a\");\r\n\r\n  if (d.toLowerCase() === \"invalid date\") {\r\n    return defaultString;\r\n  }\r\n  return d;\r\n};\r\n","const StringEmptyToDefault = (\r\n  originalString: string,\r\n  defaultString: string\r\n): string | undefined => {\r\n  if (typeof originalString === \"undefined\") {\r\n    return defaultString;\r\n  } else {\r\n    if (!originalString) {\r\n      return defaultString;\r\n    } else {\r\n      return originalString.toString().trim() === \"\"\r\n        ? defaultString\r\n        : originalString;\r\n    }\r\n  }\r\n};\r\n\r\nconst formatStringToNumber = (num: string | number): number | null => {\r\n  if (typeof num === \"number\") {\r\n    return num;\r\n  }\r\n\r\n  if (typeof num === \"string\") {\r\n    const parse_num = parseInt(num);\r\n\r\n    if (isNaN(parse_num)) {\r\n      return null;\r\n    } else {\r\n      return parse_num;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const formatStringToDecimal = (num: string | number): number | null => {\r\n  if (typeof num === \"number\") {\r\n    return num;\r\n  }\r\n\r\n  if (typeof num === \"string\") {\r\n    const parse_num = parseFloat(num);\r\n\r\n    if (isNaN(parse_num)) {\r\n      return null;\r\n    } else {\r\n      return parse_num;\r\n    }\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst nullToEmptyString = (str: null | string | number) => {\r\n  if (!str) {\r\n    return \"\";\r\n  }\r\n\r\n  if (str === null) {\r\n    return \"\";\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\nexport { StringEmptyToDefault, formatStringToNumber, nullToEmptyString };\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassStudentModel } from \"../Models/ClassStudentModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classstudent/`;\r\n\r\nconst setTblClassStudentsApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTblClassStudents\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst enrollClassStudent = async (\r\n  payload: ClassStudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"enrollClassStudent\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst joinStudentToClassApi = async (\r\n  payload: ClassStudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"joinStudentToClass\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst blockClassStudentApi = async (\r\n  class_stud_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"blockClassStudent\", {\r\n    class_stud_pk: class_stud_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst reEnrollClassStudentApi = async (\r\n  class_stud_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"reEnrollClassStudent\", {\r\n    class_stud_pk: class_stud_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  setTblClassStudentsApi,\r\n  enrollClassStudent,\r\n  blockClassStudentApi,\r\n  reEnrollClassStudentApi,\r\n  joinStudentToClassApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassStudentApi from \"../Api/ClassStudentApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassStudentModel } from \"../Models/ClassStudentModel\";\r\nimport { ClassStudentReducerTypes } from \"../Types/ClassStudentTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setTblClassStudentsAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassStudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tbl_class_students\",\r\n      fetch_tbl_class_students: true,\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.setTblClassStudentsApi(\r\n      class_pk\r\n    );\r\n\r\n    dispatch({\r\n      type: \"set_fetch_tbl_class_students\",\r\n      fetch_tbl_class_students: false,\r\n    });\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tbl_class_students\",\r\n        tbl_class_students: response.data,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst enrollClassStudentAction = (\r\n  payload: ClassStudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.enrollClassStudent(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst joinStudentToClassAction = (\r\n  payload: ClassStudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.joinStudentToClassApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst reEnrollClassStudentAction = (\r\n  session_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.reEnrollClassStudentApi(\r\n      session_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst blockClassStudentAction = (\r\n  session_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassStudentApi.blockClassStudentApi(\r\n      session_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setTblClassStudentsAction,\r\n  enrollClassStudentAction,\r\n  reEnrollClassStudentAction,\r\n  blockClassStudentAction,\r\n  joinStudentToClassAction,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { TutorFavModel } from \"../Models/TutorFavModel\";\r\nimport { TutorModel } from \"../Models/TutorModels\";\r\nimport { TutorRatingsModel } from \"../Models/TutorRatingsModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/tutor/`;\r\n\r\nexport const getTutorDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getTutorDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const addTutorApi = async (\r\n  payload: TutorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addTutor\", payload);\r\n  return response;\r\n};\r\n\r\nexport const getSingleTutorApi = async (\r\n  tutor_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleTutor\", {\r\n    tutor_pk: tutor_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingTutorToStudent = async (\r\n  tutor_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getSingTutorToStudent\",\r\n    {\r\n      tutor_pk: tutor_pk,\r\n    }\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const searchTutorApi = async (\r\n  search: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchTutor\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport const getDummyTutorsApi = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getDummyTutors\", null);\r\n  return response;\r\n};\r\n\r\nexport const insertDummyTutorRatingsApi = async (\r\n  payload: Array<TutorRatingsModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"insertDummyTutorRatings\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateTutorImage = async (\r\n  payload: TutorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateTutorImage\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst toggleActiveStatus = async (\r\n  tutor_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"toggleActiveStatus\", {\r\n    tutor_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst updateTutor = async (payload: TutorModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateTutor\", payload);\r\n  return response;\r\n};\r\n\r\nconst getTotalTutors = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTotalTutors\", {});\r\n  return response;\r\n};\r\n\r\nconst getLoggedInTutor = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getLoggedInTutor\", {});\r\n  return response;\r\n};\r\n\r\nconst updateLoggedInTutorBio = async (\r\n  payload: TutorModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateLoggedInTutorBio\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst rateTutor = async (\r\n  payload: TutorRatingsModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"rateTutor\", payload);\r\n  return response;\r\n};\r\n\r\nconst favoriteTutor = async (\r\n  payload: TutorFavModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"favoriteTutor\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getMostRatedTutors = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getMostRatedTutors\",\r\n    null\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  updateTutorImage,\r\n  toggleActiveStatus,\r\n  updateTutor,\r\n  getTotalTutors,\r\n  getLoggedInTutor,\r\n  updateLoggedInTutorBio,\r\n  rateTutor,\r\n  favoriteTutor,\r\n  getSingTutorToStudent,\r\n  getMostRatedTutors,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport TutorApi, {\r\n  addTutorApi,\r\n  getSingleTutorApi,\r\n  getTutorDataTableApi,\r\n  insertDummyTutorRatingsApi,\r\n} from \"../Api/TutorApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { TutorFavModel } from \"../Models/TutorFavModel\";\r\nimport { TutorModel } from \"../Models/TutorModels\";\r\nimport { TutorRatingsModel } from \"../Models/TutorRatingsModel\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { TutorReducerTypes } from \"../Types/TutorTypes\";\r\n\r\nexport const setTutorDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCHING_TUTOR_DATA_TABLE\",\r\n      fetching_tutor_data_table: true,\r\n    });\r\n    const response: IServerResponse = await getTutorDataTableApi(payload);\r\n    console.log(`response`, response);\r\n    dispatch({\r\n      type: \"FETCHING_TUTOR_DATA_TABLE\",\r\n      fetching_tutor_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"TUTOR_DATA_TABLE\",\r\n        tutor_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const setSingleTutor = (tutor_pk: string) => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"FETCHING_SINGLE_TUTOR\",\r\n      fetching_single_tutor: true,\r\n    });\r\n    const response: IServerResponse = await getSingleTutorApi(tutor_pk);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SINGLE_TUTOR\",\r\n        single_tutor: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"FETCHING_SINGLE_TUTOR\",\r\n      fetching_single_tutor: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const addTutorAction = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await addTutorApi(payload);\r\n    console.log(`response`, response);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const insertDummyTutorRatingsAction = (\r\n  payload: Array<TutorRatingsModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message:\r\n          \"Saving your initial ratings, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await insertDummyTutorRatingsApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst updateTutorImage = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message:\r\n          \"Saving your initial ratings, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.updateTutorImage(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst toggleActiveStatus = (\r\n  tutor_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message:\r\n          \"Saving your initial ratings, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.toggleActiveStatus(\r\n      tutor_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_TUTOR_PAGING\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst updateTutor = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.updateTutor(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_SINGLE_TUTOR\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst getLoggedInTutor = () => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_loggedin_tutor\",\r\n      fetch_loggedin_tutor: true,\r\n    });\r\n    const response: IServerResponse = await TutorApi.getLoggedInTutor();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"loggedin_tutor\",\r\n        loggedin_tutor: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_loggedin_tutor\",\r\n      fetch_loggedin_tutor: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\nconst getSingTutorToStudent = (tutor_pk: number | null) => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  if (tutor_pk === null) {\r\n    dispatch({\r\n      type: \"single_tutor_to_student\",\r\n      single_tutor_to_student: null,\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_tutor_to_student\",\r\n      fetch_single_tutor_to_student: true,\r\n    });\r\n    const response: IServerResponse = await TutorApi.getSingTutorToStudent(\r\n      tutor_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_tutor_to_student\",\r\n        single_tutor_to_student: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_single_tutor_to_student\",\r\n      fetch_single_tutor_to_student: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst updateLoggedInTutorBio = (\r\n  payload: TutorModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.updateLoggedInTutorBio(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_SINGLE_TUTOR\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst rateTutor = (\r\n  payload: TutorRatingsModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.rateTutor(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_SINGLE_TUTOR\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst favoriteTutor = (\r\n  payload: TutorFavModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<TutorReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await TutorApi.favoriteTutor(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        dispatch({\r\n          type: \"RELOAD_SINGLE_TUTOR\",\r\n        });\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst getMostRatedTutors = () => async (\r\n  dispatch: Dispatch<TutorReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_most_rated_tutors\",\r\n      fetch_most_rated_tutors: true,\r\n    });\r\n    const response: IServerResponse = await TutorApi.getMostRatedTutors();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"most_rated_tutors\",\r\n        most_rated_tutors: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_most_rated_tutors\",\r\n      fetch_most_rated_tutors: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  updateTutorImage,\r\n  toggleActiveStatus,\r\n  updateTutor,\r\n  getLoggedInTutor,\r\n  updateLoggedInTutorBio,\r\n  rateTutor,\r\n  favoriteTutor,\r\n  getSingTutorToStudent,\r\n  getMostRatedTutors,\r\n};\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledManageClassAdmin = styled(Container)`\r\n  .container-body {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 0.5em 1em !important;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  .class-profile {\r\n    display: grid;\r\n    align-content: start;\r\n    align-items: start;\r\n    justify-items: center;\r\n    justify-content: center;\r\n\r\n    .title {\r\n      margin-top: 0.3em;\r\n      font-weight: 500;\r\n      padding: 0.2em 0;\r\n      font-size: 1.3em;\r\n    }\r\n    .sub-title {\r\n      font-size: 0.9em;\r\n      font-weight: 500;\r\n      opacity: 0.8;\r\n      padding: 0.3em 0;\r\n    }\r\n\r\n    .rating {\r\n      font-weight: 500;\r\n      padding: 0.3em 0;\r\n      display: grid;\r\n      align-content: center;\r\n      align-items: center;\r\n      grid-auto-flow: column;\r\n      grid-gap: 0.3em;\r\n      margin-bottom: 1em;\r\n    }\r\n\r\n    .remarks {\r\n      margin-top: 0.5em;\r\n      font-size: 0.8em;\r\n      padding: 0.5em 1em;\r\n      border-radius: 10px;\r\n      background-color: #f5f5f5;\r\n    }\r\n  }\r\n\r\n  .other-info-container {\r\n    justify-self: start;\r\n    display: grid;\r\n    /* grid-gap: 1em; */\r\n    align-items: start;\r\n    align-content: start;\r\n\r\n    .form-group {\r\n      padding: 0.7em 0;\r\n      border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      grid-auto-columns: auto 1fr;\r\n      justify-content: start;\r\n      justify-items: start;\r\n      grid-gap: 1.3em;\r\n      font-size: 0.9em;\r\n      align-items: center;\r\n      align-content: center;\r\n\r\n      .label {\r\n        font-weight: 400;\r\n        opacity: 0.8;\r\n      }\r\n      .value {\r\n        font-weight: 500;\r\n\r\n        &.profile {\r\n          display: grid;\r\n          align-items: center;\r\n          align-content: center;\r\n          grid-auto-flow: column;\r\n          grid-gap: 0.5em;\r\n          justify-content: start;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { CircularProgress } from \"@material-ui/core\";\r\nimport WebViewer from \"@pdftron/webviewer\";\r\nimport React, { FC, memo, useEffect, useRef } from \"react\";\r\ninterface IFileViwer {\r\n  file: any;\r\n}\r\n\r\nexport const FileViwer: FC<IFileViwer> = memo(({ file }) => {\r\n  const viewer = useRef(null);\r\n  useEffect(() => {\r\n    if (file) {\r\n      WebViewer(\r\n        {\r\n          path: \"/lib\",\r\n          initialDoc: file,\r\n          isReadOnly: true,\r\n        },\r\n        viewer.current\r\n      ).then((instance) => {\r\n        const { docViewer } = instance;\r\n      });\r\n    }\r\n  }, [file]);\r\n\r\n  if (!file) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"MyComponent\">\r\n      {file ? (\r\n        <div\r\n          className=\"webviewer\"\r\n          ref={viewer}\r\n          style={{ height: \"85vh\" }}\r\n        ></div>\r\n      ) : (\r\n        <div>\r\n          Waiting for a file <CircularProgress />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FileViwer;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Tooltip,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport CancelPresentationIcon from \"@material-ui/icons/CancelPresentation\";\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport React, { memo, useEffect, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface IFormDialog {\r\n  open: boolean;\r\n  title: string;\r\n  handleClose?: () => void;\r\n  body?: any;\r\n  actions?: any;\r\n  minWidth?: number;\r\n  fullScreen?: boolean;\r\n  scroll?: \"body\" | \"paper\";\r\n  maxWidth?: false | \"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\";\r\n  hideCloseButton?: boolean;\r\n}\r\n\r\nexport const FormDialog: React.FC<IFormDialog> = memo(\r\n  ({\r\n    children,\r\n    open,\r\n    title,\r\n    handleClose,\r\n    body,\r\n    actions,\r\n    minWidth,\r\n    fullScreen,\r\n    scroll,\r\n    maxWidth,\r\n    hideCloseButton,\r\n  }) => {\r\n    const theme = useTheme();\r\n    const descriptionElementRef = useRef<any>(null);\r\n    const mobile = useMediaQuery((theme: any) => theme.breakpoints.down(\"sm\"));\r\n    const dispatch = useDispatch();\r\n    const { radResultNo } = useParams<any>();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializeData = () => {};\r\n\r\n      mounted && open && initializeData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, radResultNo, open]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (open && mounted) {\r\n        const { current: descriptionElement } = descriptionElementRef;\r\n        if (descriptionElement !== null) {\r\n          descriptionElement.focus();\r\n        }\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [open]);\r\n\r\n    return (\r\n      <Dialog\r\n        open={open}\r\n        scroll={scroll ? scroll : \"body\"}\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        fullScreen={fullScreen}\r\n        maxWidth={maxWidth}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            minWidth: mobile\r\n              ? \"95%\"\r\n              : typeof minWidth === \"undefined\"\r\n              ? 750\r\n              : minWidth,\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitleStyle theme={theme} disableTypography={true}>\r\n          <div className=\"title\">{title}</div>\r\n        </DialogTitleStyle>\r\n\r\n        <DialogContentStyle theme={theme}>{body}</DialogContentStyle>\r\n        <DialogActionsStyle className=\"form-footer\">\r\n          {actions}\r\n\r\n          {!hideCloseButton && (\r\n            <Button color=\"secondary\" variant=\"contained\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          )}\r\n        </DialogActionsStyle>\r\n      </Dialog>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormDialog;\r\n\r\nconst DialogTitleStyle = styled(DialogTitle)`\r\n  /* background-color: ${(p) => p.theme.palette.primary.light}; */\r\n  /* color: ${(p) => p.theme.palette.primary.contrastText}; */\r\n  /* font-size: 0.87em; */\r\n  display: grid;\r\n  grid-auto-flow: column;\r\n  align-items: center;\r\n  align-content: center;\r\n  grid-gap: 1em;\r\n  border-bottom: 0.02em solid rgba(0, 0, 0, 0.2);\r\n\r\n  .title {\r\n    font-weight: 600;\r\n  }\r\n\r\n  .toolbar {\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 0.5em;\r\n    color: ${(p) => p.theme.palette.primary.contrastText};\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n    .MuiSvgIcon-root {\r\n      color: ${(p) => p.theme.palette.primary.contrastText};\r\n    }\r\n  }\r\n`;\r\n\r\nconst DialogContentStyle = styled(DialogContent)`\r\n  /* margin: 0;\r\n  padding: 0; */\r\n  background-color: ${(p) => p.theme.palette.common.white};\r\n`;\r\nconst DialogActionsStyle = styled(DialogActions)`\r\n  /* background-color: #f0f0f0; */\r\n`;\r\n","export default (payload: any): FormData => {\r\n  const form_data = new FormData();\r\n\r\n  for (var key in payload) {\r\n    form_data.append(key, payload[key]);\r\n  }\r\n\r\n  return form_data;\r\n};\r\n","import { PostFetch, PostFileFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/classmaterial/`;\r\n\r\nconst getTblClassMaterialApi = async (\r\n  class_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTblClassMaterial\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassMaterialApi = async (\r\n  payload: FormData\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFileFetch(\r\n    API_DEFAULT_ROUTE + \"addClassMaterial\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst deleteClassMaterialApi = async (\r\n  mat_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"deleteClassMaterial\", {\r\n    mat_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getTblClassMaterialApi,\r\n  addClassMaterialApi,\r\n  deleteClassMaterialApi,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassMaterialApi from \"../Api/ClassMaterialApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { ClassMaterialReducerTypes } from \"../Types/ClassMaterialTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setTblClassMaterialAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassMaterialReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_class_material\",\r\n      fetch_class_material: true,\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.getTblClassMaterialApi(\r\n      class_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tbl_class_materials\",\r\n        tbl_class_materials: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"set_fetch_class_material\",\r\n      fetch_class_material: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst addClassMaterialAction = (\r\n  payload: FormData,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.addClassMaterialApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst deleteClassMaterialAction = (\r\n  mat_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassMaterialApi.deleteClassMaterialApi(\r\n      mat_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setTblClassMaterialAction,\r\n  addClassMaterialAction,\r\n  deleteClassMaterialAction,\r\n};\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport FileCopyRoundedIcon from \"@material-ui/icons/FileCopyRounded\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FileViwer from \"../../../Component/FileViewer\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { API_BASE_URL } from \"../../../Helpers/AppConfig\";\r\nimport convertObjectToFormData from \"../../../Helpers/convertObjectToFormData\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassMaterialActions from \"../../../Services/Actions/ClassMaterialActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { ClassMaterialModel } from \"../../../Services/Models/ClassMaterialModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\ninterface ClassMaterialProps {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ClassMaterialView: FC<ClassMaterialProps> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user?.user_type\r\n    );\r\n    const [\r\n      selectedMaterial,\r\n      setSelectedMaterial,\r\n    ] = useState<ClassMaterialModel | null>(null);\r\n\r\n    const tbl_class_materials = useSelector(\r\n      (store: RootStore) => store.ClassMaterialReducer.tbl_class_materials\r\n    );\r\n\r\n    console.log(`selectedMaterial`, selectedMaterial);\r\n\r\n    const fetch_class_material = useSelector(\r\n      (store: RootStore) => store.ClassMaterialReducer.fetch_class_material\r\n    );\r\n\r\n    const [openEnrollStudentModel, setOpenEnrollStudentModel] = useState(false);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_data = () => {\r\n        dispatch(ClassMaterialActions.setTblClassMaterialAction(class_pk));\r\n      };\r\n\r\n      mounted && fetch_data();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_pk, dispatch]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <Grid item container spacing={2}>\r\n          {user_type === \"tutor\" && (\r\n            <Grid item>\r\n              <Button\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                disableElevation\r\n                onClick={() => {\r\n                  setOpenEnrollStudentModel(true);\r\n                }}\r\n              >\r\n                Add Material\r\n              </Button>\r\n            </Grid>\r\n          )}\r\n          <Grid item container justify=\"flex-end\"></Grid>\r\n\r\n          <Grid item container spacing={3} justify=\"flex-start\">\r\n            <LinearLoadingProgress show={fetch_class_material} />\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell width=\"70%\">File Description</TableCell>\r\n                    <TableCell width=\"20%\">Added At</TableCell>\r\n                    <TableCell width=\"10%\" align=\"center\">\r\n                      Actions\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {tbl_class_materials?.length < 1 && (\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={5}>\r\n                        <span className=\"empty-rows\">No records to show.</span>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  {tbl_class_materials?.map((material, index) => (\r\n                    <TableRow key={index}>\r\n                      <TableCell>\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            gridAutoFlow: `column`,\r\n                            justifyContent: `start`,\r\n                            gridGap: `1em`,\r\n                            alignItems: `center`,\r\n                            alignContent: `center`,\r\n                          }}\r\n                        >\r\n                          <Avatar\r\n                            style={{\r\n                              backgroundColor: `#f1f8e9`,\r\n                              color: `#33691e`,\r\n                            }}\r\n                            className=\"avatar\"\r\n                          >\r\n                            <FileCopyRoundedIcon />\r\n                          </Avatar>\r\n\r\n                          <div className=\"descrip\">\r\n                            <div className=\"title\" style={{ fontWeight: 500 }}>\r\n                              {material.descrip}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <small>\r\n                          {parseDateTimeOrDefault(material.encoded_at, \"-\")}\r\n                        </small>\r\n                      </TableCell>\r\n                      <TableCell align=\"center\">\r\n                        <div className=\"actions\">\r\n                          <IconButtonPopper\r\n                            style={{ justifySelf: `end` }}\r\n                            buttons={[\r\n                              {\r\n                                text: \"View Material\",\r\n                                handleClick: () =>\r\n                                  setSelectedMaterial(material),\r\n                              },\r\n                            ]}\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n        <FormDialog\r\n          open={openEnrollStudentModel}\r\n          title=\"Add Material for this Class\"\r\n          handleClose={() => setOpenEnrollStudentModel(false)}\r\n          minWidth={500}\r\n          body={\r\n            <Formik\r\n              initialValues={{\r\n                file: \"\",\r\n                descrip: \"\",\r\n              }}\r\n              onSubmit={async (values: any, formikHelpers) => {\r\n                values.class_pk = class_pk;\r\n                const payload = convertObjectToFormData(values);\r\n\r\n                dispatch(\r\n                  setGeneralPrompt({\r\n                    open: true,\r\n                    continue_callback: () =>\r\n                      dispatch(\r\n                        ClassMaterialActions.addClassMaterialAction(\r\n                          payload,\r\n                          (msg: string) => {\r\n                            formikHelpers.resetForm();\r\n                            dispatch(\r\n                              ClassMaterialActions.setTblClassMaterialAction(\r\n                                class_pk\r\n                              )\r\n                            );\r\n                            setOpenEnrollStudentModel(false);\r\n                          }\r\n                        )\r\n                      ),\r\n                  })\r\n                );\r\n              }}\r\n            >\r\n              {({ setFieldValue }) => (\r\n                <Form id=\"form-save-material\">\r\n                  <Grid container spacing={4} style={{ padding: `1em 0` }}>\r\n                    <Grid item xs={12}>\r\n                      {/* <BtnFileUpload /> */}\r\n                      <input\r\n                        accept=\".docx,.pdf,.doc,.rtf,.pptx,.ppt,image/*\"\r\n                        //   className={classes.input}\r\n                        id=\"contained-button-file\"\r\n                        // multiple\r\n                        type=\"file\"\r\n                        onChange={(e) => {\r\n                          setFieldValue(\"file\", e.target.files[0]);\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <FormikInputField\r\n                        name=\"descrip\"\r\n                        label=\"Description\"\r\n                        multiline={true}\r\n                        required\r\n                        variant=\"outlined\"\r\n                        rows={4}\r\n                        fullWidth\r\n                        InputLabelProps={{\r\n                          shrink: true,\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                form=\"form-save-material\"\r\n              >\r\n                Save Material\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n\r\n        {selectedMaterial && (\r\n          <FormDialog\r\n            open={selectedMaterial !== null}\r\n            handleClose={() => setSelectedMaterial(null)}\r\n            title={selectedMaterial?.descrip}\r\n            maxWidth=\"lg\"\r\n            fullScreen={true}\r\n            body={\r\n              <FileViwer\r\n                file={`${API_BASE_URL}${selectedMaterial?.location}`}\r\n              />\r\n            }\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ClassMaterialView;\r\n","import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateTimeToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ClassRatingProps {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ClassRatingView: FC<ClassRatingProps> = memo(({ class_pk }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tbl_class_ratings = useSelector(\r\n    (store: RootStore) => store.ClassReducer.class_ratings\r\n  );\r\n\r\n  console.log(`tbl_class_ratings`, tbl_class_ratings);\r\n\r\n  const fetch_tbl_class_ratings = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_class_ratings\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassActions.getClassRatings(class_pk));\r\n  }, [class_pk, dispatch]);\r\n\r\n  return (\r\n    <div className=\"class-tab\">\r\n      <LinearLoadingProgress show={fetch_tbl_class_ratings} />\r\n\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Student</TableCell>\r\n              <TableCell width={90}>Rating</TableCell>\r\n              <TableCell width={160}>Rated At</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tbl_class_ratings?.map((r, i) => (\r\n              <TableRow>\r\n                <TableCell>\r\n                  <div className=\"table-cell-profile no-sub\">\r\n                    <CustomAvatar\r\n                      className=\"img\"\r\n                      src={r?.student_info?.picture}\r\n                      errorMessage={r?.student_info?.firstname.charAt(0)}\r\n                    />\r\n\r\n                    <div className=\"title\">\r\n                      {r?.student_info?.firstname} {r?.student_info?.middlename}{\" \"}\r\n                      {r?.student_info?.lastname}\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <div className=\"table-cell-rating\">\r\n                    <div className=\"value\">{r.rate_val} stars</div>\r\n                    <div className=\"start\">\r\n                      <Rating\r\n                        name=\"rating\"\r\n                        value={r.rate_val}\r\n                        precision={1}\r\n                        readOnly\r\n                        // size=\"small\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small>{InvalidDateTimeToDefault(r.rated_at, \"-\")}</small>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ClassRatingView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassSessionApi from \"../Api/ClassSessionApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { FilterEventModel } from \"../Models/CaledarModels\";\r\nimport { ClassSessionModel } from \"../Models/ClassSessionModel\";\r\nimport { ClassSessionReducerTypes } from \"../Types/ClassSessionTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setTutorClassSessionCalendarAction = (\r\n  payload: FilterEventModel\r\n) => async (dispatch: Dispatch<ClassSessionReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_sessions\",\r\n      fetch_tutor_class_sessions: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getTutorClassSessionCalendarApi(\r\n      payload\r\n    );\r\n    console.log(`cal`, response);\r\n    dispatch({\r\n      type: \"set_fetch_tutor_class_sessions\",\r\n      fetch_tutor_class_sessions: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_tutor_class_sessions\",\r\n        tutor_class_sessions: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const setStatsSessionCalendarAction = () => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_stats_class_session\",\r\n      fetch_stats_class_session: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getStatsSessionCalendarApi();\r\n    console.log(`stats`, response);\r\n    dispatch({\r\n      type: \"set_fetch_stats_class_session\",\r\n      fetch_stats_class_session: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_stats_class_session\",\r\n        stats_class_session: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const getClassSessionsAction = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"set_fetch_class_sessions\",\r\n      fetch_class_sessions: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getClassSessionsApi(\r\n      class_pk\r\n    );\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_class_sessions\",\r\n        class_sessions: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"set_fetch_class_sessions\",\r\n      fetch_class_sessions: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport const setSingleClassSession = (session_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_session\",\r\n      fetch_single_class_session: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getSingleClassSession(\r\n      session_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_session\",\r\n        single_class_session: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_single_class_session\",\r\n      fetch_single_class_session: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst startClassSession = (\r\n  payload: ClassSessionModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.startClassSession(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst endClassSession = (\r\n  payload: ClassSessionModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.endClassSession(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst unattendedClassSession = (\r\n  payload: ClassSessionModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.unattendedClassSession(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getTutorSessionCal = (tutor_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_tutor_session_cal\",\r\n      fetch_tutor_session_cal: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getTutorSessionCal(\r\n      tutor_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"tutor_session_cal\",\r\n        tutor_session_cal: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_tutor_session_cal\",\r\n      fetch_tutor_session_cal: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst getStudentSessionCal = (student_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_student_session_cal\",\r\n      fetch_student_session_cal: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getStudentSessionCal(\r\n      student_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"student_session_cal\",\r\n        student_session_cal: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_student_session_cal\",\r\n      fetch_student_session_cal: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst getLoggedInTutorSessionCalendar = () => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_logged_in_tutor_session_cal\",\r\n      fetch_logged_in_tutor_session_cal: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getLoggedInTutorSessionCalendar();\r\n\r\n    console.log(`response`, response);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"logged_in_tutor_session_cal\",\r\n        logged_in_tutor_session_cal: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_logged_in_tutor_session_cal\",\r\n      fetch_logged_in_tutor_session_cal: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\nconst getLoggedStudentCalendar = () => async (\r\n  dispatch: Dispatch<ClassSessionReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_logged_student_calendar\",\r\n      fetch_logged_student_calendar: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionApi.getLoggedStudentCalendar();\r\n\r\n    console.log(`response`, response);\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"logged_student_calendar\",\r\n        logged_student_calendar: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_logged_student_calendar\",\r\n      fetch_logged_student_calendar: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  getTutorSessionCal,\r\n  getStudentSessionCal,\r\n  getLoggedInTutorSessionCalendar,\r\n  startClassSession,\r\n  endClassSession,\r\n  unattendedClassSession,\r\n  getLoggedStudentCalendar,\r\n};\r\n","import {\r\n  Chip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory, useParams } from \"react-router-dom\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport {\r\n  parseDateAndDayOfWeekOrDefault,\r\n  parseDateTimeOrDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { getClassSessionsAction } from \"../../../Services/Actions/ClassSessionActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ManageClassSessionTutorInterface {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ClassSessionView: FC<ManageClassSessionTutorInterface> = memo(\r\n  ({ class_pk }) => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<any>();\r\n    const history = useHistory();\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer.user.user_type\r\n    );\r\n\r\n    const class_sessions = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.class_sessions\r\n    );\r\n    const fetch_class_sessions = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_class_sessions\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_data = () => {\r\n        dispatch(getClassSessionsAction(class_pk));\r\n      };\r\n\r\n      mounted && fetch_data();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_pk, dispatch]);\r\n\r\n    return (\r\n      <div className=\"class-tab\">\r\n        <LinearLoadingProgress show={fetch_class_sessions} />\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"auto\">Sched Date</TableCell>\r\n                <TableCell width=\"auto\">Status</TableCell>\r\n                <TableCell width=\"auto\">Began At</TableCell>\r\n                <TableCell width=\"auto\">Ended At</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {class_sessions?.map((session, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    {user_type === \"admin\" ? (\r\n                      <span style={{ fontWeight: 500 }}>\r\n                        {parseDateAndDayOfWeekOrDefault(session.start_date, \"\")}\r\n                      </span>\r\n                    ) : (\r\n                      <NavLink\r\n                        to={`/${user_type}/class/${class_pk}/session/${session.session_pk}`}\r\n                        style={{ fontWeight: 500 }}\r\n                      >\r\n                        {parseDateAndDayOfWeekOrDefault(session.start_date, \"\")}\r\n                      </NavLink>\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <Chip\r\n                      style={{\r\n                        backgroundColor: session.sts_bgcolor,\r\n                        color: session.sts_color,\r\n                      }}\r\n                      label={session.sts_desc}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {session?.began ? (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#f5f5f5`,\r\n                          color: `blue`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label={parseDateTimeOrDefault(\r\n                          session.began,\r\n                          \"to be decided\"\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#fff`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label=\"to be decided\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {session?.ended ? (\r\n                      <Chip\r\n                        style={{\r\n                          backgroundColor: `#f5f5f5`,\r\n                          color: `blue`,\r\n                        }}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        label={parseDateTimeOrDefault(\r\n                          session.ended,\r\n                          \"to be decided\"\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      <Chip\r\n                        size=\"small\"\r\n                        style={{\r\n                          backgroundColor: `#fff`,\r\n                        }}\r\n                        variant=\"outlined\"\r\n                        label=\"to be decided\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                  {/* {user_type !== \"admin\" && (\r\n                    <TableCell align=\"center\">\r\n                      <IconButtonPopper\r\n                        style={{ justifySelf: `end` }}\r\n                        buttons={[\r\n                          {\r\n                            text: \"Enter into this session\",\r\n                            handleClick: () => {\r\n                              history.push(\r\n                                \r\n                              );\r\n                            },\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </TableCell>\r\n                  )} */}\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ClassSessionView;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikAutocomplete from \"../../../Component/Formik/FormikAutocomplete\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { ClassStudentModel } from \"../../../Services/Models/ClassStudentModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ClassStudentProps {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ClassStudentView: FC<ClassStudentProps> = memo(({ class_pk }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tbl_class_students = useSelector(\r\n    (store: RootStore) => store.ClassStudentReducer.tbl_class_students\r\n  );\r\n  const fetch_tbl_class_students = useSelector(\r\n    (store: RootStore) => store.ClassStudentReducer.fetch_tbl_class_students\r\n  );\r\n\r\n  const [openEnrollStudentModel, setOpenEnrollStudentModel] = useState(false);\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user?.user_type\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetch_data = () => {\r\n      dispatch(ClassStudentActions.setTblClassStudentsAction(class_pk));\r\n    };\r\n\r\n    mounted && fetch_data();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [class_pk, dispatch]);\r\n\r\n  return (\r\n    <div className=\"class-tab\">\r\n      <LinearLoadingProgress show={fetch_tbl_class_students} />\r\n      <Grid item container justify=\"flex-end\">\r\n        {user_type === \"tutor\" && (\r\n          <Grid item>\r\n            <Button\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              disableElevation\r\n              onClick={() => {\r\n                setOpenEnrollStudentModel(true);\r\n              }}\r\n            >\r\n              Enroll a Student\r\n            </Button>\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Basic Info</TableCell>\r\n              <TableCell>Gender</TableCell>\r\n              <TableCell>Enrolled At</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {tbl_class_students?.length < 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={5}>\r\n                  <span className=\"empty-rows\">No records to show.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {tbl_class_students?.map((student, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>\r\n                  <div className=\"table-cell-profile\">\r\n                    <CustomAvatar\r\n                      className=\"image\"\r\n                      src={`${student.student_details.picture}`}\r\n                      errorMessage={`${student.student_details.firstname?.charAt(\r\n                        0\r\n                      )}${student.student_details.lastname?.charAt(0)}`}\r\n                    />\r\n                    <div className=\"title\">\r\n                      <span style={{ textTransform: \"capitalize\" }}>\r\n                        {student.student_details.firstname}{\" \"}\r\n                        {student.student_details.middlename}{\" \"}\r\n                        {student.student_details.lastname}{\" \"}\r\n                        {student.student_details.suffix}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"sub-title\">\r\n                      Grade {student.student_details.grade}\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  {student.student_details.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                </TableCell>\r\n                <TableCell>\r\n                  {parseDateTimeOrDefault(student.encoded_at, \"-\")}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <FormDialog\r\n        open={openEnrollStudentModel}\r\n        title=\"Choose a student to enroll\"\r\n        handleClose={() => setOpenEnrollStudentModel(false)}\r\n        minWidth={500}\r\n        body={\r\n          <Formik\r\n            initialValues={{\r\n              student_pk: \"\",\r\n              student_name: \"\",\r\n            }}\r\n            onSubmit={(values, formikHelpers) => {\r\n              const payload: ClassStudentModel = {\r\n                student_pk: parseInt(values.student_pk),\r\n                class_pk: class_pk,\r\n                student_name: values.student_name,\r\n              };\r\n\r\n              dispatch(\r\n                setGeneralPrompt({\r\n                  open: true,\r\n                  continue_callback: () =>\r\n                    dispatch(\r\n                      ClassStudentActions.enrollClassStudentAction(\r\n                        payload,\r\n                        (msg: string) => {\r\n                          formikHelpers.resetForm();\r\n                          setOpenEnrollStudentModel(false);\r\n                          dispatch(\r\n                            ClassStudentActions.setTblClassStudentsAction(\r\n                              class_pk\r\n                            )\r\n                          );\r\n                        }\r\n                      )\r\n                    ),\r\n                })\r\n              );\r\n            }}\r\n          >\r\n            <Form id=\"form-enroll-student\">\r\n              <Grid container spacing={2} style={{ padding: `1em 0` }}>\r\n                <Grid item xs={12}>\r\n                  <FormikAutocomplete\r\n                    label=\"Student\"\r\n                    optKeyId=\"id\"\r\n                    optKeyLabel=\"label\"\r\n                    inputFieldName=\"student_pk\"\r\n                    selectFieldName=\"student_name\"\r\n                    endPoint=\"api/student/searchStudentNotInClass\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Enter the student name\"\r\n                    other_payload={{\r\n                      class_pk: class_pk,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={12} container justify=\"flex-end\">\r\n                  <Grid item>\r\n                    \r\n                  </Grid>\r\n                </Grid> */}\r\n              </Grid>\r\n            </Form>\r\n          </Formik>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              color=\"primary\"\r\n              type=\"submit\"\r\n              disableElevation\r\n              variant=\"contained\"\r\n              form=\"form-enroll-student\"\r\n            >\r\n              Enroll Student\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ClassStudentView;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n  SessionTaskSubModel,\r\n} from \"../Models/ClassSessionTaskModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/task/`;\r\n\r\nconst getAllClassTask = async (class_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTask\", {\r\n    class_pk: class_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassTask = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleClassTask\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addClassTask\", payload);\r\n  return response;\r\n};\r\nconst updateClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst toggleSubmitClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"toggleSubmitClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst changeStatusClassTask = async (\r\n  payload: SessionTaskModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"changeStatusClassTask\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllClassTaskQues = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTaskQues\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getSingleClassTaskQues = async (\r\n  task_ques_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getSingleClassTaskQues\",\r\n    { task_ques_pk: task_ques_pk }\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateClassTaskQues = async (\r\n  payload: SessionTaskQuesModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateClassTaskQues\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getAllClassTaskSub = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllClassTaskSub\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getAllStudentsSubmit = async (\r\n  class_task_pk: number\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getAllStudentsSubmit\", {\r\n    class_task_pk: class_task_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst addClassTaskSub = async (\r\n  payload: Array<SessionTaskSubModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"addClassTaskSub\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateTaskSub = async (\r\n  payload: Array<SessionTaskSubModel>\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateTaskSub\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getAllClassTask,\r\n  getSingleClassTask,\r\n  addClassTask,\r\n  updateClassTask,\r\n  toggleSubmitClassTask,\r\n  changeStatusClassTask,\r\n  getAllClassTaskQues,\r\n  getSingleClassTaskQues,\r\n  updateClassTaskQues,\r\n  getAllClassTaskSub,\r\n  addClassTaskSub,\r\n  getAllStudentsSubmit,\r\n  updateTaskSub,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport ClassSessionTaskApi from \"../Api/ClassSessionTaskApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n  SessionTaskSubModel,\r\n} from \"../Models/ClassSessionTaskModels\";\r\nimport { ClassSessionTaskReducerTypes } from \"../Types/ClassSessionTaskTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst setAllClassTask = (class_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task\",\r\n      fetch_all_class_task: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTask(\r\n      class_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task\",\r\n        all_class_task: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task\",\r\n      fetch_all_class_task: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setSingleClassTask = (class_task_pk: number, toNull?: boolean) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  if (toNull) {\r\n    dispatch({\r\n      type: \"single_class_task\",\r\n      single_class_task: null,\r\n    });\r\n    return;\r\n  }\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_task\",\r\n      fetch_single_class_task: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getSingleClassTask(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_task\",\r\n        single_class_task: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_single_class_task\",\r\n      fetch_single_class_task: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst addClassMaterialAction = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.addClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateClassMaterialAction = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst changeStatusClassTask = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.changeStatusClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst toggleSubmitClassTask = (\r\n  payload: SessionTaskModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.toggleSubmitClassTask(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateClassTaskQues = (\r\n  payload: SessionTaskQuesModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateClassTaskQues(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst addClassTaskSub = (\r\n  payload: Array<SessionTaskSubModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.addClassTaskSub(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateTaskSub = (\r\n  payload: Array<SessionTaskSubModel>,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.updateTaskSub(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst setAllClassTaskQues = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTaskQues(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task_ques\",\r\n        all_class_task_ques: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setSingleClassTaskQues = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_single_class_task_ques\",\r\n      fetch_single_class_task_ques: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getSingleClassTaskQues(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"single_class_task_ques\",\r\n        single_class_task_ques: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_ques\",\r\n      fetch_all_class_task_ques: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setAllClassTaskSub = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_class_task_sub\",\r\n      fetch_all_class_task_sub: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllClassTaskSub(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_class_task_sub\",\r\n        all_class_task_sub: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_class_task_sub\",\r\n      fetch_all_class_task_sub: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nconst setAllStudentsSubmit = (class_task_pk: number) => async (\r\n  dispatch: Dispatch<ClassSessionTaskReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_all_student_submit\",\r\n      fetch_all_student_submit: true,\r\n    });\r\n    const response: IServerResponse = await ClassSessionTaskApi.getAllStudentsSubmit(\r\n      class_task_pk\r\n    );\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_student_submit\",\r\n        all_student_submit: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetch_all_student_submit\",\r\n      fetch_all_student_submit: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`reducer error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  setAllClassTask,\r\n  setSingleClassTask,\r\n  setAllClassTaskQues,\r\n  setSingleClassTaskQues,\r\n  setAllClassTaskSub,\r\n  addClassMaterialAction,\r\n  updateClassMaterialAction,\r\n  changeStatusClassTask,\r\n  toggleSubmitClassTask,\r\n  updateClassTaskQues,\r\n  addClassTaskSub,\r\n  setAllStudentsSubmit,\r\n  updateTaskSub,\r\n};\r\n","import {\r\n  Chip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\ninterface ClassTaskProps {\r\n  class_pk: number;\r\n}\r\n\r\nexport const ClassTaskView: FC<ClassTaskProps> = memo(({ class_pk }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user.user_type\r\n  );\r\n\r\n  const all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.all_class_task\r\n  );\r\n  const fetch_all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.fetch_all_class_task\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassSessionTaskActions.setAllClassTask(class_pk));\r\n  }, [dispatch, class_pk]);\r\n\r\n  return (\r\n    <div className=\"class-tab\">\r\n      <LinearLoadingProgress show={fetch_all_class_task} />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"20%\">Task Title</TableCell>\r\n              <TableCell width=\"50%\">Description/Instruction</TableCell>\r\n              <TableCell width=\"10%\">Status</TableCell>\r\n              <TableCell width=\"15%\">Due Date</TableCell>\r\n              {user_type !== \"admin\" && <TableCell width=\"5%\"></TableCell>}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {all_class_task?.length < 1 && (\r\n              <TableRow>\r\n                <TableCell align=\"center\" colSpan={5}>\r\n                  <span className=\"empty-rows\">No records to show.</span>\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n\r\n            {all_class_task?.map((t, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{t.task_title}</TableCell>\r\n                <TableCell>\r\n                  <small>{t.task_desc}</small>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label={t.status_dtls.sts_desc}\r\n                    style={{\r\n                      color: t.status_dtls.sts_color,\r\n                      backgroundColor: t.status_dtls.sts_bgcolor,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small style={{ fontWeight: 500 }}>\r\n                    {parseDateTimeOrDefault(t.due_date, \"\")}\r\n                  </small>\r\n                </TableCell>\r\n                {user_type !== \"admin\" && (\r\n                  <TableCell align=\"center\">\r\n                    <IconButtonPopper\r\n                      style={{ justifySelf: `end` }}\r\n                      buttons={[\r\n                        {\r\n                          text: \"Go to Task\",\r\n                          handleClick: () => {\r\n                            dispatch(\r\n                              ClassSessionTaskActions.setSingleClassTask(\r\n                                t.class_task_pk\r\n                              )\r\n                            );\r\n                          },\r\n                        },\r\n                      ]}\r\n                    />\r\n                  </TableCell>\r\n                )}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ClassTaskView;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { DbClassTypes } from \"../../../Storage/LocalDatabase\";\r\ninterface IEditClassAdminDialog {\r\n  initial_form_values: ClassModel;\r\n  open_edit_class: boolean;\r\n  handleOpenEditClass: () => void;\r\n  handleCloseEditClass: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  class_desc: yup.string().required().max(255).label(\"Class Description\"),\r\n  course_pk: yup.string().nullable().required().max(255).label(\"Course\"),\r\n  course_desc: yup.string().required().max(255).label(\"Course\"),\r\n  course_duration: yup.string().required().max(255).label(\"Class Duration\"),\r\n  room_pk: yup.string().nullable().required().max(255).label(\"Room\"),\r\n  room_desc: yup.string().required().max(255).label(\"Room\"),\r\n  class_type: yup.string().required().max(255).label(\"Class Type\"),\r\n  tutor_pk: yup.string().nullable().required().max(255).label(\"Tutor\"),\r\n  tutor_name: yup.string().required().max(255).label(\"Tutor\"),\r\n  start_date: yup.date().nullable().required().label(\"Start Date\"),\r\n  start_time: yup.string().required().max(255).label(\"Start Time\"),\r\n  end_time: yup.string().required().max(255).label(\"End Time\"),\r\n  session_count: yup\r\n    .number()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(11)\r\n    .label(\"Number of sessions\"),\r\n  class_sessions: yup.array().min(1, \"Please select at least one date\"),\r\n});\r\n\r\nexport const EditClassAdminDialog: FC<IEditClassAdminDialog> = memo(\r\n  ({\r\n    initial_form_values,\r\n    open_edit_class,\r\n    handleOpenEditClass,\r\n    handleCloseEditClass,\r\n  }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (form_values: ClassModel) => {\r\n        //   dispatch(\r\n        //     setGeneralPrompt({\r\n        //       open: true,\r\n        //       continue_callback: () =>\r\n        //         dispatch(\r\n        //           addClassAction(form_values, (msg: string) => {\r\n        //             setSuccessDialog({\r\n        //               message: msg,\r\n        //               open: true,\r\n        //             });\r\n        //           })\r\n        //         ),\r\n        //     })\r\n        //   );\r\n      },\r\n      [dispatch]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open_edit_class}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleCloseEditClass()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    className=\"clinic-adding-form\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          name=\"class_desc\"\r\n                          label=\"Class Description\"\r\n                          placeholder=\"Enter the class description\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikSelect\r\n                          data={DbClassTypes}\r\n                          label=\"Class Type\"\r\n                          name=\"class_type\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          variant=\"outlined\"\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button color=\"primary\" variant=\"contained\">\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditClassAdminDialog;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport ClassActions, {\r\n  setSelectedClassAction,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\ninterface IEditClassStatusDialog {\r\n  new_sts: \"a\" | \"e\" | \"d\";\r\n  initial_values: ClassModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  remarks: yup.string().required().max(255).label(\"Remarks\"),\r\n});\r\n\r\nexport const EditClassStatusDialog: FC<IEditClassStatusDialog> = memo(\r\n  ({ new_sts, initial_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (form_values: ClassModel) => {\r\n        if (new_sts === \"a\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassActions.approveClass(form_values, (msg: string) => {\r\n                    dispatch(setSelectedClassAction(form_values.class_pk));\r\n                    handleClose();\r\n                  })\r\n                ),\r\n            })\r\n          );\r\n        } else if (new_sts === \"d\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassActions.declineClass(form_values, (msg: string) => {\r\n                    dispatch(setSelectedClassAction(form_values.class_pk));\r\n                    handleClose();\r\n                  })\r\n                ),\r\n            })\r\n          );\r\n        } else if (new_sts === \"e\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassActions.endClass(form_values, (msg: string) => {\r\n                    dispatch(setSelectedClassAction(form_values.class_pk));\r\n                    handleClose();\r\n                  })\r\n                ),\r\n            })\r\n          );\r\n        }\r\n      },\r\n      [dispatch, handleClose, new_sts]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_values}\r\n                validationSchema={formSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {() => (\r\n                  <Form\r\n                    id=\"form-edit-class-status\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          name=\"remarks\"\r\n                          label=\"Class Remarks\"\r\n                          placeholder=\"Write the class remarks here\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={15}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                form=\"form-edit-class-status\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditClassStatusDialog;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport { ClassRatingModel } from \"../../../Services/Models/ClassRatingModel\";\r\ninterface IRateClassDialog {\r\n  class_pk: number;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  rate_val: yup.number().required().moreThan(0).label(\"Rating\"),\r\n});\r\n\r\nexport const RateClassDialog: FC<IRateClassDialog> = memo(\r\n  ({ class_pk, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (form_values: ClassRatingModel) => {\r\n        const payload: ClassRatingModel = {\r\n          rate_val: form_values.rate_val,\r\n          class_pk: class_pk,\r\n        };\r\n\r\n        console.log(`payload`, payload);\r\n        // dispatch(\r\n        //   setGeneralPrompt({\r\n        //     open: true,\r\n        //     continue_callback: () =>\r\n        //       dispatch(\r\n        //         ClassActions.approveClass(form_values, (msg: string) => {\r\n        //           dispatch(setSelectedClassAction(form_values.class_pk));\r\n        //           handleClose();\r\n        //         })\r\n        //       ),\r\n        //   })\r\n        // );\r\n      },\r\n      [class_pk]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"How much stars do you want to give in this class?\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={{\r\n                  rate_val: 0,\r\n                }}\r\n                validationSchema={formSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ setFieldValue, errors, values, touched }) => (\r\n                  <Form\r\n                    id=\"form-edit-class-status\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid item>\r\n                        {(() => {\r\n                          const name = \"rate_val\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (e: any) => {\r\n                            setFieldValue(name, e.target.value);\r\n                          };\r\n                          return (\r\n                            <Rating\r\n                              size=\"large\"\r\n                              name={name}\r\n                              value={values[name]}\r\n                              onChange={handleChange}\r\n                              precision={1}\r\n                              // error={!!errorText}\r\n                              // helperText={errorText}\r\n                            />\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                form=\"form-edit-class-status\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default RateClassDialog;\r\n","import { Chip, Grid, useTheme } from \"@material-ui/core\";\r\nimport { Rating, Skeleton } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Switch, useParams } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinkTabs, { ITab } from \"../../../Component/LinkTabs\";\r\nimport {\r\n  InvalidDateToDefault,\r\n  InvalidTimeToDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { StringEmptyToDefault } from \"../../../Hooks/UseStringFormatter\";\r\nimport ClassActions, {\r\n  setSelectedClassAction,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport ClassStudentActions from \"../../../Services/Actions/ClassStudentActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { ClassRatingModel } from \"../../../Services/Models/ClassRatingModel\";\r\nimport { ClassStudentModel } from \"../../../Services/Models/ClassStudentModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledManageClassAdmin } from \"../../AdminViews/AdminClassView/styles\";\r\nimport ClassMaterialView from \"./ClassMaterialView\";\r\nimport ClassRatingView from \"./ClassRatingView\";\r\nimport ClassSessionView from \"./ClassSessionView\";\r\nimport ClassStudentView from \"./ClassStudentView\";\r\nimport ClassTaskView from \"./ClassTaskView\";\r\nimport EditClassAdminDialog from \"./EditClassAdminDialog\";\r\nimport EditClassStatusDialog from \"./EditClassStatusDialog\";\r\nimport RateClassDialog from \"./RateClassDialog\";\r\ninterface IManageClassView {}\r\n\r\nexport const ManageClassView: FC<IManageClassView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n  const theme = useTheme();\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user?.user_type\r\n  );\r\n\r\n  const selected_class = useSelector(\r\n    (store: RootStore) => store.ClassReducer.selected_class\r\n  );\r\n\r\n  const fetching_selected_class = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetching_selected_class\r\n  );\r\n\r\n  const [open_edit_class, set_open_edit_class] = useState(false);\r\n\r\n  const handleOpenEditClass = useCallback(() => {\r\n    set_open_edit_class(true);\r\n  }, []);\r\n\r\n  const handleCloseEditClass = useCallback(() => {\r\n    set_open_edit_class(false);\r\n  }, []);\r\n\r\n  const [new_status, set_new_status] = useState<null | \"a\" | \"d\" | \"e\">(null);\r\n  const [open_edit_class_status, set_open_edit_class_status] = useState(false);\r\n\r\n  const handleOpenEditClassStatus = useCallback(() => {\r\n    set_open_edit_class_status(true);\r\n  }, []);\r\n\r\n  const handleCloseEditClassStatus = useCallback(() => {\r\n    set_open_edit_class_status(false);\r\n  }, []);\r\n\r\n  const [open_rating, set_open_rating] = useState(false);\r\n\r\n  const handleOpenRating = useCallback(() => {\r\n    set_open_rating(true);\r\n  }, []);\r\n\r\n  const handleCloseRating = useCallback(() => {\r\n    set_open_rating(false);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (params.class_pk) {\r\n      dispatch(setSelectedClassAction(params.class_pk));\r\n    }\r\n  }, [dispatch, params.class_pk]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setPageLinks([\r\n        {\r\n          link: \"/admin/class\",\r\n          title: \"Class\",\r\n        },\r\n        {\r\n          link: window.location.pathname,\r\n          title: \"Manage Class\",\r\n        },\r\n      ])\r\n    );\r\n  }, [dispatch]);\r\n\r\n  let ButtonOptions: any = [];\r\n\r\n  if (user_type === \"admin\") {\r\n    ButtonOptions = [\r\n      {\r\n        text: \"Edit Class Info\",\r\n        color: \"primary\",\r\n        handleClick: handleOpenEditClass,\r\n      },\r\n      {\r\n        text: \"Cancel this Class\",\r\n        color: \"primary\",\r\n        disabled: selected_class?.sts_pk !== \"fa\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  if (user_type === \"tutor\") {\r\n    if (selected_class?.sts_pk === \"fa\") {\r\n      ButtonOptions.push({\r\n        text: \"Accept this class\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          set_new_status(\"a\");\r\n          handleOpenEditClassStatus();\r\n        },\r\n      });\r\n      ButtonOptions.push({\r\n        text: \"Decline this class\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          set_new_status(\"d\");\r\n          handleOpenEditClassStatus();\r\n        },\r\n      });\r\n    }\r\n\r\n    if (selected_class?.sts_pk === \"a\") {\r\n      ButtonOptions.push({\r\n        text: \"End this class\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          set_new_status(\"e\");\r\n          handleOpenEditClassStatus();\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  if (user_type === \"student\") {\r\n    ButtonOptions.push({\r\n      text: \"Join/Enroll Class\",\r\n      color: \"primary\",\r\n      handleClick: () => {\r\n        const payload: ClassStudentModel = {\r\n          class_pk: selected_class.class_pk,\r\n        };\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassStudentActions.joinStudentToClassAction(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    dispatch(setSelectedClassAction(selected_class.class_pk));\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  let Tabs: Array<ITab> = [\r\n    {\r\n      label: \"Session\",\r\n      link: `/${user_type}/class/${params.class_pk}/session`,\r\n    },\r\n    {\r\n      label: \"Student\",\r\n      link: `/${user_type}/class/${params.class_pk}/student`,\r\n    },\r\n    {\r\n      label: \"Material\",\r\n      link: `/${user_type}/class/${params.class_pk}/material`,\r\n    },\r\n    {\r\n      label: \"Task\",\r\n      link: `/${user_type}/class/${params.class_pk}/task`,\r\n    },\r\n  ];\r\n\r\n  if (user_type === \"admin\") {\r\n    Tabs.push({\r\n      label: \"Rating\",\r\n      link: `/${user_type}/class/${params.class_pk}/rating`,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledManageClassAdmin theme={theme} maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4} lg={3}>\r\n            <div className=\"container-body \">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n              >\r\n                <Grid item xs={10}>\r\n                  <div className=\"container-title\">Class Information</div>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <IconButtonPopper\r\n                    buttonColor=\"primary\"\r\n                    buttons={ButtonOptions}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {fetching_selected_class && !selected_class ? (\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  animation=\"wave\"\r\n                  width={`100%`}\r\n                  height={250}\r\n                />\r\n              ) : (\r\n                <>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"class-profile\">\r\n                        <CustomAvatar\r\n                          style={{\r\n                            height: 200,\r\n                            width: `90%`,\r\n                          }}\r\n                          variant=\"square\"\r\n                          src={selected_class?.pic}\r\n                          errorMessage=\"No image found!\"\r\n                        />\r\n\r\n                        <div className=\"title\">\r\n                          {selected_class?.class_desc}\r\n                        </div>\r\n                        <div className=\"sub-title\">\r\n                          {selected_class?.course_desc}\r\n                        </div>\r\n                        <div className=\"remarks\">\r\n                          {StringEmptyToDefault(\r\n                            selected_class?.remarks,\r\n                            \"No remarks yet!\"\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <div className=\"other-info-container\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Av. Class Rating</div>\r\n                          <div className=\"value\">\r\n                            {selected_class?.average_rating ? (\r\n                              <Rating\r\n                                precision={0.1}\r\n                                readOnly\r\n                                value={selected_class?.average_rating}\r\n                              />\r\n                            ) : (\r\n                              <b>TBD</b>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {user_type === \"student\" && (\r\n                          <div className=\"form-group\">\r\n                            <div className=\"label\">You Rated</div>\r\n                            <div className=\"value\">\r\n                              {selected_class?.student_rating && (\r\n                                <Rating\r\n                                  value={selected_class?.student_rating}\r\n                                  name=\"avearge_rating\"\r\n                                  onChange={(event, val) => {\r\n                                    const payload: ClassRatingModel = {\r\n                                      rate_val: val,\r\n                                      class_pk: selected_class.class_pk,\r\n                                    };\r\n\r\n                                    dispatch(\r\n                                      ClassActions.rateClass(payload, () => {\r\n                                        dispatch(\r\n                                          setSelectedClassAction(\r\n                                            selected_class.class_pk\r\n                                          )\r\n                                        );\r\n                                      })\r\n                                    );\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        )}\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Status</div>\r\n                          <div className=\"value\">\r\n                            <Chip\r\n                              label={selected_class?.sts_desc}\r\n                              style={{\r\n                                color: selected_class?.sts_color,\r\n                                backgroundColor: selected_class?.sts_bgcolor,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Tutor</div>\r\n                          <div className=\"value profile\">\r\n                            <CustomAvatar\r\n                              src={selected_class?.tutor_info.picture}\r\n                              errorMessage={selected_class?.tutor_name.charAt(\r\n                                0\r\n                              )}\r\n                              style={{\r\n                                height: 30,\r\n                                width: 30,\r\n                              }}\r\n                            />\r\n\r\n                            <div\r\n                              style={{\r\n                                color: user_type === \"student\" && `blue`,\r\n                                cursor: user_type === \"student\" && `pointer`,\r\n                              }}\r\n                              onClick={() => {\r\n                                if (\r\n                                  user_type === \"student\" &&\r\n                                  selected_class.tutor_info\r\n                                ) {\r\n                                  dispatch(\r\n                                    TutorActions.getSingTutorToStudent(\r\n                                      selected_class?.tutor_pk\r\n                                    )\r\n                                  );\r\n                                }\r\n                              }}\r\n                            >\r\n                              {selected_class?.tutor_name}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Class Setup</div>\r\n                          <div className=\"value\">\r\n                            {selected_class?.class_type === \"o\"\r\n                              ? \"Online\"\r\n                              : \"Class Room\"}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Duration</div>\r\n                          <div className=\"value\">\r\n                            {selected_class?.course_duration} minutes\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Scheduled Date</div>\r\n                          <div className=\"value\">\r\n                            {InvalidDateToDefault(\r\n                              selected_class?.start_date,\r\n                              \"-\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Time Interval</div>\r\n                          <div className=\"value\">\r\n                            {InvalidTimeToDefault(\r\n                              selected_class?.start_time,\r\n                              \"\"\r\n                            )}{\" \"}\r\n                            -{\" \"}\r\n                            {InvalidTimeToDefault(selected_class?.end_time, \"\")}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8} lg={9}>\r\n            <div className=\"container-body \">\r\n              <LinkTabs\r\n                tabs={Tabs}\r\n                RenderSwitchComponent={\r\n                  <Switch>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/session`}\r\n                      exact\r\n                    >\r\n                      <ClassSessionView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/student`}\r\n                      exact\r\n                    >\r\n                      <ClassStudentView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/material`}\r\n                      exact\r\n                    >\r\n                      <ClassMaterialView class_pk={params.class_pk} />\r\n                    </Route>\r\n\r\n                    <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/task`}\r\n                      exact\r\n                    >\r\n                      <ClassTaskView class_pk={params.class_pk} />\r\n                    </Route>\r\n                    {user_type === \"admin\" && (\r\n                      <Route\r\n                        path={`/${user_type}/class/${params.class_pk}/rating`}\r\n                        exact\r\n                      >\r\n                        <ClassRatingView class_pk={params.class_pk} />\r\n                      </Route>\r\n                    )}\r\n\r\n                    {/* <Route\r\n                      path={`/${user_type}/class/${params.class_pk}/attendance`}\r\n                      exact\r\n                    >\r\n                      <div>Attendance</div>\r\n                    </Route> */}\r\n                  </Switch>\r\n                }\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <EditClassAdminDialog\r\n          initial_form_values={selected_class}\r\n          open_edit_class={open_edit_class}\r\n          handleOpenEditClass={handleOpenEditClass}\r\n          handleCloseEditClass={handleCloseEditClass}\r\n        />\r\n\r\n        {new_status && open_edit_class_status && selected_class && (\r\n          <EditClassStatusDialog\r\n            new_sts={new_status}\r\n            initial_values={selected_class}\r\n            open={open_edit_class_status}\r\n            handleClose={handleCloseEditClassStatus}\r\n          />\r\n        )}\r\n        {selected_class?.class_pk && open_rating && (\r\n          <RateClassDialog\r\n            class_pk={selected_class.class_pk}\r\n            open={open_rating}\r\n            handleClose={handleCloseRating}\r\n          />\r\n        )}\r\n      </StyledManageClassAdmin>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ManageClassView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport CourseApi from \"../Api/CourseApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { CourseModel } from \"../Models/CourseModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { CourseReducerTypes } from \"../Types/CourseTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setCourseDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<CourseReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_course_data_table\",\r\n      fetching_course_data_table: true,\r\n    });\r\n    const response: IServerResponse = await CourseApi.getCourseDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_course_data_table\",\r\n      fetching_course_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_course_data_table\",\r\n        course_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedCourseAction = (course_pk: string) => async (\r\n  dispatch: Dispatch<CourseReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_course\",\r\n      fetching_selected_course: true,\r\n    });\r\n    const response: IServerResponse = await CourseApi.getSingleCourseApi(\r\n      course_pk\r\n    );\r\n    dispatch({\r\n      type: \"fetching_selected_course\",\r\n      fetching_selected_course: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_course\",\r\n        selected_course: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addCourseApiAction = (\r\n  payload: CourseModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.addCourseApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateCourse = (\r\n  payload: CourseModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.updateCourse(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst toggleCourseStatus = (\r\n  course_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.toggleCourseStatus(\r\n      course_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateCourseImage = (\r\n  payload: CourseModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<CourseReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await CourseApi.updateCourseImage(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  updateCourse,\r\n  toggleCourseStatus,\r\n  updateCourseImage,\r\n};\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addCourseApiAction } from \"../../../Services/Actions/CourseActions\";\r\n\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\nimport { DbCourseDurations } from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddCourseAdminViewInterface {}\r\n\r\nconst initFormValues: CourseModel = {\r\n  course_desc: \"\",\r\n  est_duration: 30,\r\n  picture: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  course_desc: yup.string().required().max(255).label(\"Course Description\"),\r\n  est_duration: yup\r\n    .number()\r\n    .moreThan(29, \"Duration must be 30 minutes or above\")\r\n    .lessThan(361, \"Duration must not exceed to 4hrs\")\r\n    .required()\r\n    .max(150)\r\n    .label(\"Estimated Duration\"),\r\n});\r\n\r\nexport const AddCourseAdminView: FC<AddCourseAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<CourseModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: CourseModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addCourseApiAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/course\",\r\n            title: \"Courses\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Course\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            className=\"clinic-adding-form\"\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 10,\r\n              padding: `1em 2em`,\r\n            }}\r\n          >\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">Fill-up the course details</div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={2}>\r\n                  <Grid xs={12} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={180}\r\n                        width={300}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        variant=\"rounded\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        name=\"course_desc\"\r\n                        label=\"Course Description\"\r\n                        placeholder=\"Enter course description\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={6} item>\r\n                      <FormikSelect\r\n                        data={DbCourseDurations}\r\n                        label=\"Est. Duration\"\r\n                        name=\"est_duration\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        variant=\"outlined\"\r\n                        required\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        label=\"Notes/Notice\"\r\n                        name=\"notes\"\r\n                        placeholder=\"Write some notes here...\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        multiline={true}\r\n                        rows={6}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Course\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/course`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/course`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddCourseAdminView;\r\n","import { Button, FormHelperText, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikSelect from \"../../../Component/Formik/FormikSelect\";\r\nimport CourseActions from \"../../../Services/Actions/CourseActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\nimport { DbCourseDurations } from \"../../../Storage/LocalDatabase\";\r\ninterface IEditCourseDialog {\r\n  initial_form_values: CourseModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  handleReloadDataTable: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  course_desc: yup.string().required().max(255).label(\"Course Description\"),\r\n  est_duration: yup\r\n    .number()\r\n    .moreThan(29, \"Duration must be 30 minutes or above\")\r\n    .lessThan(361, \"Duration must not exceed to 4hrs\")\r\n    .required()\r\n    .label(\"Estimated Duration\"),\r\n});\r\n\r\nexport const EditCourseDialog: FC<IEditCourseDialog> = memo(\r\n  ({ initial_form_values, open, handleClose, handleReloadDataTable }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: CourseModel) => {\r\n        payload.course_pk = initial_form_values.course_pk;\r\n        // console.log(`payload`, payload);\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                CourseActions.updateCourse(payload, (msg: string) => {\r\n                  handleReloadDataTable();\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [\r\n        dispatch,\r\n        handleClose,\r\n        handleReloadDataTable,\r\n        initial_form_values.course_pk,\r\n      ]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    id=\"form-edit-course\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    noValidate\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          name=\"course_desc\"\r\n                          label=\"Course Description\"\r\n                          placeholder=\"Enter course description\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikSelect\r\n                          data={DbCourseDurations}\r\n                          label=\"Est. Duration\"\r\n                          name=\"est_duration\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          variant=\"outlined\"\r\n                          required\r\n                          fullWidth\r\n                        />\r\n                        <FormHelperText>\r\n                          Note: Updating the duration will not automatically\r\n                          update all classes involving this course.\r\n                        </FormHelperText>\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Notes/Notice\"\r\n                          name=\"notes\"\r\n                          placeholder=\"Write some notes here...\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={6}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-edit-course\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditCourseDialog;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport CourseActions from \"../../../Services/Actions/CourseActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\ninterface IEditCourseImageDialog {\r\n  initial_form_values: CourseModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  handleReloadDataTable: () => void;\r\n}\r\n\r\nexport const EditCourseImageDialog: FC<IEditCourseImageDialog> = memo(\r\n  ({ initial_form_values, open, handleClose, handleReloadDataTable }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [pic, setPic] = useState<File | null>(null);\r\n    const handleSetPic = useCallback((logo) => {\r\n      setPic(logo);\r\n    }, []);\r\n\r\n    const handleFormSubmit = useCallback(async () => {\r\n      const base64_pic = await fileToBase64(pic);\r\n\r\n      const payload: CourseModel = {\r\n        course_pk: initial_form_values.course_pk,\r\n        picture: base64_pic,\r\n      };\r\n\r\n      console.log(`payoad`, payload);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              CourseActions.updateCourseImage(payload, (msg: string) => {\r\n                handleReloadDataTable();\r\n                handleClose();\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    }, [\r\n      dispatch,\r\n      handleClose,\r\n      handleReloadDataTable,\r\n      initial_form_values.course_pk,\r\n      pic,\r\n    ]);\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid xs={12} container justify=\"center\" item>\r\n                  <div style={{ padding: \"1.5em 0\" }}>\r\n                    <PhotoField\r\n                      label=\"\"\r\n                      height={180}\r\n                      width={300}\r\n                      selectedFile={pic}\r\n                      name=\"pic\"\r\n                      variant=\"rounded\"\r\n                      handleChange={handleSetPic}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditCourseImageDialog;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport CourseActions, {\r\n  setCourseDataTableAction,\r\n} from \"../../../Services/Actions/CourseActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { CourseModel } from \"../../../Services/Models/CourseModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditCourseDialog from \"./EditCourseDialog\";\r\nimport EditCourseImageDialog from \"./EditCourseImageDialog\";\r\n\r\ninterface DataTableCourseAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Course Details\",\r\n    width: 300,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Duration\",\r\n    width: 100,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Notes\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Actions\",\r\n    width: 50,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport const DataTableCourseAdminView: FC<DataTableCourseAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.CourseReducer.fetching_course_data_table\r\n    );\r\n    const data_table: Array<CourseModel> = useSelector(\r\n      (store: RootStore) => store.CourseReducer.course_data_table?.table\r\n    );\r\n\r\n    const [selected_course, set_selected_course] = useState<null | CourseModel>(\r\n      null\r\n    );\r\n\r\n    const [open_edit_course, set_open_edit_course] = useState(false);\r\n\r\n    const [reload_data_table, set_reload_data_table] = useState(0);\r\n\r\n    const handleOpenEditCourse = useCallback(() => {\r\n      set_open_edit_course(true);\r\n    }, []);\r\n    const handleCloseEditCourse = useCallback(() => {\r\n      set_open_edit_course(false);\r\n    }, []);\r\n\r\n    const [open_change_image, set_open_change_image] = useState(false);\r\n\r\n    const handleOpenChangeCourse = useCallback(() => {\r\n      set_open_change_image(true);\r\n    }, []);\r\n    const handleCloseChangeCourseImage = useCallback(() => {\r\n      set_open_change_image(false);\r\n    }, []);\r\n\r\n    const handleReloadDataTable = useCallback(() => {\r\n      set_reload_data_table((c) => c + 1);\r\n    }, []);\r\n\r\n    const handleToggleActiveStatus = useCallback(\r\n      (course_pk: number) => {\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                CourseActions.toggleCourseStatus(course_pk, (msg: string) => {\r\n                  handleReloadDataTable();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleReloadDataTable]\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setCourseDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      reload_data_table,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/course\",\r\n              title: \"Courses\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/course/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Course\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer style={{ height: \"100%\", minHeight: 500 }}>\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile no-sub\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.course_desc?.charAt(0)}`}\r\n                            />\r\n                            <div className=\"title\">\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.course_desc}\r\n                              </span>\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.est_duration} mins</TableCell>\r\n                        <TableCell>\r\n                          <Tooltip title={row.notes ? \"-\" : \"row.notes\"}>\r\n                            <span\r\n                              style={{\r\n                                whiteSpace: `nowrap`,\r\n                                overflow: `hidden`,\r\n                                textOverflow: `ellipsis`,\r\n                                fontSize: \".8em\",\r\n                              }}\r\n                            >\r\n                              {row.notes}\r\n                            </span>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={row.is_active === 1 ? \"Yes\" : \"No\"}\r\n                            style={{\r\n                              backgroundColor:\r\n                                row.is_active === 1 ? \"#0d47a1\" : \"#d50000\",\r\n                              color:\r\n                                row.is_active === 1 ? \"#e3f2fd\" : \"#ffebee\",\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"center\">\r\n                          <IconButtonPopper\r\n                            size=\"small\"\r\n                            buttons={[\r\n                              {\r\n                                text: \"Edit Info.\",\r\n                                handleClick: () => {\r\n                                  set_selected_course(row);\r\n                                  handleOpenEditCourse();\r\n                                },\r\n                              },\r\n                              {\r\n                                text: \"Change Image\",\r\n                                handleClick: () => {\r\n                                  set_selected_course(row);\r\n                                  handleOpenChangeCourse();\r\n                                },\r\n                              },\r\n                              {\r\n                                text:\r\n                                  row.is_active === 1\r\n                                    ? \"Set to Inactive\"\r\n                                    : \"Set to Active\",\r\n                                handleClick: () =>\r\n                                  handleToggleActiveStatus(row.course_pk),\r\n                              },\r\n                            ]}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {selected_course && (\r\n          <>\r\n            <EditCourseDialog\r\n              initial_form_values={selected_course}\r\n              open={open_edit_course}\r\n              handleClose={handleCloseEditCourse}\r\n              handleReloadDataTable={handleReloadDataTable}\r\n            />\r\n\r\n            <EditCourseImageDialog\r\n              initial_form_values={selected_course}\r\n              open={open_change_image}\r\n              handleClose={handleCloseChangeCourseImage}\r\n              handleReloadDataTable={handleReloadDataTable}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableCourseAdminView;\r\n","import React, { FC, memo } from \"react\";\r\n\r\ninterface ILinearGraph {\r\n  progress_count: number;\r\n  total: number;\r\n}\r\n\r\nexport const LinearGraph: FC<ILinearGraph> = memo(\r\n  ({ progress_count, total }) => {\r\n    const perc = (progress_count / total) * 100;\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: `grid`,\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            justifySelf: `end`,\r\n            fontWeight: 600,\r\n            opacity: 0.8,\r\n            fontSize: `.87em`,\r\n          }}\r\n        >\r\n          {progress_count} of {total}\r\n        </div>\r\n        <div\r\n          style={{\r\n            minWidth: 200,\r\n            backgroundColor: `black`,\r\n            display: `grid`,\r\n            gridAutoFlow: `column`,\r\n            gridAutoColumns: `${perc}% ${100 - perc}%`,\r\n            borderRadius: `10px`,\r\n            overflow: `hidden`,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              backgroundColor: `#0686f0`,\r\n              minHeight: 10,\r\n            }}\r\n          ></div>\r\n          <div\r\n            style={{\r\n              backgroundColor: `#f5dcdc`,\r\n              minHeight: 10,\r\n            }}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default LinearGraph;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdminModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/admin/`;\r\n\r\nexport const getAdminDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getAdminDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nexport const addAdminApi = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const updateAdminApi = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateAdmin\", payload);\r\n  return response;\r\n};\r\n\r\nexport const getSingleAdminApi = async (\r\n  admin_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleAdmin\", {\r\n    admin_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getLoggedAdmin = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getLoggedAdmin\", null);\r\n  return response;\r\n};\r\n\r\nconst updateAdminInfo = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateAdminInfo\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst updateAdminImage = async (\r\n  payload: AdminModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"updateAdminImage\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst getTotalAdmin = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTotalAdmin\", {});\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getLoggedAdmin,\r\n  updateAdminInfo,\r\n  updateAdminImage,\r\n  getTotalAdmin,\r\n};\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { RoomModel } from \"../Models/RoomModel\";\r\n\r\nconst API_DEFAULT_ROUTE = `api/room/`;\r\n\r\nconst getRoomDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(\r\n    API_DEFAULT_ROUTE + \"getRoomDataTable\",\r\n    payload\r\n  );\r\n  return response;\r\n};\r\n\r\nconst addRoomApi = async (payload: RoomModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"addRoom\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleRoomApi = async (room_pk: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getSingleRoom\", {\r\n    course_pk: room_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst searchRoomApi = async (search: string): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"searchRoom\", {\r\n    search,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst updateRoom = async (payload: RoomModel): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"updateRoom\", payload);\r\n  return response;\r\n};\r\n\r\nconst toggleRoomStatus = async (room_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"toggleRoomStatus\", {\r\n    room_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getTotalRoom = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(API_DEFAULT_ROUTE + \"getTotalRoom\", {});\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getRoomDataTableApi,\r\n  addRoomApi,\r\n  getSingleRoomApi,\r\n  searchRoomApi,\r\n  updateRoom,\r\n  toggleRoomStatus,\r\n  getTotalRoom,\r\n};\r\n","import {\r\n  Avatar,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport ClassRoundedIcon from \"@material-ui/icons/ClassRounded\";\r\nimport LocalLibraryRoundedIcon from \"@material-ui/icons/LocalLibraryRounded\";\r\nimport MeetingRoomRoundedIcon from \"@material-ui/icons/MeetingRoomRounded\";\r\nimport MenuBookRoundedIcon from \"@material-ui/icons/MenuBookRounded\";\r\nimport StarRateRoundedIcon from \"@material-ui/icons/StarRateRounded\";\r\nimport SupervisedUserCircleRoundedIcon from \"@material-ui/icons/SupervisedUserCircleRounded\";\r\nimport WcRoundedIcon from \"@material-ui/icons/WcRounded\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport LinearGraph from \"../../../Component/LinearGraph\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport AdminApi from \"../../../Services/Api/AdminApi\";\r\nimport ClassApi from \"../../../Services/Api/ClassApi\";\r\nimport CourseApi from \"../../../Services/Api/CourseApi\";\r\nimport RoomApi from \"../../../Services/Api/RoomApi\";\r\nimport StudentApi from \"../../../Services/Api/StudentApi\";\r\nimport TutorApi from \"../../../Services/Api/TutorApi\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledDashboardItem } from \"../../../Styles/GlobalStyles\";\r\nimport \"chartjs-plugin-labels\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\n\r\ninterface IDashboardAdminView {}\r\n\r\ninterface TotalStatsModel {\r\n  total: number;\r\n  link: string;\r\n  label: string;\r\n}\r\n\r\nexport const DashboardAdminView: FC<IDashboardAdminView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const open_class_progress_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.open_class_progress_stats\r\n  );\r\n\r\n  const class_summary_status = useSelector(\r\n    (store: RootStore) => store.ClassReducer.class_summary_status\r\n  );\r\n  const fetch_class_summary_status = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_class_summary_status\r\n  );\r\n\r\n  const most_rated_tutors = useSelector(\r\n    (store: RootStore) => store.TutorReducer.most_rated_tutors\r\n  );\r\n\r\n  const fetch_most_rated_tutors = useSelector(\r\n    (store: RootStore) => store.TutorReducer.fetch_most_rated_tutors\r\n  );\r\n\r\n  const ended_class_rating_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.ended_class_rating_stats\r\n  );\r\n  const fetch_ended_class_rating_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_ended_class_rating_stats\r\n  );\r\n\r\n  const [total_students, set_total_students] = useState<Array<number>>([]);\r\n  const [loading_total_stats, set_loading_total_stats] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetch_data = async () => {\r\n      set_loading_total_stats(true);\r\n      const student_res = await StudentApi.getTotalStudents();\r\n      const tutor_res = await TutorApi.getTotalTutors();\r\n      const admin_res = await AdminApi.getTotalAdmin();\r\n      const course_res = await CourseApi.getTotalCourses();\r\n      const room_res = await RoomApi.getTotalRoom();\r\n      const class_res = await ClassApi.getTotalClasses();\r\n      set_loading_total_stats(false);\r\n\r\n      const totals: Array<number> = [];\r\n\r\n      if (student_res.success) {\r\n        totals.push(student_res.data);\r\n      }\r\n\r\n      if (tutor_res.success) {\r\n        totals.push(tutor_res.data);\r\n      }\r\n\r\n      if (admin_res.success) {\r\n        totals.push(admin_res.data);\r\n      }\r\n\r\n      if (course_res.success) {\r\n        totals.push(course_res.data);\r\n      }\r\n      if (room_res.success) {\r\n        totals.push(room_res.data);\r\n      }\r\n\r\n      if (class_res.success) {\r\n        totals.push(class_res.data);\r\n      }\r\n\r\n      set_total_students(totals);\r\n    };\r\n\r\n    mounted && fetch_data();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassActions.getOpenClassProgressStats());\r\n    dispatch(ClassActions.getClassSummaryStats());\r\n    dispatch(ClassActions.getEndedClassRatingStats());\r\n    dispatch(TutorActions.getMostRatedTutors());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/dashboard\",\r\n            title: \"Dashboard\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n  return (\r\n    <Container maxWidth=\"xl\">\r\n      <Grid container spacing={4} alignItems=\"flex-start\">\r\n        <Grid item xs={12} lg={8}>\r\n          <div>\r\n            <Grid spacing={3} container justify=\"center\">\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/student\" className=\"label\">\r\n                    Total Students\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[0]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <WcRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/tutor\" className=\"label\">\r\n                    Total Tutors\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[1]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <LocalLibraryRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/co-administrator\" className=\"label\">\r\n                    Total Administrators\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[2]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <SupervisedUserCircleRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/course\" className=\"label\">\r\n                    Total Courses\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[3]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <MenuBookRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/room\" className=\"label\">\r\n                    Total Rooms\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[4]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <MeetingRoomRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <StyledDashboardItem>\r\n                  <NavLink to=\"/admin/class\" className=\"label\">\r\n                    Total Classes\r\n                  </NavLink>\r\n                  <div className=\"stat-value\">\r\n                    {loading_total_stats ? (\r\n                      <CircularProgress size={20} />\r\n                    ) : (\r\n                      total_students[5]\r\n                    )}\r\n                  </div>\r\n                  <Avatar\r\n                    className=\"avatar\"\r\n                    style={{\r\n                      backgroundColor: \"#ffebee\",\r\n                      color: \"#b71c1c\",\r\n                    }}\r\n                  >\r\n                    <ClassRoundedIcon />\r\n                  </Avatar>\r\n                </StyledDashboardItem>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} lg={4}>\r\n          <div\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 7,\r\n              padding: `1em`,\r\n            }}\r\n          >\r\n            <div className=\"container-title\">Class Statistics</div>\r\n\r\n            <Grid container justify=\"center\">\r\n              {fetch_class_summary_status && !class_summary_status ? (\r\n                <Grid\r\n                  item\r\n                  style={{\r\n                    minHeight: 200,\r\n                  }}\r\n                >\r\n                  <CircularProgress size={30} />\r\n                </Grid>\r\n              ) : (\r\n                <Grid item xs={12} style={{ padding: ` 1em` }}>\r\n                  <Pie\r\n                    type=\"pie\"\r\n                    height={115}\r\n                    data={{\r\n                      labels: class_summary_status?.map(({ label }) => label),\r\n                      datasets: [\r\n                        {\r\n                          labels: class_summary_status?.map(\r\n                            ({ label }) => label\r\n                          ),\r\n                          data: class_summary_status?.map(({ value }) => value),\r\n                          backgroundColor: class_summary_status?.map(\r\n                            ({ backgroundColor }) => backgroundColor\r\n                          ),\r\n                          borderColor: \"#fff\",\r\n                        },\r\n                      ],\r\n                    }}\r\n                    options={{\r\n                      responsiveAnimationDuration: 1,\r\n                      tooltips: {\r\n                        enabled: false,\r\n                      },\r\n                      plugins: {\r\n                        labels: {\r\n                          render: \"percentage\",\r\n                          precision: 0,\r\n                          showZero: true,\r\n                          fontSize: 12,\r\n                          fontColor: \"#fff\",\r\n                        },\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={8}>\r\n          <Grid container spacing={4}>\r\n            <Grid item xs={12}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: `#fff`,\r\n                  borderRadius: 7,\r\n                  height: `100%`,\r\n                  width: `100%`,\r\n                  padding: `1em`,\r\n                }}\r\n              >\r\n                <div className=\"container-title\">\r\n                  Open Classes <small>(10 classes are currently opened)</small>\r\n                </div>\r\n\r\n                <TableContainer\r\n                  style={{\r\n                    padding: `1em`,\r\n                    paddingTop: 0,\r\n                    height: 260,\r\n                    maxHeight: 260,\r\n                  }}\r\n                >\r\n                  <Table size=\"small\" stickyHeader>\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell width=\"30%\">Class Description</TableCell>\r\n                        <TableCell width=\"40%\">Tutor</TableCell>\r\n                        <TableCell width=\"30%\">Session Progress</TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {open_class_progress_stats?.map((c, i) => (\r\n                        <TableRow key={i}>\r\n                          <TableCell>\r\n                            <NavLink to={`/admin/class/${c?.class_pk}`}>\r\n                              {c?.class_desc}\r\n                            </NavLink>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <div className=\"table-profile\">\r\n                              <CustomAvatar\r\n                                src={c?.tutor_pic}\r\n                                errorMessage={c?.tutor_name?.charAt(0)}\r\n                              />\r\n                              <NavLink to={`/admin/tutor/${c?.tutor_pk}`}>\r\n                                {c?.tutor_name}\r\n                              </NavLink>\r\n                            </div>\r\n                          </TableCell>\r\n                          <TableCell>\r\n                            <LinearGraph\r\n                              progress_count={c?.ended_session}\r\n                              total={c?.session_count}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                style={{\r\n                  backgroundColor: `#fff`,\r\n                  borderRadius: 7,\r\n                  height: `100%`,\r\n                  width: `100%`,\r\n                  padding: `1em`,\r\n                }}\r\n              >\r\n                <div className=\"container-title\">\r\n                  Ratings of closed classes this year\r\n                </div>\r\n                <Grid container justify=\"center\" style={{ padding: `1em` }}>\r\n                  {fetch_ended_class_rating_stats &&\r\n                  !ended_class_rating_stats ? (\r\n                    <CircularProgress />\r\n                  ) : (\r\n                    <Bar\r\n                      type=\"line\"\r\n                      height={90}\r\n                      data={{\r\n                        labels: ended_class_rating_stats?.map(\r\n                          ({ label }) => label\r\n                        ),\r\n                        datasets: [\r\n                          {\r\n                            label: \"Classes\",\r\n                            yAxesGroup: \"1\",\r\n                            fill: true,\r\n                            backgroundColor: ended_class_rating_stats?.map(\r\n                              ({ backgroundColor }) => backgroundColor\r\n                            ),\r\n                            scales: {\r\n                              yAxes: [\r\n                                {\r\n                                  stacked: true,\r\n                                },\r\n                              ],\r\n                            },\r\n                            data: ended_class_rating_stats?.map(\r\n                              ({ value }) => value\r\n                            ),\r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        responsiveAnimationDuration: 1,\r\n                        plugins: {\r\n                          labels: {\r\n                            render: () => {},\r\n                          },\r\n                        },\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              scaleLabel: {\r\n                                display: true,\r\n                                labelString: \"Ratings\",\r\n                                lineHeight: 2,\r\n                                fontColor: `#333`,\r\n                              },\r\n                              // ticks: {\r\n                              //   userCallback: function (label, index, labels) {\r\n                              //     if (Math.floor(label) === label) {\r\n                              //       return label;\r\n                              //     }\r\n                              //   },\r\n                              // },\r\n                            },\r\n                          ],\r\n                        },\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <div\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 7,\r\n              height: 730,\r\n              padding: `1em`,\r\n            }}\r\n          >\r\n            <div className=\"container-title\">\r\n              Most Rated Tutors\r\n              <small> (Top 10)</small>\r\n            </div>\r\n\r\n            <TableContainer\r\n              style={{\r\n                padding: `1em`,\r\n                paddingTop: 0,\r\n                height: `93%`,\r\n                maxHeight: `93%`,\r\n              }}\r\n            >\r\n              <LinearLoadingProgress show={fetch_most_rated_tutors} />\r\n              <Table size=\"small\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell width=\"80%\">Tutor</TableCell>\r\n                    <TableCell width=\"20%\">Rating</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {most_rated_tutors?.length <= 0 && (\r\n                    <TableRow>\r\n                      <TableCell colSpan={2}>\r\n                        <div className=\"empty-rows\">No tutors to show!</div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                  {most_rated_tutors?.map((t, i) => (\r\n                    <TableRow key={i}>\r\n                      <TableCell>\r\n                        <div className=\"table-profile\">\r\n                          <CustomAvatar\r\n                            heightSpacing={4}\r\n                            widthSpacing={4}\r\n                            src={t?.picture}\r\n                            errorMessage={t?.firstname.charAt(0)}\r\n                          />\r\n                          <NavLink\r\n                            style={{\r\n                              fontSize: `.87em`,\r\n                            }}\r\n                            to={`/admin/tutor/${t.tutor_pk}`}\r\n                          >\r\n                            {t?.position} {t?.firstname} {t?.middlename}{\" \"}\r\n                            {t?.lastname}{\" \"}\r\n                          </NavLink>\r\n                        </div>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            alignItems: `center`,\r\n                            alignContent: `center`,\r\n                            // gridAutoFlow: `column`,\r\n                            fontWeight: 500,\r\n                            justifyItems: `start`,\r\n                            fontSize: `.87em`,\r\n                          }}\r\n                        >\r\n                          <div\r\n                            style={{\r\n                              justifySelf: `end`,\r\n                            }}\r\n                          >\r\n                            {t?.average_rating.toFixed(1)} stars\r\n                          </div>\r\n                          <Rating\r\n                            name=\"rating\"\r\n                            value={t?.average_rating}\r\n                            precision={0.1}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DashboardAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport AdminApi, {\r\n  addAdminApi,\r\n  getAdminDataTableApi,\r\n  getSingleAdminApi,\r\n  updateAdminApi,\r\n} from \"../Api/AdminApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { AdminModel } from \"../Models/AdminModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { AdminReducerTypes } from \"../Types/AdminTypes\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setAdminDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: true,\r\n    });\r\n    const response: IServerResponse = await getAdminDataTableApi(payload);\r\n    dispatch({\r\n      type: \"fetching_admin_data_table\",\r\n      fetching_admin_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_admin_data_table\",\r\n        admin_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedAdminAction = (admin_pk: string) => async (\r\n  dispatch: Dispatch<AdminReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: true,\r\n    });\r\n    const response: IServerResponse = await getSingleAdminApi(admin_pk);\r\n    console.log(`response`, response);\r\n    dispatch({\r\n      type: \"fetching_selected_admin\",\r\n      fetching_selected_admin: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_admin\",\r\n        selected_admin: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addAdminAction = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await addAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateAdminAction = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await updateAdminApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getLoggedAdmin = () => async (dispatch: Dispatch<AdminReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_logged_admin\",\r\n      fetching_logged_admin: true,\r\n    });\r\n    const response: IServerResponse = await AdminApi.getLoggedAdmin();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_logged_admin\",\r\n        logged_admin: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetching_logged_admin\",\r\n      fetching_logged_admin: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateAdminInfo = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await AdminApi.updateAdminInfo(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const updateAdminImage = (\r\n  payload: AdminModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<AdminReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await AdminApi.updateAdminImage(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  getLoggedAdmin,\r\n  updateAdminInfo,\r\n  updateAdminImage,\r\n};\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../Component/Formik/FormikInputField\";\r\nimport { validatePassword } from \"../../Helpers/helpGetRegexValidators\";\r\nimport { setGeneralPrompt } from \"../../Services/Actions/PageActions\";\r\nimport UserActions from \"../../Services/Actions/UserActions\";\r\nimport { UserModel } from \"../../Services/Models/UserModel\";\r\n\r\ninterface IChangePasswordDialog {\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst initial_values = {\r\n  old_password: \"\",\r\n  password: \"\",\r\n  new_password: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  old_password: yup.string().required().max(50).label(\"Old Password\"),\r\n  password: validatePassword(\"Password\"),\r\n  confirm_password: yup\r\n    .string()\r\n    .test(\"Password must match\", \"Password must match\", function (value) {\r\n      const { password } = this.parent;\r\n      console.log(`value`, value, password, password === value);\r\n\r\n      return password === value;\r\n    }),\r\n});\r\n\r\nexport const ChangePasswordDialog: FC<IChangePasswordDialog> = memo(\r\n  ({ open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: UserModel) => {\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                UserActions.changeAdminPassword(payload, (msg: string) => {\r\n                  dispatch(UserActions.getUserLogs());\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleClose]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    id=\"form-change_pass\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    noValidate\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Enter your old password\"\r\n                          name=\"old_password\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          type=\"password\"\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Enter your new password\"\r\n                          name=\"password\"\r\n                          type=\"password\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Re-enter your new password\"\r\n                          name=\"confirm_password\"\r\n                          type=\"password\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-change_pass\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ChangePasswordDialog;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport AdminActions from \"../../../Services/Actions/AdminActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport UserActions from \"../../../Services/Actions/UserActions\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\ninterface IEditAdminImage {\r\n  initial_form_values: AdminModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const EditAdminImage: FC<IEditAdminImage> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [pic, setPic] = useState<File | null>(null);\r\n    const handleSetPic = useCallback((logo) => {\r\n      setPic(logo);\r\n    }, []);\r\n\r\n    const handleFormSubmit = useCallback(async () => {\r\n      const base64_pic = await fileToBase64(pic);\r\n\r\n      const payload: AdminModel = {\r\n        admin_pk: initial_form_values.admin_pk,\r\n        picture: base64_pic,\r\n      };\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              AdminActions.updateAdminImage(payload, (msg: string) => {\r\n                dispatch(AdminActions.getLoggedAdmin());\r\n                dispatch(UserActions.getUserLogs());\r\n                handleClose();\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    }, [dispatch, handleClose, initial_form_values.admin_pk, pic]);\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid xs={12} container justify=\"center\" item>\r\n                  <div style={{ padding: \"1.5em 0\" }}>\r\n                    <PhotoField\r\n                      label=\"\"\r\n                      height={180}\r\n                      width={300}\r\n                      selectedFile={pic}\r\n                      name=\"pic\"\r\n                      variant=\"rounded\"\r\n                      handleChange={handleSetPic}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditAdminImage;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button, Grid, MenuItem, TextField } from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport AdminActions from \"../../../Services/Actions/AdminActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport UserActions from \"../../../Services/Actions/UserActions\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\nimport { DbAdminPositions } from \"../../../Storage/LocalDatabase\";\r\ninterface IEditAdminInfoDialog {\r\n  initial_form_values: AdminModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  gender: yup.string().required().nullable().max(1).label(\"Gender\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    )\r\n    .label(\"Mobile Number\"),\r\n});\r\n\r\nexport const EditAdminInfoDialog: FC<IEditAdminInfoDialog> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: AdminModel) => {\r\n        payload.admin_pk = initial_form_values.admin_pk;\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                AdminActions.updateAdminInfo(payload, (msg: string) => {\r\n                  dispatch(AdminActions.getLoggedAdmin());\r\n                  dispatch(UserActions.getUserLogs());\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleClose, initial_form_values.admin_pk]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    id=\"form-edit-course\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    noValidate\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Prefix\"\r\n                          placeholder=\"Enter prefix\"\r\n                          name=\"prefix\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Suffix\"\r\n                          placeholder=\"Enter suffix\"\r\n                          name=\"suffix\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"First Name\"\r\n                          name=\"firstname\"\r\n                          placeholder=\"Enter first name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Middle Name\"\r\n                          name=\"middlename\"\r\n                          placeholder=\"Enter middle name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Last Name\"\r\n                          name=\"lastname\"\r\n                          placeholder=\"Enter last name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        {(() => {\r\n                          const name = \"position\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (e: any) => {\r\n                            setFieldValue(name, e.target.value);\r\n                          };\r\n                          return (\r\n                            <TextField\r\n                              value={values[name]}\r\n                              label=\"Position\"\r\n                              select\r\n                              onChange={handleChange}\r\n                              placeholder=\"Enter position/designation\"\r\n                              variant=\"outlined\"\r\n                              InputLabelProps={{ shrink: true }}\r\n                              fullWidth\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                              required\r\n                            >\r\n                              {DbAdminPositions.map((value) => (\r\n                                <MenuItem key={value} value={value}>\r\n                                  {value}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikRadio\r\n                          name=\"gender\"\r\n                          label=\"Gender\"\r\n                          variant=\"vertical\"\r\n                          required={true}\r\n                          data={[\r\n                            {\r\n                              id: \"m\",\r\n                              label: \"Male\",\r\n                            },\r\n                            {\r\n                              id: \"f\",\r\n                              label: \"Female\",\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        {(() => {\r\n                          const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                          const name = \"birth_date\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (date) => {\r\n                            setFieldValue(name, moment(date).toDate());\r\n                          };\r\n                          return (\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                  value={values[name]}\r\n                                  onChange={handleChange}\r\n                                  label={label}\r\n                                  variant=\"inline\"\r\n                                  animateYearScrolling={true}\r\n                                  disableFuture={true}\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  placeholder=\"MM/DD/YYYY\"\r\n                                  fullWidth={true}\r\n                                  inputVariant=\"outlined\"\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                                  autoOk={true}\r\n                                  error={!!errorText}\r\n                                  helperText={errorText}\r\n                                />\r\n                              </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Email Address\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          required\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Phone Number\"\r\n                          name=\"mob_no\"\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Phone Number\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          InputProps={{\r\n                            inputComponent: MaskedPhoneNumber,\r\n                          }}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-edit-course\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditAdminInfoDialog;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledAdminProfile = styled(Container)`\r\n  .portion-container {\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 1em;\r\n    height: 100%;\r\n  }\r\n\r\n  .profile-container {\r\n    display: grid;\r\n    align-content: start;\r\n    align-items: start;\r\n    padding-left: 2em;\r\n    padding-right: 2em;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    grid-gap: 1em;\r\n\r\n    .actions {\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n      padding: 1em;\r\n    }\r\n  }\r\n\r\n  .activity-container {\r\n    .activities {\r\n      height: 500px;\r\n      overflow-y: auto;\r\n      .activity-item {\r\n        display: grid;\r\n        border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n        padding: 0.5em;\r\n        font-size: 0.9em;\r\n        .body {\r\n          font-size: 0.87em;\r\n          padding: 0.2em 0;\r\n        }\r\n        .time {\r\n          font-size: 0.7em;\r\n          opacity: 0.6;\r\n          font-weight: 500;\r\n          padding: 0.2em 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .form-group {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-gap: 1em;\r\n    justify-content: start;\r\n    grid-auto-columns: auto 1fr;\r\n    padding: 0.5em 0;\r\n    border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n    font-size: 0.9em;\r\n\r\n    &.small {\r\n      font-size: 0.78em;\r\n    }\r\n    &.row {\r\n      grid-auto-flow: row !important;\r\n      grid-auto-columns: unset !important;\r\n      grid-gap: 0.3em;\r\n      width: 100%;\r\n    }\r\n\r\n    .label {\r\n      opacity: 0.7;\r\n      font-weight: 400;\r\n    }\r\n    .value {\r\n      font-weight: 500;\r\n    }\r\n  }\r\n`;\r\n","import { Button, CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useTheme } from \"styled-components\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport {\r\n  InvalidDateTimeToDefault,\r\n  InvalidDateToDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport AdminActions from \"../../../Services/Actions/AdminActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport UserActions from \"../../../Services/Actions/UserActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport ChangePasswordDialog from \"../../SharedViews/ChangePasswordDialog\";\r\nimport EditAdminImage from \"./EditAdminImage\";\r\nimport EditAdminInfoDialog from \"./EditAdminInfoDialog\";\r\nimport { StyledAdminProfile } from \"./styles\";\r\n\r\ninterface IAdminProfileView {}\r\n\r\nexport const AdminProfileView: FC<IAdminProfileView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n\r\n  const user_logs = useSelector(\r\n    (store: RootStore) => store.UserReducer.user_logs\r\n  );\r\n  const fetch_user_logs = useSelector(\r\n    (store: RootStore) => store.UserReducer.fetch_user_logs\r\n  );\r\n\r\n  const logged_admin = useSelector(\r\n    (store: RootStore) => store.AdminReducer.logged_admin\r\n  );\r\n\r\n  const [open_change_image_dialog, set_open_change_image_dialog] = useState(\r\n    false\r\n  );\r\n\r\n  const handleOpenChangeImageDialog = useCallback(() => {\r\n    set_open_change_image_dialog(true);\r\n  }, []);\r\n\r\n  const handleCloseChangeImageDialog = useCallback(() => {\r\n    set_open_change_image_dialog(false);\r\n  }, []);\r\n\r\n  const [open_edit_info, set_open_edit_info] = useState(false);\r\n\r\n  const handleOpenEditInfo = useCallback(() => {\r\n    set_open_edit_info(true);\r\n  }, []);\r\n\r\n  const handleCloseEditInfo = useCallback(() => {\r\n    set_open_edit_info(false);\r\n  }, []);\r\n\r\n  const [open_change_pass, set_open_change_pass] = useState(false);\r\n\r\n  const handleOpenChangePass = useCallback(() => {\r\n    set_open_change_pass(true);\r\n  }, []);\r\n\r\n  const handleCloseChangePass = useCallback(() => {\r\n    set_open_change_pass(false);\r\n  }, []);\r\n\r\n  const fetching_logged_admin = useSelector(\r\n    (store: RootStore) => store.AdminReducer.fetching_logged_admin\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(UserActions.getUserLogs());\r\n    dispatch(AdminActions.getLoggedAdmin());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setPageLinks([\r\n        {\r\n          link: \"/admin/profile\",\r\n          title: \"My Profile\",\r\n        },\r\n      ])\r\n    );\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <StyledAdminProfile theme={theme} maxWidth=\"lg\">\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={4} lg={3}>\r\n            <div className=\"portion-container profile-container\">\r\n              {fetching_logged_admin && !logged_admin ? (\r\n                <CircularProgress thickness={10} size={50} />\r\n              ) : (\r\n                <>\r\n                  <CustomAvatar\r\n                    style={{\r\n                      height: 150,\r\n                      width: 150,\r\n                    }}\r\n                    src={logged_admin?.picture}\r\n                    errorMessage={logged_admin?.firstname.charAt(0)}\r\n                  />\r\n\r\n                  <div className=\"actions\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      onClick={handleOpenChangeImageDialog}\r\n                    >\r\n                      Upload Image\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      onClick={handleOpenEditInfo}\r\n                    >\r\n                      Edit Information\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      fullWidth\r\n                      color=\"primary\"\r\n                      onClick={handleOpenChangePass}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div\r\n                    className=\"form-group small row\"\r\n                    style={{\r\n                      justifySelf: `start`,\r\n                    }}\r\n                  >\r\n                    <div className=\"label\">Registration Date</div>\r\n                    <div className=\"value\">\r\n                      {InvalidDateTimeToDefault(logged_admin?.encoded_at, \"-\")}\r\n                    </div>\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={12} md={8} lg={6}>\r\n            <div className=\"portion-container information-container\">\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12}>\r\n                  <div className=\"container-title\">Personal Information</div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Prefix </div>\r\n                    <div className=\"value\">{logged_admin?.prefix}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">First Name </div>\r\n                    <div className=\"value\">{logged_admin?.firstname}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Middle Name </div>\r\n                    <div className=\"value\">{logged_admin?.middlename}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Last Name </div>\r\n                    <div className=\"value\">{logged_admin?.lastname}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Suffix </div>\r\n                    <div className=\"value\">{logged_admin?.suffix}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Position </div>\r\n                    <div className=\"value\">{logged_admin?.position}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Gender </div>\r\n                    <div className=\"value\">\r\n                      {logged_admin?.gender === \"f\" ? \"Female\" : \"Male\"}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Date of Birth </div>\r\n                    <div className=\"value\">\r\n                      {InvalidDateToDefault(logged_admin?.birth_date, \"-\")}\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <div className=\"container-title\">Contact Information</div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Email Address</div>\r\n                    <div className=\"value\">{logged_admin?.email}</div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <div className=\"form-group \">\r\n                    <div className=\"label\">Mobile Number</div>\r\n                    <div className=\"value\">{logged_admin?.mob_no}</div>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12} lg={3}>\r\n            <div className=\"portion-container activity-container\">\r\n              <div className=\"container-title\">Your Activities</div>\r\n              <div className=\"activities\">\r\n                {user_logs?.length <= 0 && (\r\n                  <div\r\n                    style={{\r\n                      textAlign: `center`,\r\n                      fontSize: `.85em`,\r\n                    }}\r\n                  >\r\n                    No activity has been recorded yet\r\n                  </div>\r\n                )}\r\n                {user_logs?.map((l, i) => (\r\n                  <div key={i} className=\"activity-item\">\r\n                    <div className=\"time\">\r\n                      {InvalidDateTimeToDefault(l.encoded_at, \"-\")}\r\n                    </div>\r\n                    <div className=\"body\">You have {l.activity}</div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {logged_admin && (\r\n          <>\r\n            <EditAdminImage\r\n              initial_form_values={logged_admin}\r\n              open={open_change_image_dialog}\r\n              handleClose={handleCloseChangeImageDialog}\r\n            />\r\n\r\n            <EditAdminInfoDialog\r\n              initial_form_values={logged_admin}\r\n              open={open_edit_info}\r\n              handleClose={handleCloseEditInfo}\r\n            />\r\n\r\n            <ChangePasswordDialog\r\n              open={open_change_pass}\r\n              handleClose={handleCloseChangePass}\r\n            />\r\n          </>\r\n        )}\r\n      </StyledAdminProfile>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default AdminProfileView;\r\n","import {\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { setStudentDataTableApi } from \"../../../Services/Actions/StudentActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { StudentModel } from \"../../../Services/Models/StudentModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableStudentAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Profile\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Status\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableStudentAdminView: FC<DataTableStudentAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.StudentReducer.fetching_student_data_table\r\n    );\r\n    const data_table: Array<StudentModel & StatusMasterModel> = useSelector(\r\n      (store: RootStore) => store.StudentReducer.student_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setStudentDataTableApi(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/student\",\r\n              title: \"Students\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n        >\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">No records found.</span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/student/${row.student_pk}/calendar`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.firstname} {row.middlename} {row.lastname}{\" \"}\r\n                                {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">Grade {row.grade}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              <Chip\r\n                                style={{\r\n                                  backgroundColor: `${row?.sts_bgcolor}`,\r\n                                  color: row?.sts_color,\r\n                                  fontSize: `.87em`,\r\n                                }}\r\n                                label={row.sts_desc}\r\n                              />\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableStudentAdminView;\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\n\r\ninterface RatedTutorClassProps {\r\n  student_pk: number;\r\n}\r\n\r\nexport const RatedTutorClassView: FC<RatedTutorClassProps> = memo(\r\n  ({ student_pk }) => {\r\n    return (\r\n      <>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Tutor</TableCell>\r\n                <TableCell>Rating</TableCell>\r\n                <TableCell>Rated At</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {tbl_class_students?.map((student, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <div className=\"table-cell-profile\">\r\n                      <CustomAvatar\r\n                        className=\"image\"\r\n                        src={`${student.student_details.picture}`}\r\n                        errorMessage={`${student.student_details.firstname?.charAt(\r\n                          0\r\n                        )}${student.student_details.lastname?.charAt(0)}`}\r\n                      />\r\n                      <div className=\"title\">\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          {student.student_details.firstname}{\" \"}\r\n                          {student.student_details.middlename}{\" \"}\r\n                          {student.student_details.lastname}{\" \"}\r\n                          {student.student_details.suffix}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"sub-title\">\r\n                        Grade {student.student_details.grade}\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {student.student_details.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {parseDateTimeOrDefault(student.encoded_at, \"-\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default RatedTutorClassView;\r\n","import FullCalendar from \"@fullcalendar/react\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"../../../Component/Calendar/calendar.css\";\r\nimport React, { memo, FC, useEffect } from \"react\";\r\nimport ClassSessionActions from \"../../../Services/Actions/ClassSessionActions\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface IStudentCalendarView {\r\n  student_pk: number;\r\n}\r\n\r\nexport const StudentCalendarView: FC<IStudentCalendarView> = memo(\r\n  ({ student_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const student_session_cal = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.student_session_cal\r\n    );\r\n\r\n    const fetch_student_session_cal = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_student_session_cal\r\n    );\r\n\r\n    useEffect(() => {\r\n      dispatch(ClassSessionActions.getStudentSessionCal(student_pk));\r\n    }, [dispatch, student_pk]);\r\n    return (\r\n      <>\r\n        {fetch_student_session_cal && !student_session_cal ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <FullCalendar\r\n            schedulerLicenseKey={\"CC-Attribution-NonCommercial-NoDerivatives\"}\r\n            initialView={\"timeGridFourDay\"}\r\n            plugins={[resourceTimeGridPlugin, interactionPlugin]}\r\n            views={{\r\n              timeGridFourDay: {\r\n                type: \"timeGrid\",\r\n                duration: { days: 5 },\r\n                buttonText: \"3 day\",\r\n              },\r\n            }}\r\n            events={student_session_cal}\r\n            eventMinHeight={70}\r\n            expandRows={true}\r\n            stickyHeaderDates={true}\r\n            slotMinTime=\"07:00\"\r\n            slotMaxTime=\"21:00\"\r\n            contentHeight={500}\r\n            height={500}\r\n            allDaySlot={false}\r\n            eventContent={(e) => {\r\n              const data = e.event;\r\n              return (\r\n                <div\r\n                  style={{\r\n                    boxShadow: `0 1px 2px rgba(0,0,0,.1)`,\r\n                    backgroundColor: data.backgroundColor,\r\n                    color: data.textColor,\r\n                    padding: `.5em`,\r\n                    fontSize: `.9em`,\r\n                    display: `grid`,\r\n                    gridAutoFlow: `column`,\r\n                    justifyContent: `start`,\r\n                    alignItems: `center`,\r\n                    alignContent: `center`,\r\n                    gridGap: `.87em`,\r\n                    borderRadius: 5,\r\n                    border: `.01em solid rgba(0,0,0,.1)`,\r\n                    letterSpacing: `.3pt`,\r\n                    wordSpacing: `.3pt`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      fontWeight: 900,\r\n                      textTransform: `uppercase`,\r\n                      color: data.backgroundColor,\r\n                      backgroundColor: data.textColor,\r\n                      padding: `5px`,\r\n                      borderRadius: `50%`,\r\n                      height: 20,\r\n                      width: 20,\r\n                      textAlign: `center`,\r\n                      display: `grid`,\r\n                      alignItems: `center`,\r\n                      alignContent: `center`,\r\n                      fontSize: `.8em`,\r\n                    }}\r\n                  >\r\n                    {data.extendedProps.sts_pk}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontWeight: 600,\r\n                      fontSize: `1em`,\r\n                    }}\r\n                  >\r\n                    {data.title}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default StudentCalendarView;\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Chip,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AverageRating from \"../../../Component/AverageRating\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport LinearGraph from \"../../../Component/LinearGraph\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface StudentEnrollClassProps {\r\n  student_pk: number;\r\n}\r\n\r\nexport const StudentEnrollClassView: FC<StudentEnrollClassProps> = memo(\r\n  ({ student_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const student_class_by_student_pk = useSelector(\r\n      (store: RootStore) => store.ClassReducer.student_class_by_student_pk\r\n    );\r\n\r\n    console.log(`student_class_by_student_pk`, student_class_by_student_pk);\r\n\r\n    const fetch_student_class_by_student_pk = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetch_student_class_by_student_pk\r\n    );\r\n\r\n    useEffect(() => {\r\n      dispatch(ClassActions.getStudentClassByStudentPk(student_pk));\r\n    }, [dispatch, student_pk]);\r\n\r\n    return (\r\n      <>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Class Description</TableCell>\r\n                <TableCell>Tutor</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Session Progress</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!fetch_student_class_by_student_pk &&\r\n                student_class_by_student_pk?.length < 1 && (\r\n                  <TableRow>\r\n                    <TableCell align=\"center\" colSpan={4}>\r\n                      No class has been assigned yet.\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n\r\n              {student_class_by_student_pk?.map((c, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>\r\n                    <div\r\n                      style={{\r\n                        fontWeight: 500,\r\n                      }}\r\n                    >\r\n                      {c.class_desc}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        opacity: 0.87,\r\n                        fontWeight: 500,\r\n                        fontSize: `.87em`,\r\n                      }}\r\n                    >\r\n                      {c.course_desc}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* <AverageRating value={2} /> */}\r\n\r\n                    <div className=\"table-profile\">\r\n                      <CustomAvatar\r\n                        src={c.tutor_pic}\r\n                        errorMessage={c.tutor_name?.charAt(0)}\r\n                      />\r\n                      <div className=\"title\">{c.tutor_name}</div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={c?.status?.sts_desc}\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: c?.status?.sts_color,\r\n                        backgroundColor: c?.status?.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {c?.ended_session} */}\r\n\r\n                    <Tooltip\r\n                      title={`${c?.ended_session} of ${c?.session_count}`}\r\n                      arrow\r\n                    >\r\n                      <div>\r\n                        <LinearGraph\r\n                          progress_count={c?.ended_session}\r\n                          total={c?.session_count}\r\n                        />\r\n                      </div>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default StudentEnrollClassView;\r\n","import { Chip, Container, Grid, useTheme } from \"@material-ui/core\";\r\nimport StarRoundedIcon from \"@material-ui/icons/StarRounded\";\r\nimport { Skeleton } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Switch, useParams } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinkTabs from \"../../../Component/LinkTabs\";\r\nimport {\r\n  InvalidDateTimeToDefault,\r\n  InvalidDateToDefault,\r\n  InvalidTimeToDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { StringEmptyToDefault } from \"../../../Hooks/UseStringFormatter\";\r\nimport { setSelectedClassAction } from \"../../../Services/Actions/ClassActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport StudentActions, {\r\n  setSelectedStudentAction,\r\n} from \"../../../Services/Actions/StudentActions\";\r\nimport { setSingleTutor } from \"../../../Services/Actions/TutorActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport ClassSessionView from \"../../SharedViews/Class/ClassSessionView\";\r\nimport RatedTutorClassView from \"./RatedTutorClassView\";\r\nimport StudentCalendarView from \"./StudentCalendarView\";\r\nimport StudentEnrollClassView from \"./StudentEnrollClassView\";\r\ninterface ManageStudentAdminProps {}\r\n\r\nexport const ManageStudentAdminView: FC<ManageStudentAdminProps> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n  const theme = useTheme();\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user?.user_type\r\n  );\r\n\r\n  const selected_student = useSelector(\r\n    (store: RootStore) => store.StudentReducer.selected_student\r\n  );\r\n\r\n  const fetching_selected_class = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetching_selected_class\r\n  );\r\n\r\n  const handleApproveStudent = useCallback(() => {\r\n    if (selected_student?.student_pk) {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              StudentActions.approveStudent(\r\n                selected_student.student_pk,\r\n                (msg: string) => {\r\n                  dispatch(\r\n                    setSelectedStudentAction(\r\n                      selected_student.student_pk.toString()\r\n                    )\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, selected_student]);\r\n\r\n  const handleBlockStudent = useCallback(() => {\r\n    if (selected_student?.student_pk) {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              StudentActions.blockStudent(\r\n                selected_student.student_pk,\r\n                (msg: string) => {\r\n                  dispatch(\r\n                    setSelectedStudentAction(\r\n                      selected_student.student_pk.toString()\r\n                    )\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, selected_student]);\r\n\r\n  useEffect(() => {\r\n    if (params.student_pk) {\r\n      dispatch(setSelectedStudentAction(params.student_pk));\r\n    }\r\n  }, [dispatch, params.student_pk]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setPageLinks([\r\n        {\r\n          link: \"/admin/student\",\r\n          title: \"Students\",\r\n        },\r\n        {\r\n          link: window.location.pathname,\r\n          title: \"Manage Student\",\r\n        },\r\n      ])\r\n    );\r\n  }, [dispatch]);\r\n\r\n  let ButtonOptions: any = [];\r\n\r\n  if (user_type === \"admin\") {\r\n    ButtonOptions = [\r\n      {\r\n        text: \"Approve\",\r\n        color: \"primary\",\r\n        disabled: selected_student?.sts_pk === \"a\",\r\n        handleClick: () => {\r\n          handleApproveStudent();\r\n        },\r\n      },\r\n      {\r\n        text: \"Block\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          handleBlockStudent();\r\n        },\r\n        disabled: selected_student?.sts_pk === \"x\",\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4} lg={3}>\r\n            <div className=\"manage-container\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n              >\r\n                <Grid item xs={10}>\r\n                  <div className=\"container-title\">Student Information</div>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <IconButtonPopper\r\n                    buttonColor=\"primary\"\r\n                    buttons={ButtonOptions}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {fetching_selected_class && !selected_student ? (\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  animation=\"wave\"\r\n                  width={`100%`}\r\n                  height={500}\r\n                />\r\n              ) : (\r\n                <>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"profile\">\r\n                        <CustomAvatar\r\n                          style={{\r\n                            height: 200,\r\n                            width: 200,\r\n                          }}\r\n                          variant=\"circle\"\r\n                          src={selected_student?.picture}\r\n                          errorMessage=\"No image found!\"\r\n                        />\r\n\r\n                        <div className=\"title\">\r\n                          {selected_student?.firstname}{\" \"}\r\n                          {selected_student?.middlename}{\" \"}\r\n                          {selected_student?.lastname}{\" \"}\r\n                          {selected_student?.suffix}{\" \"}\r\n                        </div>\r\n                        <div className=\"sub-title\">\r\n                          Grade {selected_student?.grade}\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <div className=\"info-container\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Status</div>\r\n                          <div className=\"value\">\r\n                            <Chip\r\n                              label={selected_student?.status?.sts_desc}\r\n                              style={{\r\n                                color: selected_student?.status?.sts_color,\r\n                                backgroundColor:\r\n                                  selected_student?.status?.sts_bgcolor,\r\n                              }}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Email Address</div>\r\n                          <div className=\"value\">{selected_student?.email}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Gender</div>\r\n                          <div className=\"value\">\r\n                            {selected_student?.gender === \"m\"\r\n                              ? \"Male\"\r\n                              : \"Female\"}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Mobile Number</div>\r\n                          <div className=\"value\">\r\n                            {selected_student?.mob_no}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Home Address</div>\r\n                          <div className=\"value\">\r\n                            {selected_student?.complete_address}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Registered At</div>\r\n                          <div className=\"value\">\r\n                            {InvalidDateTimeToDefault(\r\n                              selected_student?.encoded_at,\r\n                              \"-\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8} lg={9}>\r\n            <div className=\"manage-container \">\r\n              <LinkTabs\r\n                tabs={[\r\n                  {\r\n                    label: \"Calendar\",\r\n                    link: `/${user_type}/student/${params.student_pk}/calendar`,\r\n                  },\r\n                  {\r\n                    label: \"Enrolled Classes\",\r\n                    link: `/${user_type}/student/${params.student_pk}/enrolled-classes`,\r\n                  },\r\n                  {\r\n                    label: \"Rated Tutors\",\r\n                    link: `/${user_type}/student/${params.student_pk}/rated-tutors`,\r\n                  },\r\n                ]}\r\n                RenderSwitchComponent={\r\n                  <Switch>\r\n                    <Route\r\n                      path={`/${user_type}/student/${params.student_pk}/calendar`}\r\n                      exact\r\n                    >\r\n                      <StudentCalendarView student_pk={params.student_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/student/${params.student_pk}/enrolled-classes`}\r\n                      exact\r\n                    >\r\n                      <StudentEnrollClassView student_pk={params.student_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/student/${params.student_pk}/rated-tutors`}\r\n                      exact\r\n                    >\r\n                      <RatedTutorClassView student_pk={params.student_pk} />\r\n                    </Route>\r\n                  </Switch>\r\n                }\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ManageStudentAdminView;\r\n","import * as yup from \"yup\";\r\nimport { validateEmail } from \"../Helpers/helpGetRegexValidators\";\r\n\r\nexport default yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  email: yup.string().required().matches(validateEmail),\r\n  gender: yup.string().nullable().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    ),\r\n});\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { addTutorAction } from \"../../../Services/Actions/TutorActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\nimport { DbTutorPositions } from \"../../../Storage/LocalDatabase\";\r\nimport AddAdminTutorSchema from \"../../../ValidationSchema/AddAdminTutorSchema\";\r\n\r\ninterface IAddAdminTutorView {}\r\n\r\nconst initialFormValues: TutorModel = {\r\n  position: \"\",\r\n  picture: \"\",\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  prefix: \"\",\r\n  birth_date: null,\r\n  bio: \"\",\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  gender: null,\r\n  complete_address: \"\",\r\n};\r\n\r\nexport const AddAdminTutorView: FC<IAddAdminTutorView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<TutorModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: TutorModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n      console.log(`formValues`, formValues);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addTutorAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/tutor\",\r\n            title: \"Tutors\",\r\n          },\r\n          {\r\n            link: \"/admin/tutor/add\",\r\n            title: \"Add Tutor\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Formik\r\n        initialValues={initialFormValues}\r\n        validationSchema={AddAdminTutorSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          setFieldValue,\r\n          handleChange,\r\n          setValues,\r\n        }) => (\r\n          <Form\r\n            className=\"clinic-adding-form\"\r\n            noValidate\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 10,\r\n              padding: `1em 2em`,\r\n            }}\r\n          >\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Kindly fill-up all the required tutor information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} md={4} lg={3} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={200}\r\n                        width={200}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    md={8}\r\n                    lg={9}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\", marginTop: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Enter first name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Middle Name\"\r\n                        name=\"middlename\"\r\n                        placeholder=\"Enter middle name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Enter last name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Suffix\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const name = \"position\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name]}\r\n                            label=\"Position\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                            required\r\n                          >\r\n                            {DbTutorPositions.map((value) => (\r\n                              <MenuItem key={value} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                        const name = \"birth_date\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (date) => {\r\n                          setFieldValue(name, moment(date).toDate());\r\n                        };\r\n                        return (\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                              <KeyboardDatePicker\r\n                                value={values[name]}\r\n                                onChange={handleChange}\r\n                                label={label}\r\n                                variant=\"inline\"\r\n                                animateYearScrolling={true}\r\n                                disableFuture={true}\r\n                                format=\"MM/dd/yyyy\"\r\n                                placeholder=\"MM/DD/YYYY\"\r\n                                fullWidth={true}\r\n                                inputVariant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                autoOk={true}\r\n                                error={!!errorText}\r\n                                helperText={errorText}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email Address\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Phone Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phone Number\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} item>\r\n                      <FormikInputField\r\n                        label=\"Complete Address\"\r\n                        name=\"complete_address\"\r\n                        placeholder=\"Enter complete address\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        multiline\r\n                        rows={2}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Add Tutor\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      // history.push(`/admin/clients`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another tutor\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/tutor`);\r\n                }}\r\n              >\r\n                View all tutors\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddAdminTutorView;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { setTutorDataTableAction } from \"../../../Services/Actions/TutorActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableAdminTutorViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"firstname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Profile\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableAdminTutorView: FC<DataTableAdminTutorViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.TutorReducer.fetching_tutor_data_table\r\n    );\r\n    const tutor_table: Array<TutorModel> = useSelector(\r\n      (store: RootStore) => store.TutorReducer.tutor_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setTutorDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/tutors\",\r\n              title: \"Tutors\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n        >\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/tutor/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Tutor\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {tutor_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {tutor_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <NavLink\r\n                              className=\"title\"\r\n                              to={`/admin/tutor/${row.tutor_pk}/calendar`}\r\n                            >\r\n                              <span style={{ textTransform: \"capitalize\" }}>\r\n                                {row.prefix} {row.firstname} {row.middlename}{\" \"}\r\n                                {row.lastname} {row.suffix}\r\n                              </span>\r\n                            </NavLink>\r\n                            <div className=\"sub-title\">{row.position}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableAdminTutorView;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Button, Grid, MenuItem, TextField } from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions, {\r\n  setSingleTutor,\r\n} from \"../../../Services/Actions/TutorActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\nimport { DbTutorPositions } from \"../../../Storage/LocalDatabase\";\r\ninterface IEditTutorDialog {\r\n  initial_form_values: TutorModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  gender: yup.string().nullable().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n  email: yup.string().email().required().label(\"Email Address\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    ),\r\n});\r\n\r\nexport const EditTutorDialog: FC<IEditTutorDialog> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: TutorModel) => {\r\n        console.log(`payload`, payload);\r\n\r\n        payload.tutor_pk = initial_form_values.tutor_pk;\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                TutorActions.updateTutor(payload, (msg: string) => {\r\n                  handleClose();\r\n                  dispatch(setSingleTutor(payload.tutor_pk));\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleClose, initial_form_values.tutor_pk]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Tutor Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    id=\"form-edit-tutor\"\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"First Name\"\r\n                          name=\"firstname\"\r\n                          placeholder=\"Enter first name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Middle Name\"\r\n                          name=\"middlename\"\r\n                          placeholder=\"Enter middle name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Last Name\"\r\n                          name=\"lastname\"\r\n                          placeholder=\"Enter last name\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Suffix\"\r\n                          placeholder=\"Enter suffix\"\r\n                          name=\"suffix\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        {(() => {\r\n                          const name = \"position\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (e: any) => {\r\n                            setFieldValue(name, e.target.value);\r\n                          };\r\n                          return (\r\n                            <TextField\r\n                              value={values[name]}\r\n                              label=\"Position\"\r\n                              select\r\n                              onChange={handleChange}\r\n                              placeholder=\"Enter position/designation\"\r\n                              variant=\"outlined\"\r\n                              InputLabelProps={{ shrink: true }}\r\n                              fullWidth\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                              required\r\n                            >\r\n                              {DbTutorPositions.map((value) => (\r\n                                <MenuItem key={value} value={value}>\r\n                                  {value}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikRadio\r\n                          name=\"gender\"\r\n                          label=\"Gender\"\r\n                          variant=\"vertical\"\r\n                          required={true}\r\n                          data={[\r\n                            {\r\n                              id: \"m\",\r\n                              label: \"Male\",\r\n                            },\r\n                            {\r\n                              id: \"f\",\r\n                              label: \"Female\",\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        {(() => {\r\n                          const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                          const name = \"birth_date\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (date) => {\r\n                            setFieldValue(name, moment(date).toDate());\r\n                          };\r\n                          return (\r\n                            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                              <Grid container justify=\"space-around\">\r\n                                <KeyboardDatePicker\r\n                                  value={values[name]}\r\n                                  onChange={handleChange}\r\n                                  label={label}\r\n                                  variant=\"inline\"\r\n                                  animateYearScrolling={true}\r\n                                  disableFuture={true}\r\n                                  format=\"MM/dd/yyyy\"\r\n                                  placeholder=\"MM/DD/YYYY\"\r\n                                  fullWidth={true}\r\n                                  inputVariant=\"outlined\"\r\n                                  InputLabelProps={{\r\n                                    shrink: true,\r\n                                  }}\r\n                                  autoOk={true}\r\n                                  error={!!errorText}\r\n                                  helperText={errorText}\r\n                                />\r\n                              </Grid>\r\n                            </MuiPickersUtilsProvider>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Email Address\"\r\n                          name=\"email\"\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Email Address\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          type=\"email\"\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Phone Number\"\r\n                          name=\"mob_no\"\r\n                          variant=\"outlined\"\r\n                          placeholder=\"Phone Number\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          InputProps={{\r\n                            inputComponent: MaskedPhoneNumber,\r\n                          }}\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Complete Address\"\r\n                          name=\"complete_address\"\r\n                          placeholder=\"Enter complete address\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline\r\n                          rows={2}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                form=\"form-edit-tutor\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTutorDialog;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport AdminActions from \"../../../Services/Actions/AdminActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions, {\r\n  setSingleTutor,\r\n} from \"../../../Services/Actions/TutorActions\";\r\nimport UserActions from \"../../../Services/Actions/UserActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\ninterface IEditTutorImageDialog {\r\n  initial_form_values: TutorModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const EditTutorImageDialog: FC<IEditTutorImageDialog> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [pic, setPic] = useState<File | null>(null);\r\n    const handleSetPic = useCallback((logo) => {\r\n      setPic(logo);\r\n    }, []);\r\n\r\n    const handleFormSubmit = useCallback(async () => {\r\n      const base64_pic = await fileToBase64(pic);\r\n\r\n      const payload: TutorModel = {\r\n        tutor_pk: initial_form_values.tutor_pk,\r\n        picture: base64_pic,\r\n      };\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              TutorActions.updateTutorImage(payload, (msg: string) => {\r\n                dispatch(setSingleTutor(payload.tutor_pk));\r\n                setPic(null);\r\n                handleClose();\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    }, [dispatch, handleClose, initial_form_values.tutor_pk, pic]);\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid xs={12} container justify=\"center\" item>\r\n                  <div style={{ padding: \"1.5em 0\" }}>\r\n                    <PhotoField\r\n                      label=\"\"\r\n                      height={180}\r\n                      width={300}\r\n                      selectedFile={pic}\r\n                      name=\"pic\"\r\n                      variant=\"rounded\"\r\n                      handleChange={handleSetPic}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTutorImageDialog;\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  Chip,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AverageRating from \"../../../Component/AverageRating\";\r\nimport LinearGraph from \"../../../Component/LinearGraph\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport ClassSessionActions from \"../../../Services/Actions/ClassSessionActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\ninterface TutorAssignedClassProps {\r\n  tutor_pk: number;\r\n}\r\n\r\nexport const TutorAssignedClassView: FC<TutorAssignedClassProps> = memo(\r\n  ({ tutor_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_tutor_classes = useSelector(\r\n      (store: RootStore) => store.ClassReducer.all_tutor_classes\r\n    );\r\n\r\n    const fetch_all_tutor_classes = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetch_all_tutor_classes\r\n    );\r\n\r\n    console.log(`all_tutor_classes`, all_tutor_classes);\r\n\r\n    useEffect(() => {\r\n      dispatch(ClassActions.getAllTutorClasses(tutor_pk));\r\n    }, [dispatch, tutor_pk]);\r\n\r\n    return (\r\n      <>\r\n        <TableContainer>\r\n          <LinearLoadingProgress show={fetch_all_tutor_classes} />\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Class Description</TableCell>\r\n                {/* <TableCell>Rating</TableCell> */}\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Session Progress</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {!fetch_all_tutor_classes && all_tutor_classes?.length < 1 && (\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={4}>\r\n                    No class has been assigned yet.\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n\r\n              {all_tutor_classes?.map((c, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>\r\n                    <div\r\n                      style={{\r\n                        fontWeight: 500,\r\n                      }}\r\n                    >\r\n                      {c.class_desc}\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        opacity: 0.87,\r\n                        fontWeight: 500,\r\n                        fontSize: `.87em`,\r\n                      }}\r\n                    >\r\n                      {c.course_desc}\r\n                    </div>\r\n                  </TableCell>\r\n                  {/* <TableCell>\r\n                    <AverageRating value={2} />\r\n                  </TableCell> */}\r\n                  <TableCell>\r\n                    <Chip\r\n                      label={c?.status?.sts_desc}\r\n                      size=\"small\"\r\n                      style={{\r\n                        color: c?.status?.sts_color,\r\n                        backgroundColor: c?.status?.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {/* {c?.ended_session} */}\r\n\r\n                    <Tooltip\r\n                      title={`${c?.ended_session} of ${c?.session_count}`}\r\n                      arrow\r\n                    >\r\n                      <div>\r\n                        <LinearGraph\r\n                          progress_count={c?.ended_session}\r\n                          total={c?.session_count}\r\n                        />\r\n                      </div>\r\n                    </Tooltip>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TutorAssignedClassView;\r\n","import \"@fullcalendar/daygrid/main.css\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport \"../../../Component/Calendar/calendar.css\";\r\nimport ClassSessionActions from \"../../../Services/Actions/ClassSessionActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface ITutorCalendarView {\r\n  tutor_pk: number;\r\n}\r\n\r\nexport const TutorCalendarView: FC<ITutorCalendarView> = memo(\r\n  ({ tutor_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const tutor_session_cal = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.tutor_session_cal\r\n    );\r\n\r\n    const fetch_tutor_session_cal = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_tutor_session_cal\r\n    );\r\n\r\n    useEffect(() => {\r\n      dispatch(ClassSessionActions.getTutorSessionCal(tutor_pk));\r\n    }, [dispatch, tutor_pk]);\r\n\r\n    return (\r\n      <>\r\n        {fetch_tutor_session_cal && !tutor_session_cal ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          <FullCalendar\r\n            schedulerLicenseKey={\"CC-Attribution-NonCommercial-NoDerivatives\"}\r\n            initialView={\"timeGridFourDay\"}\r\n            plugins={[resourceTimeGridPlugin, interactionPlugin]}\r\n            views={{\r\n              timeGridFourDay: {\r\n                type: \"timeGrid\",\r\n                duration: { days: 3 },\r\n                buttonText: \"3 day\",\r\n              },\r\n            }}\r\n            events={tutor_session_cal}\r\n            eventMinHeight={70}\r\n            stickyHeaderDates={true}\r\n            slotMinTime=\"07:00\"\r\n            slotMaxTime=\"21:00\"\r\n            height={630}\r\n            allDaySlot={false}\r\n            eventContent={(e) => {\r\n              console.log(`e`, e);\r\n\r\n              const data = e.event;\r\n\r\n              return (\r\n                <div\r\n                  style={{\r\n                    boxShadow: `0 1px 2px rgba(0,0,0,.1)`,\r\n                    backgroundColor: data.backgroundColor,\r\n                    color: data.textColor,\r\n                    padding: `.5em`,\r\n                    fontSize: `.9em`,\r\n                    display: `grid`,\r\n                    gridAutoFlow: `column`,\r\n                    justifyContent: `start`,\r\n                    alignItems: `center`,\r\n                    alignContent: `center`,\r\n                    gridGap: `.87em`,\r\n                    borderRadius: 5,\r\n                    border: `.01em solid rgba(0,0,0,.1)`,\r\n                    letterSpacing: `.3pt`,\r\n                    wordSpacing: `.3pt`,\r\n                  }}\r\n                >\r\n                  <div\r\n                    style={{\r\n                      fontWeight: 900,\r\n                      textTransform: `uppercase`,\r\n                      color: data.backgroundColor,\r\n                      backgroundColor: data.textColor,\r\n                      padding: `5px`,\r\n                      borderRadius: `50%`,\r\n                      height: 20,\r\n                      width: 20,\r\n                      textAlign: `center`,\r\n                      display: `grid`,\r\n                      alignItems: `center`,\r\n                      alignContent: `center`,\r\n                      fontSize: `.8em`,\r\n                    }}\r\n                  >\r\n                    {data.extendedProps.sts_pk}\r\n                  </div>\r\n                  <div\r\n                    style={{\r\n                      fontWeight: 600,\r\n                      fontSize: `1em`,\r\n                    }}\r\n                  >\r\n                    {data.title}\r\n                  </div>\r\n                </div>\r\n              );\r\n            }}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TutorCalendarView;\r\n","import {\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\n\r\ninterface TutorRatingViewProps {\r\n  tutor_pk: number;\r\n}\r\n\r\nexport const TutorRatingView: FC<TutorRatingViewProps> = memo(\r\n  ({ tutor_pk }) => {\r\n    return (\r\n      <>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Rated By</TableCell>\r\n                <TableCell>Rating Given</TableCell>\r\n                <TableCell>Rated At</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {/* {tbl_class_students?.map((student, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell>\r\n                    <div className=\"table-cell-profile\">\r\n                      <CustomAvatar\r\n                        className=\"image\"\r\n                        src={`${student.student_details.picture}`}\r\n                        errorMessage={`${student.student_details.firstname?.charAt(\r\n                          0\r\n                        )}${student.student_details.lastname?.charAt(0)}`}\r\n                      />\r\n                      <div className=\"title\">\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          {student.student_details.firstname}{\" \"}\r\n                          {student.student_details.middlename}{\" \"}\r\n                          {student.student_details.lastname}{\" \"}\r\n                          {student.student_details.suffix}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"sub-title\">\r\n                        Grade {student.student_details.grade}\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {student.student_details.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {parseDateTimeOrDefault(student.encoded_at, \"-\")}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))} */}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default TutorRatingView;\r\n","import { Chip, Container, Grid, Tooltip, useTheme } from \"@material-ui/core\";\r\nimport { Rating, Skeleton } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Route, Switch, useParams } from \"react-router\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinkTabs from \"../../../Component/LinkTabs\";\r\nimport {\r\n  InvalidDateTimeToDefault,\r\n  InvalidDateToDefault,\r\n} from \"../../../Hooks/UseDateParser\";\r\nimport { StringEmptyToDefault } from \"../../../Hooks/UseStringFormatter\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions, {\r\n  setSingleTutor,\r\n} from \"../../../Services/Actions/TutorActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditTutorDialog from \"./EditTutorDialog\";\r\nimport EditTutorImageDialog from \"./EditTutorImageDialog\";\r\nimport TutorAssignedClassView from \"./TutorAssignedClassView\";\r\nimport TutorCalendarView from \"./TutorCalendarView\";\r\nimport TutorRatingView from \"./TutorRatingView\";\r\n\r\ninterface ManageAdminAdminProps {}\r\n\r\nexport const ManageAdminAdminView: FC<ManageAdminAdminProps> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n  const theme = useTheme();\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user?.user_type\r\n  );\r\n\r\n  const selected_tutor = useSelector(\r\n    (store: RootStore) => store.TutorReducer.single_tutor\r\n  );\r\n\r\n  const fetching_selected_tutor = useSelector(\r\n    (store: RootStore) => store.TutorReducer.fetching_single_tutor\r\n  );\r\n\r\n  const [open_edit_tutor, set_open_edit_tutor] = useState(false);\r\n  const handleOpenEditTutor = useCallback(() => {\r\n    set_open_edit_tutor(true);\r\n  }, []);\r\n  const handleCloseEditTutor = useCallback(() => {\r\n    set_open_edit_tutor(false);\r\n  }, []);\r\n\r\n  const [open_change_image, set_open_change_image] = useState(false);\r\n  const handleOpenChangeImage = useCallback(() => {\r\n    set_open_change_image(true);\r\n  }, []);\r\n  const handleCloseChangeImage = useCallback(() => {\r\n    set_open_change_image(false);\r\n  }, []);\r\n\r\n  const handleToggleActive = useCallback(() => {\r\n    if (selected_tutor?.tutor_pk) {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              TutorActions.toggleActiveStatus(\r\n                parseInt(selected_tutor.tutor_pk),\r\n                (msg: string) => {\r\n                  dispatch(setSingleTutor(selected_tutor.tutor_pk));\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    }\r\n  }, [dispatch, selected_tutor]);\r\n\r\n  useEffect(() => {\r\n    if (params.tutor_pk) {\r\n      dispatch(setSingleTutor(params.tutor_pk));\r\n    }\r\n  }, [dispatch, params.tutor_pk]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setPageLinks([\r\n        {\r\n          link: \"/admin/tutor\",\r\n          title: \"Tutors\",\r\n        },\r\n        {\r\n          link: window.location.pathname,\r\n          title: \"Manage Tutor\",\r\n        },\r\n      ])\r\n    );\r\n  }, [dispatch]);\r\n\r\n  let ButtonOptions: Array<any> = [];\r\n\r\n  if (user_type === \"admin\") {\r\n    ButtonOptions = [\r\n      {\r\n        text: \"Edit Details\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          handleOpenEditTutor();\r\n        },\r\n      },\r\n      {\r\n        text: \"Change Image\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          handleOpenChangeImage();\r\n        },\r\n      },\r\n      {\r\n        text:\r\n          selected_tutor?.is_active === \"y\"\r\n            ? \"Set to Inactive\"\r\n            : \"Set to Active\",\r\n        color: \"primary\",\r\n        handleClick: () => {\r\n          handleToggleActive();\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4} lg={3}>\r\n            <div className=\"manage-container\">\r\n              <Grid\r\n                container\r\n                spacing={2}\r\n                alignItems=\"center\"\r\n                alignContent=\"center\"\r\n              >\r\n                <Grid item xs={10}>\r\n                  <div className=\"container-title\">Tutor Information</div>\r\n                </Grid>\r\n                <Grid item xs={2}>\r\n                  <IconButtonPopper\r\n                    buttonColor=\"primary\"\r\n                    buttons={ButtonOptions}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {fetching_selected_tutor && !selected_tutor ? (\r\n                <Skeleton\r\n                  variant=\"rect\"\r\n                  animation=\"wave\"\r\n                  width={`100%`}\r\n                  height={500}\r\n                />\r\n              ) : (\r\n                <>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12}>\r\n                      <div className=\"profile\">\r\n                        <CustomAvatar\r\n                          style={{\r\n                            height: 150,\r\n                            width: 150,\r\n                            margin: `.5em`,\r\n                          }}\r\n                          variant=\"circle\"\r\n                          src={selected_tutor?.picture}\r\n                          errorMessage=\"No image found!\"\r\n                        />\r\n\r\n                        <div className=\"title\">\r\n                          {selected_tutor?.firstname}{\" \"}\r\n                          {selected_tutor?.middlename}{\" \"}\r\n                          {selected_tutor?.lastname} {selected_tutor?.suffix}{\" \"}\r\n                        </div>\r\n                        <div className=\"sub-title\">\r\n                          {selected_tutor?.position}\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <div className=\"remarks\">\r\n                        {StringEmptyToDefault(\r\n                          selected_tutor?.bio,\r\n                          \"Nothing in bio!\"\r\n                        )}\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12}>\r\n                      <div className=\"info-container\">\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Average Rating</div>\r\n                          <div className=\"value\">\r\n                            <Tooltip\r\n                              title={selected_tutor?.average_rating + \" stars\"}\r\n                            >\r\n                              <Rating\r\n                                readOnly\r\n                                name=\"rating\"\r\n                                value={selected_tutor?.average_rating}\r\n                              />\r\n                            </Tooltip>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Active</div>\r\n                          <div className=\"value\">\r\n                            {selected_tutor?.is_active === \"y\" ? (\r\n                              <Chip\r\n                                label=\"Yes\"\r\n                                style={{\r\n                                  color: `#b71c1c`,\r\n                                  backgroundColor: `#ffcdd2`,\r\n                                }}\r\n                              />\r\n                            ) : (\r\n                              <Chip\r\n                                label=\"No\"\r\n                                style={{\r\n                                  color: `#0d47a1`,\r\n                                  backgroundColor: `#bbdefb`,\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Gender</div>\r\n                          <div className=\"value\">\r\n                            {selected_tutor?.gender === \"m\" ? \"Male\" : \"Female\"}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Date of Birth</div>\r\n                          <div className=\"value\">\r\n                            {InvalidDateToDefault(\r\n                              selected_tutor?.birth_date,\r\n                              \"-\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Email Address</div>\r\n                          <div className=\"value\">{selected_tutor?.email}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Mobile Number</div>\r\n                          <div className=\"value\">{selected_tutor?.mob_no}</div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Home Address</div>\r\n                          <div className=\"value\">\r\n                            {selected_tutor?.complete_address}\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                          <div className=\"label\">Registered At</div>\r\n                          <div className=\"value\">\r\n                            {InvalidDateTimeToDefault(\r\n                              selected_tutor?.encoded_at,\r\n                              \"-\"\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={8} lg={9}>\r\n            <div className=\"manage-container \">\r\n              <LinkTabs\r\n                tabs={[\r\n                  {\r\n                    label: \"Calendar\",\r\n                    link: `/${user_type}/tutor/${params.tutor_pk}/calendar`,\r\n                  },\r\n                  {\r\n                    label: \"Assigned Classes\",\r\n                    link: `/${user_type}/tutor/${params.tutor_pk}/assigned-classes`,\r\n                  },\r\n                  // {\r\n                  //   label: \"Ratings\",\r\n                  //   link: `/${user_type}/tutor/${params.tutor_pk}/ratings`,\r\n                  // },\r\n                ]}\r\n                RenderSwitchComponent={\r\n                  <Switch>\r\n                    <Route\r\n                      path={`/${user_type}/tutor/${params.tutor_pk}/calendar`}\r\n                      exact\r\n                    >\r\n                      <TutorCalendarView tutor_pk={params.tutor_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/tutor/${params.tutor_pk}/assigned-classes`}\r\n                      exact\r\n                    >\r\n                      <TutorAssignedClassView tutor_pk={params.tutor_pk} />\r\n                    </Route>\r\n                    <Route\r\n                      path={`/${user_type}/tutor/${params.tutor_pk}/ratings`}\r\n                      exact\r\n                    >\r\n                      <TutorRatingView tutor_pk={params.tutor_pk} />\r\n                    </Route>\r\n                  </Switch>\r\n                }\r\n              />\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {selected_tutor && (\r\n          <>\r\n            <EditTutorDialog\r\n              initial_form_values={selected_tutor}\r\n              open={open_edit_tutor}\r\n              handleClose={handleCloseEditTutor}\r\n            />\r\n            <EditTutorImageDialog\r\n              initial_form_values={selected_tutor}\r\n              open={open_change_image}\r\n              handleClose={handleCloseChangeImage}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ManageAdminAdminView;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport moment from \"moment\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport { validateEmail } from \"../../../Helpers/helpGetRegexValidators\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { addAdminAction } from \"../../../Services/Actions/AdminActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\nimport { DbAdminPositions } from \"../../../Storage/LocalDatabase\";\r\n\r\ninterface AddCoAdminViewInterface {}\r\n\r\nconst initFormValues: AdminModel = {\r\n  position: \"\",\r\n  picture: \"\",\r\n  firstname: \"\",\r\n  middlename: \"\",\r\n  lastname: \"\",\r\n  suffix: \"\",\r\n  prefix: \"\",\r\n  birth_date: null,\r\n  email: \"\",\r\n  mob_no: \"\",\r\n  gender: null,\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  position: yup.string().required().max(150).label(\"Position\"),\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  birth_date: yup.date().nullable().label(\"Birth Date\"),\r\n  email: yup.string().required().email().label(\"Email\"),\r\n  gender: yup.string().required().nullable().max(1).label(\"Gender\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    )\r\n    .label(\"Mobile Number\"),\r\n});\r\n\r\nexport const AddCoAdminView: FC<AddCoAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<AdminModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const [pic, setPic] = useState<File | null>(null);\r\n  const handleSetPic = useCallback((logo) => {\r\n    setPic(logo);\r\n  }, []);\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: AdminModel) => {\r\n      formValues.picture = await fileToBase64(pic);\r\n      console.log(`formValues`, formValues);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addAdminAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, pic]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/co-administrator\",\r\n            title: \"Co-administrators\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add administrator\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            className=\"clinic-adding-form\"\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 10,\r\n              padding: `1em 2em`,\r\n            }}\r\n            noValidate\r\n          >\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">\r\n                  Fill-up the personal information\r\n                </div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} md={4} lg={3} container justify=\"center\" item>\r\n                    <div style={{ padding: \"1.5em 0\" }}>\r\n                      <PhotoField\r\n                        label=\"\"\r\n                        height={200}\r\n                        width={200}\r\n                        selectedFile={pic}\r\n                        name=\"pic\"\r\n                        handleChange={handleSetPic}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n\r\n                  <Grid\r\n                    xs={12}\r\n                    md={8}\r\n                    lg={9}\r\n                    item\r\n                    container\r\n                    justify=\"flex-start\"\r\n                    spacing={2}\r\n                    style={{ padding: \"1em\", marginTop: \"1em\" }}\r\n                  >\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Prefix\"\r\n                        placeholder=\"Enter prefix\"\r\n                        name=\"prefix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={3} item>\r\n                      <FormikInputField\r\n                        label=\"Suffix\"\r\n                        placeholder=\"Enter suffix\"\r\n                        name=\"suffix\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"First Name\"\r\n                        name=\"firstname\"\r\n                        placeholder=\"Enter first name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Middle Name\"\r\n                        name=\"middlename\"\r\n                        placeholder=\"Enter middle name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Last Name\"\r\n                        name=\"lastname\"\r\n                        placeholder=\"Enter last name\"\r\n                        variant=\"outlined\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const name = \"position\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (e: any) => {\r\n                          setFieldValue(name, e.target.value);\r\n                        };\r\n                        return (\r\n                          <TextField\r\n                            value={values[name]}\r\n                            label=\"Position\"\r\n                            select\r\n                            onChange={handleChange}\r\n                            placeholder=\"Enter position/designation\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            error={!!errorText}\r\n                            helperText={errorText}\r\n                            required\r\n                          >\r\n                            {DbAdminPositions.map((value) => (\r\n                              <MenuItem key={value} value={value}>\r\n                                {value}\r\n                              </MenuItem>\r\n                            ))}\r\n                          </TextField>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikRadio\r\n                        name=\"gender\"\r\n                        label=\"Gender\"\r\n                        variant=\"vertical\"\r\n                        required={true}\r\n                        data={[\r\n                          {\r\n                            id: \"m\",\r\n                            label: \"Male\",\r\n                          },\r\n                          {\r\n                            id: \"f\",\r\n                            label: \"Female\",\r\n                          },\r\n                        ]}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      {(() => {\r\n                        const label = \"Date of Birth (MM/DD/YYYY)\";\r\n                        const name = \"birth_date\";\r\n                        const errorText =\r\n                          errors[name] && touched[name] ? errors[name] : \"\";\r\n                        const handleChange = (date) => {\r\n                          setFieldValue(name, moment(date).toDate());\r\n                        };\r\n                        return (\r\n                          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                            <Grid container justify=\"space-around\">\r\n                              <KeyboardDatePicker\r\n                                value={values[name]}\r\n                                onChange={handleChange}\r\n                                label={label}\r\n                                variant=\"inline\"\r\n                                animateYearScrolling={true}\r\n                                disableFuture={true}\r\n                                format=\"MM/dd/yyyy\"\r\n                                placeholder=\"MM/DD/YYYY\"\r\n                                fullWidth={true}\r\n                                inputVariant=\"outlined\"\r\n                                InputLabelProps={{\r\n                                  shrink: true,\r\n                                }}\r\n                                autoOk={true}\r\n                                error={!!errorText}\r\n                                helperText={errorText}\r\n                              />\r\n                            </Grid>\r\n                          </MuiPickersUtilsProvider>\r\n                        );\r\n                      })()}\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Email Address\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        type=\"email\"\r\n                        required\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid xs={12} sm={6} item>\r\n                      <FormikInputField\r\n                        label=\"Phone Number\"\r\n                        name=\"mob_no\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Phone Number\"\r\n                        InputLabelProps={{ shrink: true }}\r\n                        fullWidth\r\n                        InputProps={{\r\n                          inputComponent: MaskedPhoneNumber,\r\n                        }}\r\n                        required\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Administrator\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/co-administrator`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                  setPic(null);\r\n                }}\r\n              >\r\n                Add another administrator\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/co-administrator`);\r\n                }}\r\n              >\r\n                View all administrator\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddCoAdminView;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setAdminDataTableAction } from \"../../../Services/Actions/AdminActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { AdminModel } from \"../../../Services/Models/AdminModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\n\r\ninterface DataTableCoAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"fullname\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"\",\r\n    width: 250,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Email Address\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Mobile Number\",\r\n    width: 90,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n];\r\n\r\nexport const DataTableCoAdminView: FC<DataTableCoAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.AdminReducer.fetching_admin_data_table\r\n    );\r\n    const data_table: Array<AdminModel> = useSelector(\r\n      (store: RootStore) => store.AdminReducer.admin_data_table?.table\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setAdminDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/co-administrator\",\r\n              title: \"Co-administrators\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n        >\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/co-administrator/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Administrator\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid\r\n            xs={12}\r\n            container\r\n            item\r\n            spacing={1}\r\n            style={{ height: `100%`, overflowX: \"auto\" }}\r\n          >\r\n            <Grid item xs={12}>\r\n              <TableContainer\r\n                style={{ height: \"100%\", minHeight: 500, borderRadius: 10 }}\r\n              >\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <div className=\"table-cell-profile\">\r\n                            <CustomAvatar\r\n                              className=\"image\"\r\n                              src={`${row.picture}`}\r\n                              errorMessage={`${row.firstname?.charAt(\r\n                                0\r\n                              )}${row.lastname?.charAt(0)}`}\r\n                            />\r\n                            <div className=\"title\">\r\n                              <span\r\n                                style={{\r\n                                  textTransform: \"capitalize\",\r\n                                  fontWeight: 500,\r\n                                }}\r\n                              >\r\n                                {row.prefix} {row.firstname} {row.middlename}{\" \"}\r\n                                {row.lastname} {row.suffix}\r\n                              </span>\r\n                            </div>\r\n                            <div className=\"sub-title\">{row.position}</div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>{row.email}</TableCell>\r\n                        <TableCell>{row.mob_no}</TableCell>\r\n                        <TableCell>\r\n                          <div className=\"grid-justify-start\">\r\n                            <span className=\"badge badge-blue\">\r\n                              {row.is_active === \"y\" ? \"Yes\" : \"No\"}\r\n                            </span>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableCoAdminView;\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport RoomApi from \"../Api/RoomApi\";\r\nimport { RoomModel } from \"../Models/RoomModel\";\r\nimport { RoomReducerTypes } from \"../Types/RoomTypes\";\r\n\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nexport const setRoomDataTableAction = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<RoomReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_room_data_table\",\r\n      fetching_room_data_table: true,\r\n    });\r\n    const response: IServerResponse = await RoomApi.getRoomDataTableApi(\r\n      payload\r\n    );\r\n    console.log(`data_table response`, response);\r\n    dispatch({\r\n      type: \"fetching_room_data_table\",\r\n      fetching_room_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_room_data_table\",\r\n        room_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedRoomAction = (room_pk: string) => async (\r\n  dispatch: Dispatch<RoomReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_room\",\r\n      fetching_selected_room: true,\r\n    });\r\n    const response: IServerResponse = await RoomApi.getSingleRoomApi(room_pk);\r\n    dispatch({\r\n      type: \"fetching_selected_room\",\r\n      fetching_selected_room: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_room\",\r\n        selected_room: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addRoomAction = (\r\n  payload: RoomModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<RoomReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await RoomApi.addRoomApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateRoom = (\r\n  payload: RoomModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<RoomReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await RoomApi.updateRoom(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst toggleRoomStatus = (\r\n  room_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<RoomReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await RoomApi.toggleRoomStatus(room_pk);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  updateRoom,\r\n  toggleRoomStatus,\r\n};\r\n","import { Button, Container, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik, FormikProps } from \"formik\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport SuccessDialog from \"../../../Component/SuccessDialog\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport { addRoomAction } from \"../../../Services/Actions/RoomActions\";\r\nimport { RoomModel } from \"../../../Services/Models/RoomModel\";\r\n\r\ninterface AddRoomAdminViewInterface {}\r\n\r\nconst initFormValues: RoomModel = {\r\n  room_desc: \"\",\r\n  notes: \"\",\r\n};\r\n\r\nconst formSchema = yup.object({\r\n  room_desc: yup.string().required().max(255).label(\"Room Description\"),\r\n});\r\n\r\nexport const AddRoomAdminView: FC<AddRoomAdminViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const formRef = useRef<FormikProps<RoomModel> | null>(null);\r\n\r\n  const [successDialog, setSuccessDialog] = useState({\r\n    open: false,\r\n    message: \"\",\r\n  });\r\n\r\n  const handleFormSubmit = useCallback(\r\n    async (formValues: RoomModel) => {\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              addRoomAction(formValues, (msg: string) => {\r\n                setSuccessDialog({\r\n                  message: msg,\r\n                  open: true,\r\n                });\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/admin/room\",\r\n            title: \"Rooms\",\r\n          },\r\n          {\r\n            link: window.location.pathname,\r\n            title: \"Add Room\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\">\r\n      <Formik\r\n        initialValues={initFormValues}\r\n        validationSchema={formSchema}\r\n        validateOnChange={false}\r\n        validateOnBlur={false}\r\n        onSubmit={handleFormSubmit}\r\n        innerRef={formRef}\r\n      >\r\n        {({ values, errors, touched, setFieldValue }) => (\r\n          <Form\r\n            className=\"clinic-adding-form\"\r\n            style={{\r\n              backgroundColor: `#fff`,\r\n              borderRadius: 10,\r\n              padding: `1em 2em`,\r\n            }}\r\n          >\r\n            <div className=\"box-ctnr\">\r\n              <div className=\"box-header\">\r\n                <div className=\"header-text\">Fill-up the room details</div>\r\n              </div>\r\n              <div className=\"box-body\">\r\n                <Grid container justify=\"center\" spacing={3}>\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      name=\"room_desc\"\r\n                      label=\"Room Description\"\r\n                      placeholder=\"Enter room description\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={12} item>\r\n                    <FormikInputField\r\n                      label=\"Notes/Notice\"\r\n                      name=\"notes\"\r\n                      placeholder=\"Write some notes here...\"\r\n                      variant=\"outlined\"\r\n                      InputLabelProps={{ shrink: true }}\r\n                      fullWidth\r\n                      multiline={true}\r\n                      rows={6}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </div>\r\n\r\n            <div style={{ marginTop: \"1em\" }}>\r\n              <Grid container justify={\"flex-end\"} spacing={3}>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                  >\r\n                    Save Room\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type=\"button\"\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    disableElevation\r\n                    onClick={() => {\r\n                      history.push(`/admin/room`);\r\n                    }}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n            <SuccessDialog {...successDialog}>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  formRef.current.handleReset();\r\n                  setSuccessDialog({\r\n                    open: false,\r\n                    message: \"\",\r\n                  });\r\n                }}\r\n              >\r\n                Add another record\r\n              </Button>\r\n              <Button\r\n                color=\"primary\"\r\n                disableElevation={false}\r\n                onClick={() => {\r\n                  history.push(`/admin/room`);\r\n                }}\r\n              >\r\n                View all records\r\n              </Button>\r\n            </SuccessDialog>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default AddRoomAdminView;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport RoomActions from \"../../../Services/Actions/RoomActions\";\r\nimport { RoomModel } from \"../../../Services/Models/RoomModel\";\r\ninterface IEditRoomDialog {\r\n  initial_form_values: RoomModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n  handleReloadDataTable: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  room_desc: yup.string().required().max(255).label(\"Course Description\"),\r\n});\r\n\r\nexport const EditRoomDialog: FC<IEditRoomDialog> = memo(\r\n  ({ initial_form_values, open, handleClose, handleReloadDataTable }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: RoomModel) => {\r\n        payload.room_pk = initial_form_values.room_pk;\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                RoomActions.updateRoom(payload, (msg: string) => {\r\n                  handleReloadDataTable();\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [\r\n        dispatch,\r\n        handleClose,\r\n        handleReloadDataTable,\r\n        initial_form_values.room_pk,\r\n      ]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Edit Class Details\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    id=\"form-edit-room\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    noValidate\r\n                  >\r\n                    {JSON.stringify(errors, null, 2)}\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          name=\"room_desc\"\r\n                          label=\"Room Description\"\r\n                          placeholder=\"Enter room description\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          required\r\n                        />\r\n                      </Grid>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Notes/Notice\"\r\n                          name=\"notes\"\r\n                          placeholder=\"Write some notes here...\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={6}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-edit-room\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditRoomDialog;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport IconButtonPopper from \"../../../Component/IconButtonPopper/IconButtonPopper\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { InvalidDateTimeToDefault } from \"../../../Hooks/UseDateParser\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setPageLinks,\r\n} from \"../../../Services/Actions/PageActions\";\r\nimport RoomActions, {\r\n  setRoomDataTableAction,\r\n} from \"../../../Services/Actions/RoomActions\";\r\nimport ITableColumns from \"../../../Services/Interface/ITableColumns\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RoomModel } from \"../../../Services/Models/RoomModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditRoomDialog from \"./EditRoomDialog\";\r\n\r\ninterface DataTableRoomAdminViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nconst tableColumns: Array<ITableColumns> = [\r\n  {\r\n    label: \"Room\",\r\n    width: 300,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Notes\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Active\",\r\n    width: 50,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Encoded At\",\r\n    width: 150,\r\n    align: \"left\",\r\n  },\r\n  {\r\n    label: \"Actions\",\r\n    width: 50,\r\n    align: \"center\",\r\n  },\r\n];\r\n\r\nexport const DataTableRoomAdminView: FC<DataTableRoomAdminViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.RoomReducer.fetching_room_data_table\r\n    );\r\n    const data_table: Array<RoomModel> = useSelector(\r\n      (store: RootStore) => store.RoomReducer.room_data_table?.table\r\n    );\r\n\r\n    const [selected_room, set_selected_room] = useState<RoomModel | null>(null);\r\n    const [open_edit_room_dialog, set_open_edit_room_dialog] = useState(false);\r\n\r\n    const handleOpenRoomDialog = useCallback(() => {\r\n      set_open_edit_room_dialog(true);\r\n    }, []);\r\n\r\n    const handleCloseRoomDialog = useCallback(() => {\r\n      set_open_edit_room_dialog(false);\r\n    }, []);\r\n\r\n    const [reload_data_table, set_reload_data_table] = useState(0);\r\n    const handleReloadDataTable = useCallback(() => {\r\n      set_reload_data_table((c) => c + 1);\r\n    }, []);\r\n\r\n    const handleToggleRoomStatus = useCallback(\r\n      (course_pk: number) => {\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                RoomActions.toggleRoomStatus(course_pk, (msg: string) => {\r\n                  handleReloadDataTable();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleReloadDataTable]\r\n    );\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(setRoomDataTableAction(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      reload_data_table,\r\n    ]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/admin/room\",\r\n              title: \"Rooms\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch]);\r\n\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n        >\r\n          <Grid item xs={12} container justify=\"flex-end\" alignItems=\"center\">\r\n            <Grid item>\r\n              <NavLink to=\"/admin/room/add\">\r\n                <Button disableElevation color=\"primary\" variant=\"contained\">\r\n                  Add Room\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={1}>\r\n            <Grid item xs={12}>\r\n              <TableContainer style={{ minHeight: 500, borderRadius: 10 }}>\r\n                <LinearLoadingProgress show={table_loading} />\r\n                <Table stickyHeader>\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      {tableColumns.map((col, index) => (\r\n                        <TableCell\r\n                          key={index}\r\n                          align={col.align}\r\n                          style={{ minWidth: col.width }}\r\n                        >\r\n                          {col.label}\r\n                        </TableCell>\r\n                      ))}\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {data_table?.length < 1 && (\r\n                      <TableRow>\r\n                        <TableCell align=\"center\" colSpan={5}>\r\n                          <span className=\"empty-rows\">\r\n                            No records has been added yet\r\n                          </span>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )}\r\n                    {data_table?.map((row, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell>\r\n                          <span style={{ fontWeight: 500 }}>\r\n                            {row.room_desc}\r\n                          </span>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Tooltip title={row.notes ? \"-\" : \"row.notes\"}>\r\n                            <span\r\n                              style={{\r\n                                whiteSpace: `nowrap`,\r\n                                overflow: `hidden`,\r\n                                textOverflow: `ellipsis`,\r\n                                fontSize: \".8em\",\r\n                              }}\r\n                            >\r\n                              {row.notes}\r\n                            </span>\r\n                          </Tooltip>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Chip\r\n                            label={row.is_active === 1 ? \"Yes\" : \"No\"}\r\n                            style={{\r\n                              backgroundColor:\r\n                                row.is_active === 1 ? \"#0d47a1\" : \"#d50000\",\r\n                              color:\r\n                                row.is_active === 1 ? \"#e3f2fd\" : \"#ffebee\",\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <div className=\"datetime\">\r\n                            {InvalidDateTimeToDefault(row.encoded_at, \"-\")}\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell align=\"center\">\r\n                          <IconButtonPopper\r\n                            size=\"small\"\r\n                            buttons={[\r\n                              {\r\n                                text: \"Edit Info.\",\r\n                                handleClick: () => {\r\n                                  set_selected_room(row);\r\n                                  handleOpenRoomDialog();\r\n                                },\r\n                              },\r\n                              {\r\n                                text:\r\n                                  row.is_active === 1\r\n                                    ? \"Set to Inactive\"\r\n                                    : \"Set to Active\",\r\n                                handleClick: () => {\r\n                                  handleToggleRoomStatus(row.room_pk);\r\n                                },\r\n                              },\r\n                            ]}\r\n                          />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {selected_room && (\r\n          <EditRoomDialog\r\n            initial_form_values={selected_room}\r\n            open={open_edit_room_dialog}\r\n            handleClose={handleCloseRoomDialog}\r\n            handleReloadDataTable={handleReloadDataTable}\r\n          />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default DataTableRoomAdminView;\r\n","import { Drawer } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport AdminActivityView from \"../Views/AdminViews/AdminActivityView\";\r\nimport AddClassAdminView from \"../Views/AdminViews/AdminClassView/AddClassAdminView\";\r\nimport { DataTableClassAdminView } from \"../Views/AdminViews/AdminClassView/DataTableClassAdminView\";\r\nimport ManageClassAdminView from \"../Views/SharedViews/Class/ManageClassView\";\r\nimport AddCourseAdminView from \"../Views/AdminViews/AdminCourseView/AddCourseAdminView\";\r\nimport { DataTableCourseAdminView } from \"../Views/AdminViews/AdminCourseView/DataTableCourseAdminView\";\r\nimport DashboardAdminView from \"../Views/AdminViews/AdminDashboardView/DashboardAdminView\";\r\nimport AdminProfileView from \"../Views/AdminViews/AdminProfileView\";\r\nimport DataTableStudentAdminView from \"../Views/AdminViews/AdminStudentView/DatatableStudentAdminView\";\r\nimport ManageStudentAdminView from \"../Views/AdminViews/AdminStudentView/ManageStudentAdminView\";\r\nimport AddAdminTutorView from \"../Views/AdminViews/AdminTutorView/AddAdminTutorView\";\r\nimport DataTableAdminTutorView from \"../Views/AdminViews/AdminTutorView/DataTableAdminTutorView\";\r\nimport ManageAdminAdminView from \"../Views/AdminViews/AdminTutorView/ManageAdminTutorView\";\r\nimport AddCoAdminView from \"../Views/AdminViews/CoAdminView/AddCoAdminView\";\r\nimport DataTableCoAdminView from \"../Views/AdminViews/CoAdminView/DataTableCoAdminView\";\r\nimport AddRoomAdminView from \"../Views/AdminViews/Room/AddRoomAdminView\";\r\nimport DataTableRoomAdminView from \"../Views/AdminViews/Room/DataTableRoomAdminView\";\r\n\r\nconst SysAdminRoutes = () => {\r\n  return (\r\n    <>\r\n      <AdminActivityView />\r\n      <Switch>\r\n        <Route path=\"/admin/dashboard\" exact>\r\n          <DashboardAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/class\" exact>\r\n          <DataTableClassAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/class/add\" exact>\r\n          <AddClassAdminView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/class/:class_pk\" strict>\r\n          <ManageClassAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/course\" exact>\r\n          <DataTableCourseAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/course/add\" exact>\r\n          <AddCourseAdminView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/tutor\" exact>\r\n          <DataTableAdminTutorView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/tutor/add\" exact>\r\n          <AddAdminTutorView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/tutor/:tutor_pk\" strict>\r\n          <ManageAdminAdminView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/room\" exact>\r\n          <DataTableRoomAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/room/add\" exact>\r\n          <AddRoomAdminView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/student\" exact>\r\n          <DataTableStudentAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/student/:student_pk\" strict>\r\n          <ManageStudentAdminView />\r\n        </Route>\r\n\r\n        <Route path=\"/admin/co-administrator\" exact>\r\n          <DataTableCoAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/co-administrator/add\" exact>\r\n          <AddCoAdminView />\r\n        </Route>\r\n        <Route path=\"/admin/profile\" exact>\r\n          <AdminProfileView />\r\n        </Route>\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SysAdminRoutes;\r\n","import { Grid, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface ITab {\r\n  label: String;\r\n  RenderComponent: React.FC | JSX.Element;\r\n}\r\n\r\ninterface ICustomTab {\r\n  tabs: Array<ITab>;\r\n}\r\n\r\nconst CustomTab: React.FC<ICustomTab> = memo(({ tabs }) => {\r\n  const theme = useTheme();\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <StyledCustomTabs>\r\n      <Grid container>\r\n        <Grid item xs={12} md={3} lg={2}>\r\n          <Tabs\r\n            orientation={desktop ? \"vertical\" : \"horizontal\"}\r\n            variant=\"scrollable\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            className=\"tabs\"\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            style={{\r\n              borderRight: desktop ? `1px solid ${theme.palette.divider}` : \"\",\r\n              borderBottom: !desktop\r\n                ? `1px solid ${theme.palette.divider}`\r\n                : \"\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            {tabs.map((value, index) => (\r\n              <Tab\r\n                label={value.label}\r\n                key={index}\r\n                value={index}\r\n                color=\"primary\"\r\n              />\r\n            ))}\r\n          </Tabs>\r\n        </Grid>\r\n        <Grid item xs={12} md={9} lg={10}>\r\n          <div className=\"body\">{tabs[value].RenderComponent}</div>\r\n        </Grid>\r\n      </Grid>\r\n    </StyledCustomTabs>\r\n  );\r\n});\r\n\r\nexport default CustomTab;\r\n\r\nconst StyledCustomTabs = styled.div`\r\n  .tabs {\r\n    .Mui-selected {\r\n      /* color: #2196f3 !important; */\r\n    }\r\n\r\n    .MuiTab-wrapper {\r\n      font-weight: 700 !important;\r\n      letter-spacing: 0.3pt;\r\n      word-spacing: 0.3pt;\r\n    }\r\n  }\r\n  .body {\r\n    /* margin-top: 0.5em; */\r\n    padding: 1em;\r\n    padding-top: 0.5em;\r\n  }\r\n`;\r\n","import DateFnsUtils from \"@date-io/date-fns\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardDatePickerProps,\r\n  KeyboardDateTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport React from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface DateFieldHookFormProps extends Partial<KeyboardDatePickerProps> {\r\n  name: string;\r\n  onChange?: any;\r\n  type: \"date\" | \"datetime\" | \"time\";\r\n}\r\n\r\nconst DateFieldHookForm: React.FC<DateFieldHookFormProps> = React.memo(\r\n  (props) => {\r\n    const { control, errors } = useFormContext();\r\n\r\n    console.log(`errors`, errors);\r\n\r\n    let error = false;\r\n    let error_message = \"\";\r\n\r\n    if (errors && errors?.hasOwnProperty(props?.name)) {\r\n      error = true;\r\n      error_message = errors[props?.name]?.message;\r\n    }\r\n\r\n    return (\r\n      <Controller\r\n        control={control}\r\n        name={props.name}\r\n        defaultValue={props.defaultValue}\r\n        render={({ onChange, onBlur, value }) => (\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid container justify=\"space-around\">\r\n              {props.type === \"datetime\" && (\r\n                <KeyboardDateTimePicker\r\n                  {...props}\r\n                  value={value}\r\n                  onChange={onChange}\r\n                  onBlur={onBlur}\r\n                  format=\"yyyy/MM/dd hh:mm a\"\r\n                  fullWidth={true}\r\n                  autoOk={true}\r\n                  error={error}\r\n                  helperText={error_message}\r\n                />\r\n              )}\r\n\r\n              {props.type === \"date\" && (\r\n                <KeyboardDatePicker\r\n                  {...props}\r\n                  onChange={onChange}\r\n                  onBlur={onBlur}\r\n                  value={value}\r\n                  disableToolbar\r\n                  format=\"MM/dd/yyyy\"\r\n                  fullWidth={true}\r\n                  autoOk={true}\r\n                  error={error}\r\n                  helperText={error_message}\r\n                />\r\n              )}\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n        )}\r\n        // name={props.name}\r\n        // defaultValue={props.defaultValue}\r\n        // onChange={props.onChange}\r\n        // onBlur={props.onBlur}\r\n        // variant={props.variant}\r\n        // label={props.label}\r\n        // style={props.style}\r\n        // className={props.className}\r\n        // color={props.color}\r\n        // size={props.size}\r\n        // InputLabelProps={props.InputLabelProps}\r\n        // placeholder={props.placeholder}\r\n        // fullWidth={props.fullWidth}\r\n        // multiline={props.multiline}\r\n        // rows={props.rows}\r\n        // rowsMax={props.rowsMax}\r\n        // error={error}\r\n        // helperText={error_message}\r\n      />\r\n    );\r\n\r\n    // return (\r\n    //   <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n    //     <Grid container justify=\"space-around\">\r\n    //       <KeyboardDatePicker\r\n    //         {...field}\r\n    //         onChange={handleChange}\r\n    //         disableToolbar\r\n    //         label={props.label}\r\n    //         variant=\"inline\"\r\n    //         animateYearScrolling={true}\r\n    //         disableFuture={disableFuture}\r\n    //         disablePast={disablePast}\r\n    //         format=\"MM/dd/yyyy\"\r\n    //         fullWidth={true}\r\n    //         inputVariant={variant ? variant : \"outlined\"}\r\n    //         InputLabelProps={{\r\n    //           shrink: true,\r\n    //         }}\r\n    //         autoOk={true}\r\n    //         error={!!errorText}\r\n    //         helperText={errorText}\r\n    //       />\r\n    //     </Grid>\r\n    //   </MuiPickersUtilsProvider>\r\n    // );\r\n  }\r\n);\r\n\r\nexport default DateFieldHookForm;\r\n","import { TextField, TextFieldProps } from \"@material-ui/core\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface TextFieldHookFormProps {\r\n  textFieldProps: TextFieldProps;\r\n}\r\n\r\nexport const TextFieldHookForm: FC<TextFieldProps> = memo((props) => {\r\n  const { control, errors, getValues } = useFormContext();\r\n\r\n  let error = false;\r\n  let error_message = \"\";\r\n\r\n  if (errors && errors?.hasOwnProperty(props?.name)) {\r\n    error = true;\r\n    error_message = errors[props?.name]?.message;\r\n  }\r\n\r\n  return (\r\n    <Controller\r\n      name={props.name}\r\n      control={control}\r\n      // defaultValue={\"\"}\r\n      render={(\r\n        { onChange, onBlur, value, name, ref },\r\n        { invalid, isTouched, isDirty }\r\n      ) => (\r\n        <TextField\r\n          {...props}\r\n          name={name}\r\n          error={error}\r\n          defaultValue={value}\r\n          onBlur={onBlur}\r\n          onChange={onChange}\r\n          helperText={error_message}\r\n          inputRef={ref}\r\n          // onChange={props.onChange}\r\n          // type={props.type}\r\n          // onBlur={props.onBlur}\r\n          // variant={props.variant}\r\n          // label={props.label}\r\n          // style={props.style}\r\n          // className={props.className}\r\n          // color={props.color}\r\n          // size={props.size}\r\n          // InputLabelProps={props.InputLabelProps}\r\n          // placeholder={props.placeholder}\r\n          // fullWidth={props.fullWidth}\r\n          // multiline={props.multiline}\r\n          // rows={props.rows}\r\n          // rowsMax={props.rowsMax}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n});\r\n\r\nexport default TextFieldHookForm;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { useForm, FormProvider } from \"react-hook-form\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport DateFieldHookForm from \"../../../Component/HookForm/DateFieldHookForm\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport { SessionTaskModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport * as Yup from \"yup\";\r\nimport { useCallback } from \"react\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface IEditTaskDialog {\r\n  task: SessionTaskModel;\r\n  open: boolean;\r\n  handleSetOpenEditTask: (open: boolean) => void;\r\n}\r\n\r\nconst validate_task = Yup.object({\r\n  task_title: Yup.string().required().label(\"Task Title\"),\r\n  task_desc: Yup.string().required().label(\"Task Description\"),\r\n  due_date: Yup.string().nullable().required().label(\"Due Date\"),\r\n});\r\n\r\nexport const EditTaskDialog: FC<IEditTaskDialog> = memo(\r\n  ({ task, open, handleSetOpenEditTask }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task = useForm({\r\n      resolver: yupResolver(validate_task),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        task_title: task.task_title,\r\n        task_desc: task.task_desc,\r\n        due_date: task.due_date,\r\n      },\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        const payload: SessionTaskModel = {\r\n          ...data,\r\n          class_task_pk: task.class_task_pk,\r\n        };\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateClassMaterialAction(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setSingleClassTask(\r\n                        payload.class_task_pk\r\n                      )\r\n                    );\r\n                    handleSetOpenEditTask(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, form_edit_task, handleSetOpenEditTask, task.class_task_pk]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Edit Task Details\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleSetOpenEditTask(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task}>\r\n              <form\r\n                id=\"task-form\"\r\n                onSubmit={form_edit_task.handleSubmit(handleSubmitFormTask)}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <Grid item xs={6}>\r\n                    <TextFieldHookForm\r\n                      name=\"task_title\"\r\n                      label=\"Task Title\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={6}>\r\n                    <DateFieldHookForm\r\n                      name=\"due_date\"\r\n                      type=\"datetime\"\r\n                      fullWidth={true}\r\n                      InputLabelProps={{ shrink: true }}\r\n                      inputVariant={\"outlined\"}\r\n                      disablePast\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"task_desc\"\r\n                      label=\"Task Description\"\r\n                      multiline={true}\r\n                      rows={3}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                      placeholder=\"Write the class description and/or instructions here...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTaskDialog;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as Yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskQuesModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\n\r\ninterface EditQuesProps {\r\n  task_ques: SessionTaskQuesModel;\r\n  open: boolean;\r\n  handleSetOpenEditQues: (open: boolean) => void;\r\n}\r\n\r\nconst validate_task_ques = Yup.object({\r\n  question: Yup.string().required().label(\"Question\"),\r\n  cor_answer: Yup.string().required().label(\"Correct Answert\"),\r\n  pnt: Yup.number().min(0).nullable().required().label(\"Point\"),\r\n});\r\n\r\nexport const EditQues: FC<EditQuesProps> = memo(\r\n  ({ task_ques, open, handleSetOpenEditQues }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task_ques = useForm({\r\n      resolver: yupResolver(validate_task_ques),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        question: task_ques.question,\r\n        cor_answer: task_ques.cor_answer,\r\n        pnt: task_ques.pnt,\r\n      },\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        const payload: SessionTaskQuesModel = {\r\n          ...data,\r\n          task_ques_pk: task_ques.task_ques_pk,\r\n        };\r\n\r\n        console.log(`payload`, payload);\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateClassTaskQues(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task_ques.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setAllClassTaskQues(\r\n                        task_ques.class_task_pk\r\n                      )\r\n                    );\r\n                    handleSetOpenEditQues(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [\r\n        dispatch,\r\n        form_edit_task_ques,\r\n        handleSetOpenEditQues,\r\n        task_ques.class_task_pk,\r\n        task_ques.task_ques_pk,\r\n      ]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Edit Task Details\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleSetOpenEditQues(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task_ques}>\r\n              <form\r\n                id=\"task-ques-form\"\r\n                onSubmit={form_edit_task_ques.handleSubmit(\r\n                  handleSubmitFormTask\r\n                )}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"question\"\r\n                      label=\"Question\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      multiline={true}\r\n                      rows={4}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"cor_answer\"\r\n                      label=\"Correct Answer\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      multiline={true}\r\n                      rows={2}\r\n                      InputLabelProps={{ shrink: true }}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <TextFieldHookForm\r\n                      name=\"pnt\"\r\n                      label=\"Points\"\r\n                      type=\"number\"\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                      required\r\n                      InputLabelProps={{ shrink: true }}\r\n                      placeholder=\"Write the class description and/or instructions here...\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-ques-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Save Changes\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditQues;\r\n","import {\r\n  Button,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { FormProvider, useFieldArray, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskQuesModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditQues from \"./EditQues\";\r\n\r\ninterface IManageTaskQuesView {\r\n  class_task_pk: number;\r\n}\r\n\r\nexport const ManageTaskQuesView: FC<IManageTaskQuesView> = memo(\r\n  ({ class_task_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_class_task_ques = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_class_task_ques\r\n    );\r\n    const fetch_all_class_task_ques = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassSessionTaskReducer.fetch_all_class_task_ques\r\n    );\r\n\r\n    const all_class_task_sub = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_class_task_sub\r\n    );\r\n\r\n    console.log(`all_class_task_sub`, all_class_task_sub);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer?.user?.user_type\r\n    );\r\n\r\n    console.log(`user_type`, user_type);\r\n\r\n    const [open_edit_ques, set_open_edit_ques] = useState(false);\r\n    const [\r\n      selected_task_ques,\r\n      set_selected_task_ques,\r\n    ] = useState<null | SessionTaskQuesModel>(null);\r\n\r\n    const handleSetOpenEditQues = useCallback((open: boolean) => {\r\n      set_open_edit_ques(open);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllClassTaskQues(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllClassTaskSub(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    useEffect(() => {\r\n      // all_class_task_sub && form_edit_task.setValue(all_class_task_sub, 1);\r\n      // return () => {};\r\n    }, []);\r\n\r\n    return (\r\n      <TableContainer>\r\n        <LinearLoadingProgress show={fetch_all_class_task_ques} />\r\n\r\n        {user_type === \"tutor\" ? (\r\n          <Table size=\"small\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width=\"5%\">#</TableCell>\r\n                <TableCell width=\"85%\">Question Details</TableCell>\r\n                <TableCell width=\"10%\">Actions</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {all_class_task_ques?.map((q, i) => (\r\n                <TableRow key={i}>\r\n                  <TableCell>{i + 1}</TableCell>\r\n                  <TableCell>\r\n                    <div\r\n                      style={{\r\n                        display: `grid`,\r\n                        gridGap: `.3em`,\r\n                        fontWeight: 500,\r\n                        fontSize: `.87em`,\r\n                      }}\r\n                    >\r\n                      <div>\r\n                        Q: <span className=\"ques\">{q.question}</span>\r\n                      </div>\r\n                      <div>\r\n                        A: <span className=\"ques\">{q.cor_answer}</span>\r\n                      </div>\r\n                      <div>\r\n                        P: <span className=\"ques\">{q.pnt}</span>\r\n                      </div>\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <IconButton\r\n                      color=\"secondary\"\r\n                      onClick={() => {\r\n                        handleSetOpenEditQues(true);\r\n                        set_selected_task_ques(q);\r\n                      }}\r\n                    >\r\n                      <EditRoundedIcon />\r\n                    </IconButton>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        ) : (\r\n          all_class_task_sub && (\r\n            <StudentQuestion all_class_task_sub={all_class_task_sub} />\r\n          )\r\n        )}\r\n        {selected_task_ques && open_edit_ques && (\r\n          <EditQues\r\n            handleSetOpenEditQues={handleSetOpenEditQues}\r\n            open={open_edit_ques}\r\n            task_ques={selected_task_ques}\r\n          />\r\n        )}\r\n      </TableContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageTaskQuesView;\r\n\r\nconst StudentQuestion = ({ all_class_task_sub }) => {\r\n  const dispatch = useDispatch();\r\n  const form_edit_task = useForm({\r\n    // resolver: yupResolver(validate_task),\r\n    mode: \"onBlur\",\r\n    defaultValues: {\r\n      questions: all_class_task_sub,\r\n    },\r\n  });\r\n\r\n  const { fields, append, prepend, remove, swap, move, insert } = useFieldArray(\r\n    {\r\n      control: form_edit_task.control,\r\n      name: \"questions\",\r\n    }\r\n  );\r\n\r\n  const handleSubmitFormTask = useCallback(\r\n    (data) => {\r\n      const payload = data.questions;\r\n\r\n      console.log(`payload`, data);\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              ClassSessionTaskActions.addClassTaskSub(\r\n                payload,\r\n                (msg: string) => {\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setAllClassTaskSub(\r\n                      all_class_task_sub.class_task_pk\r\n                    )\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [all_class_task_sub.class_task_pk, dispatch]\r\n  );\r\n\r\n  return (\r\n    <FormProvider {...form_edit_task}>\r\n      <form\r\n        id=\"submit-ques-form\"\r\n        onSubmit={form_edit_task.handleSubmit(handleSubmitFormTask)}\r\n        noValidate\r\n      >\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"5%\">#</TableCell>\r\n              <TableCell width=\"40%\">Answer</TableCell>\r\n              <TableCell width=\"55%\">Questions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {fields.map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell>{index + 1}</TableCell>\r\n                <TableCell>\r\n                  <div\r\n                    style={{\r\n                      display: `grid`,\r\n                      gridGap: `.3em`,\r\n                      fontWeight: 500,\r\n                      fontSize: `.87em`,\r\n                    }}\r\n                  >\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].answer`}\r\n                      multiline={true}\r\n                      rows={2}\r\n                    />\r\n\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].task_sub_pk`}\r\n                      type=\"hidden\"\r\n                    />\r\n                    <TextFieldHookForm\r\n                      name={`questions[${index}].task_ques_pk`}\r\n                      type=\"hidden\"\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small className=\"ques\">{item.question}</small>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div\r\n          style={{\r\n            display: `grid`,\r\n            justifyContent: `end`,\r\n            justifyItems: `end`,\r\n            width: `100%`,\r\n            padding: `1em`,\r\n          }}\r\n        >\r\n          <Button\r\n            form=\"submit-ques-form\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Submit & Save Answers\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Grid,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport {\r\n  Controller,\r\n  FormProvider,\r\n  useFieldArray,\r\n  useForm,\r\n} from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport TextFieldHookForm from \"../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskSubModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\n\r\ninterface ViewSubmissionDialogProps {\r\n  selected_submission: SessionTaskSubModel;\r\n  open: boolean;\r\n  handleViewSubmitDtls: (open: boolean) => void;\r\n  class_task_pk: number;\r\n}\r\n\r\n// const validate_task_ques = Yup.object({\r\n//   is_corrent: Yup.string().required().label(\"Correct Answert\"),\r\n// });\r\n\r\nexport const ViewSubmissionDialog: FC<ViewSubmissionDialogProps> = memo(\r\n  ({ selected_submission, class_task_pk, open, handleViewSubmitDtls }) => {\r\n    const dispatch = useDispatch();\r\n    const form_edit_task_ques = useForm<SessionTaskSubModel>({\r\n      //   resolver: yupResolver(validate_task_ques),\r\n      mode: \"onBlur\",\r\n      defaultValues: {\r\n        questions: selected_submission.questions,\r\n      },\r\n    });\r\n\r\n    const { fields } = useFieldArray({\r\n      control: form_edit_task_ques.control,\r\n      name: \"questions\",\r\n    });\r\n\r\n    const handleSubmitFormTask = useCallback(\r\n      (data) => {\r\n        const payload: any = [];\r\n\r\n        data?.questions?.forEach((element) => {\r\n          console.log(`element`, element);\r\n          payload.push({\r\n            is_correct: element.is_correct === true ? \"y\" : \"n\",\r\n            task_sub_pk: element.task_sub_pk,\r\n          });\r\n        });\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                ClassSessionTaskActions.updateTaskSub(\r\n                  payload,\r\n                  (msg: string) => {\r\n                    form_edit_task_ques.reset();\r\n                    dispatch(\r\n                      ClassSessionTaskActions.setAllStudentsSubmit(\r\n                        class_task_pk\r\n                      )\r\n                    );\r\n                    handleViewSubmitDtls(false);\r\n                  }\r\n                )\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [class_task_pk, dispatch, form_edit_task_ques, handleViewSubmitDtls]\r\n    );\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"VIew Student Submission\"\r\n        open={open}\r\n        handleClose={() => {\r\n          handleViewSubmitDtls(false);\r\n        }}\r\n        body={\r\n          <div style={{ padding: `1em` }}>\r\n            <FormProvider {...form_edit_task_ques}>\r\n              <form\r\n                id=\"task-sub-ques-form\"\r\n                onSubmit={form_edit_task_ques.handleSubmit(\r\n                  handleSubmitFormTask\r\n                )}\r\n                noValidate\r\n              >\r\n                <Grid spacing={3} container>\r\n                  <TableContainer>\r\n                    {/* <LinearLoadingProgress show={fetch_all_student_submit} /> */}\r\n                    <Table size=\"small\">\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          <TableCell width=\"5%\">#</TableCell>\r\n                          <TableCell width=\"5%\">Check</TableCell>\r\n                          <TableCell width=\"20%\">Answer</TableCell>\r\n                          <TableCell width=\"60%\">Question</TableCell>\r\n                          <TableCell width=\"5%\">Points</TableCell>\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {fields.map((item, index) => (\r\n                          <TableRow key={index}>\r\n                            <TableCell>{index + 1}</TableCell>\r\n                            <TableCell>\r\n                              <Controller\r\n                                name={`questions[${index}].is_correct`}\r\n                                control={form_edit_task_ques.control}\r\n                                render={(props) => (\r\n                                  <Checkbox\r\n                                    {...props}\r\n                                    onChange={(e) =>\r\n                                      props.onChange(e.target.checked)\r\n                                    }\r\n                                  />\r\n                                )}\r\n                              />\r\n                              <TextFieldHookForm\r\n                                name={`questions[${index}].task_sub_pk`}\r\n                                type=\"hidden\"\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>\r\n                              <small className=\"ques\">{item.answer}</small>\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                              <small className=\"ques\">Q: {item.question}</small>\r\n                              <div>\r\n                                A: <small>{item.answer}</small>\r\n                              </div>\r\n                            </TableCell>\r\n\r\n                            <TableCell>\r\n                              <small className=\"ques\">{item.pnt}</small>\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        ))}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Grid>\r\n              </form>\r\n            </FormProvider>\r\n          </div>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button\r\n              type=\"submit\"\r\n              form=\"task-sub-ques-form\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n            >\r\n              Submit Work\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default ViewSubmissionDialog;\r\n","import {\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport EditRoundedIcon from \"@material-ui/icons/EditRounded\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { SessionTaskSubModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport ViewSubmissionDialog from \"./ViewSubmissionDialog\";\r\n\r\ninterface IManageTaskSubmit {\r\n  class_task_pk: number;\r\n}\r\n\r\nexport const ManageTaskSubmit: FC<IManageTaskSubmit> = memo(\r\n  ({ class_task_pk }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const all_student_submit = useSelector(\r\n      (store: RootStore) => store.ClassSessionTaskReducer.all_student_submit\r\n    );\r\n    const fetch_all_student_submit = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassSessionTaskReducer.fetch_all_student_submit\r\n    );\r\n\r\n    const [view_submit_dtls, set_view_submit_dtls] = useState(false);\r\n    const [\r\n      selected_submit,\r\n      set_selected_submit,\r\n    ] = useState<SessionTaskSubModel>(null);\r\n\r\n    const handleViewSubmitDtls = useCallback((open: boolean) => {\r\n      set_view_submit_dtls(open);\r\n    }, []);\r\n\r\n    const user_type = useSelector(\r\n      (store: RootStore) => store.UserReducer?.user?.user_type\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const load = () => {\r\n        dispatch(ClassSessionTaskActions.setAllStudentsSubmit(class_task_pk));\r\n      };\r\n\r\n      mounted && load();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [class_task_pk, dispatch]);\r\n\r\n    return (\r\n      <TableContainer>\r\n        <LinearLoadingProgress show={fetch_all_student_submit} />\r\n        <Table size=\"small\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell width=\"5%\">#</TableCell>\r\n              <TableCell width=\"70%\">Student</TableCell>\r\n              <TableCell width=\"20%\">Submitted At</TableCell>\r\n              <TableCell width=\"5%\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {all_student_submit?.map((s, i) => (\r\n              <TableRow key={i}>\r\n                <TableCell>{i + 1}</TableCell>\r\n                <TableCell>\r\n                  <div\r\n                    style={{\r\n                      display: `grid`,\r\n                      gridGap: `.3em`,\r\n                      fontWeight: 500,\r\n                      fontSize: `.87em`,\r\n                    }}\r\n                  >\r\n                    <span className=\"ques\"></span>\r\n                    <div className=\"table-cell-profile\">\r\n                      <CustomAvatar\r\n                        className=\"image\"\r\n                        src={s.student.picture}\r\n                        errorMessage={s.student.lastname.charAt(0)}\r\n                      />\r\n                      <div className=\"title\">\r\n                        <span style={{ textTransform: \"capitalize\" }}>\r\n                          {s.student.lastname},{s.student.firstname}\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"sub-title\">Grade {s.student.grade}</div>\r\n                    </div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <small> {parseDateTimeOrDefault(s.answered_at, \"-\")}</small>\r\n                </TableCell>\r\n                <TableCell>\r\n                  <IconButton\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      handleViewSubmitDtls(true);\r\n                      console.log(`s`, s);\r\n                      set_selected_submit(s);\r\n                    }}\r\n                  >\r\n                    <EditRoundedIcon />\r\n                  </IconButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        {selected_submit && (\r\n          <ViewSubmissionDialog\r\n            selected_submission={selected_submit}\r\n            handleViewSubmitDtls={handleViewSubmitDtls}\r\n            open={view_submit_dtls}\r\n            class_task_pk={class_task_pk}\r\n          />\r\n        )}\r\n      </TableContainer>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageTaskSubmit;\r\n","import {\r\n  Button,\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomTab from \"../../../Component/CustomTabs\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport { parseDateTimeOrDefault } from \"../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { SessionTaskModel } from \"../../../Services/Models/ClassSessionTaskModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport EditTaskDialog from \"./EditTaskDialog\";\r\nimport ManageTaskQuesViewStud from \"./ManageTaskQuesStud\";\r\nimport ManageTaskQuesView from \"./ManageTaskQuesView\";\r\nimport ManageTaskSubmit from \"./ManageTaskSubmit\";\r\ninterface IManageTaskView {}\r\n\r\nexport const ManageTaskView: FC<IManageTaskView> = memo(() => {\r\n  const theme = useTheme();\r\n  const md_screen = useMediaQuery(theme.breakpoints.down(\"lg\"));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n  const single_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.single_class_task\r\n  );\r\n\r\n  const [open_edit_task, set_open_edit_task] = useState(false);\r\n\r\n  const handleSetOpenEditTask = useCallback((open: boolean) => {\r\n    set_open_edit_task(open);\r\n  }, []);\r\n\r\n  const [tabs, set_tabls] = useState<any>();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const loadTabs = () => {\r\n      const gen_tab = [\r\n        {\r\n          label: \"Questions\",\r\n          RenderComponent: (\r\n            <ManageTaskQuesView\r\n              class_task_pk={single_class_task?.class_task_pk}\r\n            />\r\n          ),\r\n        },\r\n      ];\r\n\r\n      if (user?.user_type === \"tutor\") {\r\n        gen_tab.push({\r\n          label: \"Submissions\",\r\n          RenderComponent: (\r\n            <ManageTaskSubmit\r\n              class_task_pk={single_class_task?.class_task_pk}\r\n            />\r\n          ),\r\n        });\r\n      }\r\n\r\n      set_tabls((tabs) => {\r\n        return [...gen_tab];\r\n      });\r\n    };\r\n\r\n    mounted && user && loadTabs();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [single_class_task, user]);\r\n\r\n  return (\r\n    <>\r\n      {single_class_task && (\r\n        <FormDialog\r\n          open={true}\r\n          fullScreen={md_screen}\r\n          minWidth={theme.breakpoints.values.lg}\r\n          handleClose={() =>\r\n            dispatch(ClassSessionTaskActions.setSingleClassTask(0, true))\r\n          }\r\n          title=\"Task Information\"\r\n          body={\r\n            <Container maxWidth=\"lg\" style={{ padding: `1em` }}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  {user?.user_type === \"tutor\" && (\r\n                    <div\r\n                      style={{\r\n                        padding: `1em`,\r\n                        display: `grid`,\r\n                        gridGap: `.5em`,\r\n                        gridAutoFlow: `column`,\r\n                        justifyContent: `start`,\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          handleSetOpenEditTask(true);\r\n                        }}\r\n                      >\r\n                        Edit Task\r\n                      </Button>\r\n\r\n                      {single_class_task?.sts_pk === \"c\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              sts_pk: \"s\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.changeStatusClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Start Task\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.allow_submit === \"n\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              allow_submit: \"y\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.toggleSubmitClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Allow Sub.\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.sts_pk === \"s\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              sts_pk: \"c\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.changeStatusClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Cancel Task\r\n                        </Button>\r\n                      )}\r\n\r\n                      {single_class_task?.allow_submit === \"y\" && (\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            const payload: SessionTaskModel = {\r\n                              class_task_pk: single_class_task?.class_task_pk,\r\n                              allow_submit: \"n\",\r\n                            };\r\n                            dispatch(\r\n                              setGeneralPrompt({\r\n                                open: true,\r\n                                continue_callback: () =>\r\n                                  dispatch(\r\n                                    ClassSessionTaskActions.toggleSubmitClassTask(\r\n                                      payload,\r\n                                      (msg: string) => {\r\n                                        dispatch(\r\n                                          ClassSessionTaskActions.setSingleClassTask(\r\n                                            payload.class_task_pk\r\n                                          )\r\n                                        );\r\n                                      }\r\n                                    )\r\n                                  ),\r\n                              })\r\n                            );\r\n                          }}\r\n                        >\r\n                          Disallow Sub.\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  <h2>{single_class_task?.task_title}</h2>\r\n                  <div>\r\n                    {parseDateTimeOrDefault(single_class_task?.due_date, \"-\")}\r\n                  </div>\r\n                  {/* <div>\r\n                    <Chip\r\n                      label={single_class_task?.status_dtls?.sts_desc}\r\n                      title={single_class_task?.status_dtls?.sts_desc}\r\n                      style={{\r\n                        color: single_class_task?.status_dtls?.sts_color,\r\n                        backgroundColor:\r\n                          single_class_task?.status_dtls?.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </div> */}\r\n                  <div>{single_class_task?.task_desc}</div>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <CustomTab tabs={tabs} />\r\n                </Grid>\r\n              </Grid>\r\n            </Container>\r\n          }\r\n          // actions={<>Some Actions</>}\r\n        />\r\n      )}\r\n\r\n      {single_class_task && (\r\n        <EditTaskDialog\r\n          task={single_class_task}\r\n          open={open_edit_task}\r\n          handleSetOpenEditTask={handleSetOpenEditTask}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default ManageTaskView;\r\n","import { useTheme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface IBody {\r\n  isOpenMobileHeader: boolean;\r\n}\r\nconst Body: React.FC<IBody> = memo(({ children, isOpenMobileHeader }) => {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledBody\r\n      theme={theme}\r\n      className={clsx(\"\", {\r\n        \"expand-body\": isOpenMobileHeader,\r\n      })}\r\n    >\r\n      {children}\r\n    </StyledBody>\r\n  );\r\n});\r\nexport default Body;\r\nconst StyledBody = styled.main`\r\n  margin-top: ${(p) => p.theme.header.height + 50}px !important;\r\n  transition: 0.2s margin-top ease-in-out;\r\n\r\n  &.expand-body {\r\n    margin-top: ${(p) => p.theme.header.height * 2 + 50}px !important;\r\n    transition: 0.2s margin-top ease-in-out;\r\n  }\r\n\r\n  .page-container {\r\n    background-color: #fff !important;\r\n    min-height: calc(100vh - ${(p) => p.theme.header.height + 40}px) !important;\r\n    padding: 0.5em;\r\n  }\r\n`;\r\n","import { AppBar, Breadcrumbs, useTheme } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport React, { FC, memo } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\ninterface ILink {\r\n  link: string;\r\n  title: string;\r\n}\r\n\r\ninterface IPageLinks {\r\n  links: Array<ILink>;\r\n  isOpenMobileHeader?: boolean;\r\n}\r\n\r\nconst PageLinks: FC<IPageLinks> = memo(({ links, isOpenMobileHeader }) => {\r\n  const theme = useTheme();\r\n  return (\r\n    <StyledPageLinks\r\n      theme={theme}\r\n      className={clsx(\"\", {\r\n        \"expand-navlinks\": isOpenMobileHeader,\r\n      })}\r\n    >\r\n      <Breadcrumbs aria-label=\"breadcrumb\" className=\"bread-crumb\">\r\n        {links.map((v, i) => (\r\n          <Link\r\n            key={i}\r\n            style={{ color: `#333` }}\r\n            to={v.link}\r\n            className=\"navText\"\r\n          >\r\n            {v.title}\r\n          </Link>\r\n        ))}\r\n      </Breadcrumbs>\r\n    </StyledPageLinks>\r\n  );\r\n});\r\n\r\nexport default PageLinks;\r\n\r\nconst StyledPageLinks = styled(AppBar)`\r\n  padding: 0 1em;\r\n  background-color: ${(p) => p.theme.body.backgroundColor} !important;\r\n  height: 45px;\r\n  max-height: 45px;\r\n  display: grid !important;\r\n  align-content: center !important;\r\n  border: none !important;\r\n  box-shadow: none !important;\r\n  margin-top: ${(p) => p.theme.header.height}px !important;\r\n  transition: 0.2s margin-top ease-in-out !important;\r\n  &.expand-navlinks {\r\n    transition: 0.2s margin-top ease-in-out !important;\r\n    margin-top: ${(p) => p.theme.header.height * 2}px !important;\r\n  }\r\n  .bread-crumb {\r\n    .navText {\r\n      text-decoration: none !important;\r\n      font-weight: 600 !important;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledUserProfile = styled.div`\r\n  margin-left: 1em;\r\n  .header {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-template-areas: \"image icon user\";\r\n    align-items: center;\r\n    align-content: center;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n\r\n      .profile-image,\r\n      .icon {\r\n        transition: 0.3s all ease-in-out;\r\n      }\r\n    }\r\n    .profile-image {\r\n      grid-area: image;\r\n      height: 45px;\r\n      width: 43px;\r\n      background-color: ${(p) => p.theme.palette.secondary.main} !important;\r\n      img {\r\n        /* margin: 0.5em; */\r\n      }\r\n    }\r\n\r\n    .icon {\r\n      justify-self: start;\r\n      grid-area: icon;\r\n      color: ${(p) => p.theme.palette.primary.contrastText};\r\n    }\r\n    .user {\r\n      grid-area: user;\r\n      max-width: 100px;\r\n\r\n      .fullname {\r\n        font-size: 0.8em;\r\n        font-weight: 600;\r\n        white-space: nowrap;\r\n        overflow: hidden;\r\n        text-overflow: ellipsis;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n        text-transform: capitalize;\r\n      }\r\n      .designation {\r\n        font-size: 0.8em;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n        text-transform: capitalize;\r\n      }\r\n    }\r\n  }\r\n\r\n  .MuiPopover-root {\r\n    background-color: red !important;\r\n    & > .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n    &.content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n\r\n    .content-header {\r\n      background-color: red !important;\r\n      color: red;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledPopOverContent = styled.div`\r\n  max-width: 360px;\r\n  min-width: 250px;\r\n  .content-header {\r\n    overflow: hidden;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    align-content: center;\r\n    justify-content: start;\r\n    align-items: center;\r\n    justify-items: start;\r\n    grid-gap: 1em;\r\n    padding: 1em;\r\n    grid-auto-columns: 50px 1fr 100px;\r\n    background-color: ${(p) => p.theme.palette.primary.light};\r\n    color: ${(p) => p.theme.palette.primary.contrastText};\r\n\r\n    .content-header-image {\r\n      height: 50px;\r\n      width: 50px;\r\n      background-color: ${(p) => p.theme.palette.secondary.main} !important;\r\n    }\r\n    .content-header-user {\r\n      font-size: 0.8em;\r\n      text-transform: capitalize;\r\n\r\n      .name {\r\n        font-weight: 600;\r\n      }\r\n    }\r\n\r\n    .btn-logout {\r\n      color: black;\r\n    }\r\n  }\r\n\r\n  .content-body {\r\n    padding: 1.5em;\r\n    padding-top: 1em;\r\n    font-size: 0.87em;\r\n\r\n    .content-title {\r\n      font-weight: 900;\r\n      color: rgba(0, 0, 0, 0.6);\r\n    }\r\n    .content-items {\r\n      margin-top: 0.5em;\r\n      display: grid;\r\n      grid-gap: 0.5em;\r\n    }\r\n    .link {\r\n      padding: 0.5em 0;\r\n      border-bottom: 0.01em solid rgba(0, 0, 0, 0.2);\r\n      color: rgba(0, 0, 0, 1) !important;\r\n      &:hover {\r\n        color: blue !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { Popover, useTheme } from \"@material-ui/core\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport React, { memo, useCallback } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { removeToken } from \"../../Helpers/AppConfig\";\r\nimport CustomAvatar from \"../CustomAvatar\";\r\nimport { StyledPopOverContent, StyledUserProfile } from \"./styles\";\r\n\r\ninterface IUserProfile {\r\n  variant: \"mobile\" | \"desktop\";\r\n  user: any;\r\n}\r\n\r\nconst UserProfile: React.FC<IUserProfile> = memo(({ variant, user }) => {\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const theme = useTheme();\r\n\r\n  const handleClick = useCallback((event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  }, []);\r\n\r\n  const handleClose = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, []);\r\n\r\n  const handleLogout = useCallback(() => {\r\n    removeToken();\r\n    window.location.href = \"/login\";\r\n  }, []);\r\n\r\n  const open = Boolean(anchorEl);\r\n  const id = open ? \"simple-popover\" : undefined;\r\n\r\n  // let ProfileLink;\r\n\r\n  // if (user?.user_type === \"admin\") {\r\n  //   ProfileLink = (\r\n\r\n  //   );\r\n  // } else if (user?.user_type === \"tutor\") {\r\n  //   ProfileLink = (\r\n  //     <NavLink to=\"/clinic/myprofile\" className=\"link\">\r\n  //       My Profile\r\n  //     </NavLink>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <StyledUserProfile theme={theme}>\r\n      <div className=\"header\" aria-describedby={id} onClick={handleClick}>\r\n        <CustomAvatar\r\n          src={user?.picture}\r\n          errorMessage={`${user?.fullname.charAt(0)}`}\r\n          className=\"profile-image\"\r\n        />\r\n        {open ? (\r\n          <ExpandLessIcon className=\"icon\" fontSize=\"small\" />\r\n        ) : (\r\n          <ExpandMoreIcon className=\"icon\" fontSize=\"small\" />\r\n        )}\r\n\r\n        {variant === \"mobile\" ? null : (\r\n          <div className=\"user\">\r\n            <div className=\"fullname\">{user?.fullname}</div>\r\n            <div className=\"designation\">{user?.user_type}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <StyledPopOverContent theme={theme} className=\"content-container\">\r\n          <div className=\"content-header\">\r\n            <CustomAvatar\r\n              src={user?.picture}\r\n              errorMessage={`${user?.fullname.charAt(0)}`}\r\n              className=\"content-header-image\"\r\n            />\r\n            <div className=\"content-header-user\">\r\n              <div className=\"name\">{user?.fullname}</div>\r\n              <div className=\"designation\">{user?.user_type}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"content-body\">\r\n            <div className=\"content-title\">MENUS</div>\r\n            <div className=\"content-items\">\r\n              <NavLink\r\n                to={`/${user?.user_type}/profile`}\r\n                className=\"link\"\r\n                onClick={handleClose}\r\n              >\r\n                My Profile\r\n              </NavLink>\r\n              <div className=\"link\" onClick={handleLogout}>\r\n                Logout\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </StyledPopOverContent>\r\n      </Popover>\r\n    </StyledUserProfile>\r\n  );\r\n});\r\n\r\nexport default UserProfile;\r\n","import {\r\n  AppBar,\r\n  Avatar,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport clsx from \"clsx\";\r\nimport React, { memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport Message from \"../../Component/Message/Message\";\r\nimport Notification from \"../../Component/Notification/Notification\";\r\nimport PageLinks from \"../../Component/PageLinks\";\r\nimport TaskMenu from \"../../Component/TaskMenu/TaskMenu\";\r\nimport UserProfile from \"../../Component/UserProfile/UserProfile\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { toggleActivitySidebar } from \"../../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\nimport AssignmentRoundedIcon from \"@material-ui/icons/AssignmentRounded\";\r\ninterface IHeader {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileHeader: boolean;\r\n  isOpenMobileSidebar: boolean;\r\n  handleToggleHeader: () => void;\r\n  handleToggleSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst Header: React.FC<IHeader> = memo(\r\n  ({\r\n    PageNavLinks,\r\n    isOpenMobileHeader,\r\n    handleToggleHeader,\r\n    handleToggleSidebar,\r\n    isOpenMobileSidebar,\r\n    user,\r\n  }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const page_links = useSelector(\r\n      (store: RootStore) => store.PageReducer.page_links\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <StyledHeader\r\n          theme={theme}\r\n          className={clsx(\"\", {\r\n            \"mobile-menu-open\": isOpenMobileHeader,\r\n          })}\r\n        >\r\n          <IconButton\r\n            color=\"inherit\"\r\n            className=\"btn-open-drawer\"\r\n            onClick={handleToggleSidebar}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <div\r\n            className=\"brand\"\r\n            style={{\r\n              opacity: isOpenMobileSidebar ? 0 : 1,\r\n            }}\r\n            onClick={() => {\r\n              // window.location.href = \"/admin/dashboard\";\r\n              history.push(`/${user?.user_type}/dashboard`);\r\n            }}\r\n          >\r\n            <Avatar src={logo} className=\"brand-logo\" alt=\"\" />\r\n            <div className=\"brand-name\">{process.env.REACT_APP_CLIENT}</div>\r\n            <div className=\"app-name\">{APP_NAME}</div>\r\n          </div>\r\n\r\n          <nav className=\"nav\">\r\n            {PageNavLinks.map((nav, index) => (\r\n              <NavLink\r\n                key={index}\r\n                activeClassName=\"nav-item-active\"\r\n                to={nav.to}\r\n                className=\"nav-item\"\r\n              >\r\n                {nav.text}\r\n              </NavLink>\r\n            ))}\r\n          </nav>\r\n\r\n          <section className=\"tools\">\r\n            {/* {user?.user_type === \"tutor\" && (\r\n              <>\r\n                <TaskMenu />\r\n              </>\r\n            )}\r\n\r\n            <Notification />\r\n            <Message /> */}\r\n\r\n            {user?.user_type === \"admin\" && (\r\n              <>\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={() => {\r\n                    dispatch(toggleActivitySidebar(true));\r\n                  }}\r\n                  className=\"icon-header\"\r\n                >\r\n                  <AssignmentRoundedIcon />\r\n                </IconButton>\r\n              </>\r\n            )}\r\n\r\n            <UserProfile user={user} variant={mobile ? \"mobile\" : \"desktop\"} />\r\n          </section>\r\n\r\n          <IconButton\r\n            color=\"inherit\"\r\n            className=\"btn-open-menu\"\r\n            onClick={handleToggleHeader}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </StyledHeader>\r\n        <PageLinks isOpenMobileHeader={isOpenMobileHeader} links={page_links} />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Header;\r\n\r\nconst StyledHeader = styled(AppBar)`\r\n  height: ${(p) => p.theme.header.height}px;\r\n  display: grid !important;\r\n  grid-auto-flow: column !important;\r\n  grid-auto-columns: ${(p) => p.theme.sidebar.maxWidth}px 1fr auto;\r\n  grid-gap: 1.5em;\r\n  padding: 0 1em;\r\n  /* box-shadow: 0 0.125rem 0.625rem rgba(0, 0, 0, 0.1),\r\n    0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1) !important;\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0.1); */\r\n\r\n  /* background: ${(p) => p.theme.header.backgroundColor} !important;\r\n  color: ${(p) => p.theme.header.color} !important; */\r\n\r\n  .brand {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    align-content: center;\r\n    align-items: center;\r\n    justify-items: start;\r\n    justify-content: start;\r\n    grid-template-areas: \"logo app\" \"logo name\";\r\n    cursor: pointer;\r\n    /* grid-gap: 0.3em; */\r\n    .brand-logo {\r\n      grid-area: logo;\r\n      height: 2em;\r\n      width: 2em;\r\n      background-color: #fff;\r\n      margin-right: 0.2em;\r\n      box-shadow: 0 5px 10px -4px rgba(0, 0, 0, 0.56),\r\n        0 2px 8px 0px rgba(0, 0, 0, 0.12), 0 2px 5px -3px rgba(0, 0, 0, 0.2);\r\n    }\r\n\r\n    .app-name {\r\n      align-self: end;\r\n      justify-self: center;\r\n      grid-area: app;\r\n      white-space: nowrap;\r\n      justify-self: start;\r\n      font-weight: 500;\r\n      width: ${(p) => p.theme.sidebar.maxWidth - 50}px;\r\n      white-space: pre-wrap;\r\n    }\r\n\r\n    .brand-name {\r\n      width: ${(p) => p.theme.sidebar.maxWidth - 50}px;\r\n      grid-area: name;\r\n      font-weight: 500;\r\n      font-size: 0.75em;\r\n      align-self: start;\r\n      white-space: pre-wrap;\r\n      text-transform: capitalize;\r\n    }\r\n  }\r\n\r\n  .nav {\r\n    justify-self: start;\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    justify-self: start;\r\n    justify-content: start;\r\n    align-items: center;\r\n    align-content: center;\r\n    grid-gap: 1em;\r\n    .nav-item {\r\n      transition: 0.5s all ease-in-out;\r\n      justify-self: center;\r\n      display: grid;\r\n      text-align: center;\r\n      align-items: center;\r\n      align-content: center;\r\n      align-self: center;\r\n      justify-items: center;\r\n      justify-content: center;\r\n\r\n      font-weight: 500;\r\n      font-size: 0.9em;\r\n      color: rgba(255, 255, 255, 0.7);\r\n\r\n      &.nav-item-active {\r\n        transition: 0.2s all ease-in-out;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n      }\r\n\r\n      /* .nav-item-label {\r\n        \r\n      } */\r\n\r\n      &:hover {\r\n        transition: 0.2s all ease-in-out;\r\n        color: ${(p) => p.theme.palette.primary.contrastText};\r\n      }\r\n    }\r\n  }\r\n\r\n  .tools {\r\n    justify-self: end;\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n  }\r\n\r\n  .btn-open-drawer,\r\n  .btn-open-menu {\r\n    display: none;\r\n  }\r\n\r\n  /* MOBILE SCREEN */\r\n  @media screen and (max-width: ${(props) =>\r\n      props.theme.breakpoints.values.md}px) {\r\n    grid-gap: 0;\r\n    grid-auto-columns: 40px 1fr 40px;\r\n    grid-template-areas: \"btn-drawer brand btn-menu\" \"menu menu menu\";\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px\r\n      ${(p) => p.theme.header.height}px;\r\n    overflow: hidden;\r\n    box-shadow: 0 0.125rem 0.625rem rgba(0, 0, 0, 0.1),\r\n      0 0.0625rem 0.125rem rgba(0, 0, 0, 0.1) !important;\r\n    align-items: center;\r\n    /* align-content: center; */\r\n\r\n    .btn-open-drawer {\r\n      grid-area: btn-drawer;\r\n      display: grid;\r\n    }\r\n\r\n    .btn-open-menu {\r\n      grid-area: btn-menu;\r\n      display: grid;\r\n    }\r\n\r\n    .brand {\r\n      grid-area: brand;\r\n      justify-self: center;\r\n      align-content: center;\r\n      align-items: center;\r\n      justify-items: start;\r\n      justify-content: start;\r\n      width: unset !important;\r\n      * {\r\n        width: unset !important;\r\n      }\r\n    }\r\n    .tools {\r\n      grid-area: menu;\r\n    }\r\n\r\n    .nav {\r\n      display: none;\r\n    }\r\n\r\n    &.mobile-menu-open {\r\n      transition: 0.2s all ease-in-out !important;\r\n      height: ${(p) => p.theme.header.height * 2}px;\r\n    }\r\n  }\r\n`;\r\n","import { Collapse } from \"@material-ui/core\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport clsx from \"clsx\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled, { useTheme } from \"styled-components\";\r\n\r\ninterface INavSidebarDropDown {\r\n  isActive: boolean;\r\n  text: string;\r\n  navLinks: Array<any>;\r\n}\r\n\r\nconst NavSidebarDropDown: FC<INavSidebarDropDown> = ({\r\n  isActive,\r\n  text,\r\n  navLinks,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <StyledNavSidebarDropdown\r\n      theme={theme}\r\n      className={clsx(\"nav-item-collapse\", {\r\n        \"dropdown-link-item-active\": isActive,\r\n      })}\r\n    >\r\n      <div className=\"header\" onClick={() => setOpen((prev) => !prev)}>\r\n        <div className=\"nav-item-label\">{text}</div>\r\n        <ArrowDropDownRoundedIcon className=\"nav-item-btn\" color=\"primary\" />\r\n      </div>\r\n      <Collapse in={open}>\r\n        <div className=\"body\">\r\n          {navLinks.map((link, index) => (\r\n            <NavLink\r\n              className=\"sub-link\"\r\n              activeClassName=\"nav-item-active\"\r\n              to={link.to}\r\n              key={index}\r\n            >\r\n              {link.label}\r\n            </NavLink>\r\n          ))}\r\n        </div>\r\n      </Collapse>\r\n    </StyledNavSidebarDropdown>\r\n  );\r\n};\r\n\r\nconst StyledNavSidebarDropdown = styled.div`\r\n  &.dropdown-link-item-active {\r\n    color: #3443e5 !important;\r\n    .nav-item-icon,\r\n    .nav-item-label {\r\n      color: #3443e5 !important;\r\n    }\r\n  }\r\n  .header {\r\n    transition: 0.2s all ease-in-out;\r\n    padding: 0.7em 0.3em;\r\n    width: 100%;\r\n    border-radius: 10px;\r\n    grid-auto-columns: 30px 1fr 50px;\r\n    justify-items: start;\r\n    grid-template-areas: \"text collapse\";\r\n    grid-auto-flow: column;\r\n    align-items: center;\r\n    align-content: center;\r\n    display: grid;\r\n    font-weight: 500;\r\n    grid-gap: 0.5em;\r\n    color: rgba(0, 0, 0, 0.7);\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      cursor: pointer;\r\n      color: #3443e5 !important;\r\n    }\r\n\r\n    .nav-item-label {\r\n      grid-area: text;\r\n      font-size: 0.87em !important;\r\n    }\r\n    .nav-item-btn {\r\n      justify-self: end;\r\n      grid-area: collapse;\r\n      transition: 0.2s all ease-in-out;\r\n      border-radius: 50%;\r\n      &:hover {\r\n        cursor: pointer;\r\n        transition: 0.2s all ease-in-out;\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .body {\r\n    border-left: 2px solid #97b7fc;\r\n    padding-left: 35px;\r\n    margin-left: 12px;\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-gap: 0.5em;\r\n    font-size: 0.87em;\r\n\r\n    .sub-link {\r\n      padding: 0.5em 0;\r\n      text-transform: capitalize;\r\n      font-weight: 500;\r\n      &:hover {\r\n        color: #3443e5 !important;\r\n      }\r\n    }\r\n    .nav-item-active {\r\n      color: #3443e5;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavSidebarDropDown;\r\n","import {\r\n  Avatar,\r\n  Drawer,\r\n  IconButton,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport MenuOpenIcon from \"@material-ui/icons/MenuOpen\";\r\nimport React, { memo, useEffect } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport logo from \"../../Assets/Images/Logo/app_logo.png\";\r\nimport NavSidebarDropDown from \"../../Component/NavLinks/NavSidebarDropDown\";\r\nimport { APP_NAME } from \"../../Helpers/AppConfig\";\r\nimport { IPageNavLinks } from \"./Layout\";\r\nimport styled from \"styled-components\";\r\ninterface IMobileSidebar {\r\n  PageNavLinks: Array<IPageNavLinks>;\r\n  isOpenMobileSidebar: boolean;\r\n  handleCloseMobileSidebar: () => void;\r\n  user: any;\r\n}\r\n\r\nconst MobileSidebar: React.FC<IMobileSidebar> = memo(\r\n  ({ PageNavLinks, isOpenMobileSidebar, handleCloseMobileSidebar, user }) => {\r\n    const theme = useTheme();\r\n    const mobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      if (mounted) {\r\n        handleCloseMobileSidebar();\r\n      }\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [handleCloseMobileSidebar, mobile]);\r\n\r\n    return (\r\n      <StyledMobileSidebar\r\n        theme={theme}\r\n        open={isOpenMobileSidebar}\r\n        PaperProps={{\r\n          className: \"sidebar-container\",\r\n        }}\r\n        onClose={handleCloseMobileSidebar}\r\n      >\r\n        <div className=\"brand\">\r\n          <Avatar src={logo} className=\"brand-logo\" alt=\"\" />\r\n          <div className=\"brand-name\">{process.env.REACT_APP_CLIENT}</div>\r\n          <div className=\"app-name\">{APP_NAME}</div>\r\n\r\n          <IconButton\r\n            className=\"btn-close-drawer\"\r\n            color=\"primary\"\r\n            onClick={handleCloseMobileSidebar}\r\n          >\r\n            <MenuOpenIcon />\r\n          </IconButton>\r\n        </div>\r\n\r\n        <nav className=\"nav\">\r\n          {PageNavLinks.map((nav, index) =>\r\n            nav.hasSubLinks ? (\r\n              <NavSidebarDropDown\r\n                isActive={history.location.pathname\r\n                  .toLowerCase()\r\n                  .includes(nav.parentKey ? nav.parentKey.toLowerCase() : \"\")}\r\n                text={nav.text}\r\n                navLinks={nav.navLinks ? nav.navLinks : []}\r\n                key={index}\r\n              />\r\n            ) : (\r\n              <NavLink\r\n                key={index}\r\n                activeClassName=\"dropdown-link-item-active\"\r\n                to={nav.to}\r\n                className=\"nav-item\"\r\n              >\r\n                <div className=\"nav-item-label\">{nav.text}</div>\r\n              </NavLink>\r\n            )\r\n          )}\r\n        </nav>\r\n      </StyledMobileSidebar>\r\n    );\r\n  }\r\n);\r\n\r\nexport default MobileSidebar;\r\n\r\nexport const StyledMobileSidebar = styled(Drawer)`\r\n  .sidebar-container {\r\n    width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    min-width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n    display: grid;\r\n    grid-auto-rows: ${(p) => p.theme.header.height}px 1fr;\r\n\r\n    .brand {\r\n      display: grid;\r\n      grid-auto-flow: column;\r\n      width: ${(p) => p.theme.sidebar.maxWidth}px;\r\n      align-content: center;\r\n      align-items: center;\r\n      justify-items: start;\r\n      justify-content: start;\r\n      padding: 0 0.5em;\r\n      background-color: ${(p) => p.theme.header.backgroundColor};\r\n      color: ${(p) => p.theme.header.color};\r\n      grid-template-areas: \"logo app icon\" \"logo name icon\";\r\n      grid-auto-columns: auto 1fr auto;\r\n      grid-gap: 0.3em;\r\n\r\n      .brand-logo {\r\n        grid-area: logo;\r\n        height: 40px;\r\n        width: 40px;\r\n        margin-right: 10px;\r\n      }\r\n      .app-name {\r\n        align-self: end;\r\n        justify-self: center;\r\n        grid-area: app;\r\n        white-space: nowrap;\r\n        justify-self: start;\r\n        font-weight: 700;\r\n        white-space: pre-wrap;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .brand-name {\r\n        grid-area: name;\r\n        font-weight: 500;\r\n        font-size: 0.78em;\r\n        align-self: start;\r\n        white-space: pre-wrap;\r\n        text-transform: capitalize;\r\n      }\r\n\r\n      .btn-close-drawer {\r\n        justify-self: end;\r\n        grid-area: icon;\r\n      }\r\n    }\r\n\r\n    .nav {\r\n      width: 100%;\r\n      display: grid;\r\n      grid-auto-flow: row;\r\n      align-items: start;\r\n      align-content: start;\r\n      padding: 1em 0.5em;\r\n      grid-gap: 0.5em;\r\n      /* text-transform: uppercase; */\r\n\r\n      .nav-item {\r\n        transition: 0.2s all ease-in-out;\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        align-items: center;\r\n        align-content: center;\r\n        grid-gap: 0.3em;\r\n        padding: 0.3em 1.5em;\r\n        width: 100%;\r\n        grid-auto-columns: 1fr;\r\n        border-radius: 10px;\r\n        justify-items: start;\r\n        font-weight: 500;\r\n        /* text-transform: capitalize; */\r\n        color: black !important;\r\n        .nav-item-label {\r\n          font-size: 0.87em !important;\r\n          /* text-transform: capitalize; */\r\n        }\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n          color: #3443e5 !important;\r\n        }\r\n\r\n        &.dropdown-link-item-active {\r\n          color: #3443e5 !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { memo, useCallback, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootStore } from \"../../Services/Store\";\r\nimport ManageTaskView from \"../../Views/SharedViews/Tasks/ManageTaskView\";\r\nimport Body from \"./Body\";\r\nimport Header from \"./Header\";\r\nimport MobileSidebar from \"./MobileSidebar\";\r\n\r\nexport interface IPageNavLinks {\r\n  hasSubLinks: boolean;\r\n  text: string;\r\n  to: string;\r\n  parentKey?: string;\r\n  navLinks?: Array<any>;\r\n}\r\n\r\nconst generateNavLinks = (user: any): Array<IPageNavLinks> => {\r\n  if (!user) {\r\n    return [];\r\n  }\r\n\r\n  let PageNavLinks: Array<IPageNavLinks> = [];\r\n\r\n  if (user.user_type === \"admin\") {\r\n    // PageNavLinks.push({\r\n    //   hasSubLinks: false,\r\n    //   text: page.pagename,\r\n    //   to: page.link,\r\n    // });\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/admin/dashboard\",\r\n        text: \"Dashboard\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/student\",\r\n        text: \"Students\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/admin/tutor\",\r\n        text: \"Tutors\",\r\n        hasSubLinks: false,\r\n      },\r\n\r\n      {\r\n        to: \"/admin/course\",\r\n        text: \"Courses\",\r\n        hasSubLinks: false,\r\n      },\r\n\r\n      {\r\n        to: \"/admin/room\",\r\n        text: \"Rooms\",\r\n        hasSubLinks: false,\r\n      },\r\n\r\n      {\r\n        to: \"/admin/co-administrator\",\r\n        text: \"Administrators\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  } else if (user?.user_type === \"tutor\") {\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/tutor/dashboard\",\r\n        text: \"Dashboard\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/tutor/class\",\r\n        text: \"Classes\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  } else if (user?.user_type === \"student\") {\r\n    PageNavLinks = [\r\n      {\r\n        to: \"/student/dashboard\",\r\n        text: \"Dashboard\",\r\n        hasSubLinks: false,\r\n      },\r\n      {\r\n        to: \"/student/class/records/ongoing-class\",\r\n        text: \"Class Records\",\r\n        hasSubLinks: false,\r\n      },\r\n    ];\r\n  }\r\n\r\n  return PageNavLinks;\r\n};\r\n\r\nconst Layout = memo(({ children }) => {\r\n  const user = useSelector((reducers: RootStore) => reducers.UserReducer.user);\r\n\r\n  const [isOpenMobileHeader, setIsOpenMobileHeader] = useState(false);\r\n\r\n  const handleToggleHeader = useCallback(() => {\r\n    setIsOpenMobileHeader((prevHeader) => !prevHeader);\r\n  }, []);\r\n\r\n  const [isOpenMobileSidebar, setIsOpenMobileSidebar] = useState(false);\r\n\r\n  const handleCloseMobileSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar(false);\r\n  }, []);\r\n\r\n  const handleToggleSidebar = useCallback(() => {\r\n    setIsOpenMobileSidebar((prevSidebar) => !prevSidebar);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileHeader={isOpenMobileHeader}\r\n        handleToggleHeader={handleToggleHeader}\r\n        handleToggleSidebar={handleToggleSidebar}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        user={user}\r\n      />\r\n      <MobileSidebar\r\n        PageNavLinks={generateNavLinks(user)}\r\n        isOpenMobileSidebar={isOpenMobileSidebar}\r\n        handleCloseMobileSidebar={handleCloseMobileSidebar}\r\n        user={user}\r\n      />\r\n      <Body isOpenMobileHeader={isOpenMobileHeader}>{children}</Body>\r\n\r\n      {/* REGISTER SHARED VIEWS */}\r\n      <ManageTaskView />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Layout;\r\n","import {\r\n  Chip,\r\n  Container,\r\n  Grid,\r\n  Paper,\r\n  TablePagination,\r\n} from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport { setTutorClassTableAction } from \"../../../Services/Actions/ClassActions\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { StatusMasterModel } from \"../../../Services/Models/StatusMasterModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface DataClassTutorViewInterface {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const DataClassTutorView: FC<DataClassTutorViewInterface> = memo(() => {\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  const table_loading = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_tutor_class_table\r\n  );\r\n  const data_table: Array<ClassModel & StatusMasterModel> = useSelector(\r\n    (store: RootStore) => store.ClassReducer.tutor_class_table?.table\r\n  );\r\n\r\n  const [\r\n    tableSearch,\r\n    tableLimit,\r\n    tablePage,\r\n    tableCount,\r\n    activeSort,\r\n    searchField,\r\n    selectedSortIndex,\r\n    handleSetTableSearch,\r\n    handleChangePage,\r\n    handleChangeRowsPerPage,\r\n    handleChagenSelectedSortIndex,\r\n    handleSetSearchField,\r\n  ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchTableData = () => {\r\n      const filters: PaginationModel = {\r\n        page: {\r\n          begin: tablePage,\r\n          limit: tableLimit,\r\n        },\r\n        sort: activeSort,\r\n        filters: tableSearch,\r\n      };\r\n\r\n      dispatch(setTutorClassTableAction(filters));\r\n    };\r\n\r\n    mounted && activeSort && fetchTableData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [activeSort, dispatch, tableLimit, tablePage, tableSearch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/tutor/class\",\r\n            title: \"Classes\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <LinearLoadingProgress show={table_loading} />\r\n\r\n      <Grid\r\n        container\r\n        component={Paper}\r\n        style={{\r\n          padding: `1em`,\r\n          minHeight: `90vh`,\r\n          alignItems: `start`,\r\n          alignContent: `start`,\r\n        }}\r\n        spacing={2}\r\n      >\r\n        <Grid\r\n          xs={12}\r\n          item\r\n          container\r\n          spacing={1}\r\n          alignItems=\"center\"\r\n          alignContent=\"center\"\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            container\r\n            spacing={2}\r\n            justify=\"flex-start\"\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <TablePagination\r\n                rowsPerPageOptions={[50, 100, 250]}\r\n                component=\"div\"\r\n                count={tableCount}\r\n                rowsPerPage={tableLimit}\r\n                page={tablePage}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            md={6}\r\n            container\r\n            spacing={3}\r\n            alignContent=\"center\"\r\n            alignItems=\"center\"\r\n            justify=\"flex-end\"\r\n          >\r\n            <Grid item>\r\n              <DataTableSort\r\n                handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                initialTableSort={initialTableSort}\r\n                selectedSortIndex={selectedSortIndex}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item>\r\n              <DataTableSearch\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  handleSetTableSearch({\r\n                    ...tableSearch,\r\n                    search: searchField,\r\n                  });\r\n                }}\r\n                handleSetSearchField={handleSetSearchField}\r\n                searchField={searchField}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid xs={12} container item spacing={1}>\r\n          {data_table?.length < 1 && (\r\n            <span className=\"empty-rows\">No records found!</span>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <div\r\n              className=\"class-container\"\r\n              style={{\r\n                display: `grid`,\r\n                gridGap: `3em`,\r\n                alignItems: `start`,\r\n                alignContent: `start`,\r\n                justifyContent: `start`,\r\n                gridTemplateColumns: `repeat(auto-fill, minmax(300px, 1fr))`,\r\n              }}\r\n            >\r\n              {data_table?.map((v, i) => (\r\n                <StyledClassContainer key={i}>\r\n                  <div className=\"image\">\r\n                    {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                    <img\r\n                      src={`data:image/jpg;base64,${v.pic}`}\r\n                      alt={`no image found`}\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"info-container\">\r\n                    <NavLink\r\n                      to={`/tutor/class/${v.class_pk}/session`}\r\n                      className=\"title\"\r\n                    >\r\n                      {v.class_desc}\r\n                      {\" - \"}\r\n                      {v.course_desc}\r\n                    </NavLink>\r\n                    <div className=\"status\">\r\n                      <div\r\n                        style={{\r\n                          display: `grid`,\r\n                          justifyContent: `start`,\r\n                          justifyItems: `start`,\r\n                          alignItems: `center`,\r\n                          gridAutoFlow: `column`,\r\n                          gridAutoColumns: `1fr auto`,\r\n                        }}\r\n                      >\r\n                        <Chip\r\n                          label={v.sts_desc}\r\n                          style={{\r\n                            backgroundColor: v.sts_bgcolor,\r\n                            color: v.sts_color,\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"time item\">\r\n                      {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      {\" - \"}\r\n                      {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                    </div>\r\n                    <div\r\n                      className=\"item\"\r\n                      style={{ textTransform: `capitalize` }}\r\n                    >\r\n                      {v.tutor_name}\r\n                    </div>\r\n                    <div className=\"item\">\r\n                      <div className=\"value\">\r\n                        {v.closed_sessions} of {v.session_count} completed\r\n                        sessions\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </StyledClassContainer>\r\n              ))}\r\n\r\n              {/* {data_table?.map((v, i) => (\r\n                <StyledClassContainer key={i}>\r\n                  <div className=\"image\">\r\n                    <img src={`data:image/jpg;base64,${v.pic}`} alt=\"\" />\r\n                  </div>\r\n\r\n                  <div className=\"info-container\">\r\n                    <div className=\"title\">\r\n                      <div className=\"main\">{v.class_desc}</div>\r\n                      <div className=\"sub\">{v.course_desc}</div>\r\n                    </div>\r\n\r\n                    <div className=\"details\">\r\n                      <div className=\"item\">\r\n                        The current status is{\" \"}\r\n                        <Chip\r\n                          label={v.sts_desc}\r\n                          size=\"small\"\r\n                          style={{\r\n                            backgroundColor: v.sts_bgcolor,\r\n                            color: v.sts_color,\r\n                          }}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"time\">\r\n                        The time interval is{\" \"}\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {\" \"}\r\n                          {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                          {\" - \"}\r\n                          {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}.\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"item\">\r\n                        <span style={{ fontWeight: 500 }}>\r\n                          {v.closed_sessions} of {v.session_count}\r\n                        </span>{\" \"}\r\n                        session are completed.\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"footer-ctnr\">\r\n                      <Button\r\n                        // color=\"primary\"\r\n                        onClick={() =>\r\n                          history.push(`/tutor/class/${v.class_pk}/session`)\r\n                        }\r\n                        // variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        View\r\n                      </Button>\r\n                      {v.sts_pk === \"fa\" && (\r\n                        <>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => handleApproveClass(v.class_pk)}\r\n                          >\r\n                            Accept\r\n                          </Button>\r\n                          <Button color=\"secondary\">Decline</Button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </StyledClassContainer>\r\n              ))} */}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n});\r\n\r\nexport default DataClassTutorView;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledDashboardTutor = styled(Container)`\r\n  .profile-container {\r\n    display: grid;\r\n    grid-template-areas: \"img greeting\" \"img bio\" \"img info\";\r\n    grid-gap: 0.3em;\r\n    grid-auto-columns: auto 1fr;\r\n    align-content: start;\r\n    align-items: start;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    border-radius: 10px;\r\n\r\n    .prof-pic {\r\n      grid-area: img;\r\n      margin-right: 1em;\r\n      display: grid;\r\n      align-items: center;\r\n      align-content: center;\r\n    }\r\n\r\n    .greeting {\r\n      grid-area: greeting;\r\n      font-size: 1.8em;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .bio {\r\n      grid-area: bio;\r\n      padding: 0.7em;\r\n      background-color: #f5f5f5;\r\n      font-size: 0.83em;\r\n      border-radius: 10px;\r\n      justify-self: start;\r\n      display: grid;\r\n      justify-content: start;\r\n    }\r\n\r\n    .info-group-container {\r\n      grid-area: info;\r\n      display: grid;\r\n      align-items: start;\r\n      align-content: start;\r\n      font-size: 1em;\r\n\r\n      .value {\r\n        font-weight: 500;\r\n        display: grid;\r\n        align-items: center;\r\n        grid-auto-flow: column;\r\n        align-content: center;\r\n        justify-content: start;\r\n        grid-gap: 0.5em;\r\n      }\r\n    }\r\n  }\r\n\r\n  .schedule-container {\r\n    /* height: 700px; */\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\ninterface IEditTutorBiography {\r\n  initial_form_values: TutorModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  bio: yup.string().required().max(800).label(\"Biography\"),\r\n});\r\n\r\nexport const EditTutorBiography: FC<IEditTutorBiography> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: TutorModel) => {\r\n        payload.tutor_pk = initial_form_values.tutor_pk;\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                TutorActions.updateLoggedInTutorBio(payload, (msg: string) => {\r\n                  dispatch(TutorActions.getLoggedInTutor());\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      },\r\n      [dispatch, handleClose, initial_form_values.tutor_pk]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Update Your Biography\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form\r\n                    id=\"form-edit-course\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                    noValidate\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          label=\"Your Biography\"\r\n                          placeholder=\"Write your biography here...\"\r\n                          name=\"bio\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={15}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-edit-course\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTutorBiography;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { TutorModel } from \"../../../Services/Models/TutorModels\";\r\ninterface IEditTutorPicture {\r\n  initial_form_values: TutorModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const EditTutorPicture: FC<IEditTutorPicture> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [pic, setPic] = useState<File | null>(null);\r\n    const handleSetPic = useCallback((logo) => {\r\n      setPic(logo);\r\n    }, []);\r\n\r\n    const handleFormSubmit = useCallback(async () => {\r\n      const base64_pic = await fileToBase64(pic);\r\n\r\n      const payload: TutorModel = {\r\n        tutor_pk: initial_form_values.tutor_pk,\r\n        picture: base64_pic,\r\n      };\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              TutorActions.updateTutorImage(payload, (msg: string) => {\r\n                dispatch(TutorActions.getLoggedInTutor());\r\n                handleClose();\r\n              })\r\n            ),\r\n        })\r\n      );\r\n    }, [dispatch, handleClose, initial_form_values.tutor_pk, pic]);\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Update Your Profile Picture\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid xs={12} container justify=\"center\" item>\r\n                  <div style={{ padding: \"1.5em 0\" }}>\r\n                    <PhotoField\r\n                      label=\"\"\r\n                      height={180}\r\n                      width={300}\r\n                      selectedFile={pic}\r\n                      name=\"pic\"\r\n                      variant=\"rounded\"\r\n                      handleChange={handleSetPic}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditTutorPicture;\r\n","import FullCalendar from \"@fullcalendar/react\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"../../../Component/Calendar/calendar.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  CircularProgress,\r\n  Grid,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { StyledDashboardTutor } from \"./styles\";\r\nimport { StyledDashboardItem } from \"../../../Styles/GlobalStyles\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport LocalLibraryRoundedIcon from \"@material-ui/icons/LocalLibraryRounded\";\r\nimport ChangePasswordDialog from \"../../SharedViews/ChangePasswordDialog\";\r\nimport EditTutorBiography from \"./EditTutorBiography\";\r\nimport EditTutorPicture from \"./EditTutorPicture\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StringEmptyToDefault } from \"../../../Hooks/UseStringFormatter\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport ClassSessionActions from \"../../../Services/Actions/ClassSessionActions\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\n\r\ninterface IDashboardTutorView {}\r\nexport const DashboardTutorView: FC<IDashboardTutorView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  const [open_change_pass, set_open_change_pass] = useState(false);\r\n\r\n  const handleOpenChangePass = useCallback(() => {\r\n    set_open_change_pass(true);\r\n  }, []);\r\n\r\n  const handleCloseChangePass = useCallback(() => {\r\n    set_open_change_pass(false);\r\n  }, []);\r\n\r\n  const [open_edit_picture, set_open_edit_picture] = useState(false);\r\n\r\n  const handleOpenEditPicture = useCallback(() => {\r\n    set_open_edit_picture(true);\r\n  }, []);\r\n\r\n  const handleCloseEditPicture = useCallback(() => {\r\n    set_open_edit_picture(false);\r\n  }, []);\r\n\r\n  const [open_edit_bio, set_open_edit_bio] = useState(false);\r\n\r\n  const handleOpenEditBio = useCallback(() => {\r\n    set_open_edit_bio(true);\r\n  }, []);\r\n\r\n  const handleCloseEditBio = useCallback(() => {\r\n    set_open_edit_bio(false);\r\n  }, []);\r\n\r\n  const loggedin_tutor = useSelector(\r\n    (store: RootStore) => store.TutorReducer.loggedin_tutor\r\n  );\r\n  const fetch_loggedin_tutor = useSelector(\r\n    (store: RootStore) => store.TutorReducer.fetch_loggedin_tutor\r\n  );\r\n\r\n  const total_tutor_class_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.total_tutor_class_stats\r\n  );\r\n  const fetch_total_tutor_class_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_total_tutor_class_stats\r\n  );\r\n\r\n  const logged_in_tutor_session_cal = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.logged_in_tutor_session_cal\r\n  );\r\n\r\n  const fetch_logged_in_tutor_session_cal = useSelector(\r\n    (store: RootStore) =>\r\n      store.ClassSessionReducer.fetch_logged_in_tutor_session_cal\r\n  );\r\n\r\n  console.log(`logged_in_tutor_session_cal`, logged_in_tutor_session_cal);\r\n\r\n  useEffect(() => {\r\n    dispatch(TutorActions.getLoggedInTutor());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassActions.getTotalTutorClassStats());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassSessionActions.getLoggedInTutorSessionCalendar());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/tutor/dashboard\",\r\n            title: \"Dashboard\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <StyledDashboardTutor theme={theme}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12}>\r\n            {fetch_loggedin_tutor && !loggedin_tutor ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <Grid\r\n                container\r\n                style={{\r\n                  backgroundColor: `#fff`,\r\n                  borderRadius: 10,\r\n                  padding: `1em`,\r\n                }}\r\n              >\r\n                <Grid item xs={12} md={10}>\r\n                  <div className=\"profile-container\">\r\n                    <div className=\"prof-pic\">\r\n                      <CustomAvatar\r\n                        heightSpacing={15}\r\n                        widthSpacing={15}\r\n                        src={loggedin_tutor?.picture}\r\n                        errorMessage={`${loggedin_tutor?.firstname?.charAt(\r\n                          0\r\n                        )} ${loggedin_tutor?.lastname?.charAt(0)}`}\r\n                      />\r\n                    </div>\r\n                    <div className=\"greeting\">\r\n                      Greetings, {loggedin_tutor?.position}{\" \"}\r\n                      {loggedin_tutor?.firstname} {loggedin_tutor?.lastname}{\" \"}\r\n                      {loggedin_tutor?.suffix}\r\n                    </div>\r\n                    <div className=\"bio\">\r\n                      {StringEmptyToDefault(\r\n                        loggedin_tutor?.bio,\r\n                        \"Nothing to show\"\r\n                      )}\r\n                    </div>\r\n                    <div className=\"info-group-container\">\r\n                      <div className=\"info-group\">\r\n                        <div className=\"label\">Ratings</div>\r\n                        <div className=\"value\">\r\n                          {loggedin_tutor?.average_rating} stars\r\n                          <Rating\r\n                            name=\"rating\"\r\n                            value={loggedin_tutor?.average_rating}\r\n                            precision={0.1}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"info-group\">\r\n                        <div className=\"label\">Favorited By</div>\r\n                        <div className=\"value\">\r\n                          {loggedin_tutor?.fav_count}{\" \"}\r\n                          {loggedin_tutor?.fav_count > 1\r\n                            ? \"Students\"\r\n                            : \"Student\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <div\r\n                    style={{\r\n                      display: `grid`,\r\n                      gridGap: `.5em`,\r\n                      alignContent: `center`,\r\n                      alignItems: `center`,\r\n                      justifyContent: `center`,\r\n                      justifyItems: `center`,\r\n                      borderLeft: desktop ? `.01em solid rgba(0,0,0,.1)` : 0,\r\n                      borderTop: !desktop ? `.01em solid rgba(0,0,0,.1)` : 0,\r\n                      height: `100%`,\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        handleOpenEditBio();\r\n                      }}\r\n                    >\r\n                      Edit Biography\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        handleOpenEditPicture();\r\n                      }}\r\n                    >\r\n                      Change Picture\r\n                    </Button>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        handleOpenChangePass();\r\n                      }}\r\n                    >\r\n                      Change Password\r\n                    </Button>\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n\r\n          {fetch_total_tutor_class_stats && !total_tutor_class_stats ? (\r\n            <Grid item xs={12}>\r\n              <CircularProgress />\r\n            </Grid>\r\n          ) : (\r\n            <>\r\n              {total_tutor_class_stats?.map((s, i) => (\r\n                <Grid item md={4} key={i}>\r\n                  <StyledDashboardItem>\r\n                    <div className=\"label\" style={{ color: `#333` }}>\r\n                      {s.label}\r\n                    </div>\r\n                    <div className=\"stat-value\">\r\n                      {fetch_total_tutor_class_stats ? (\r\n                        <CircularProgress size={20} />\r\n                      ) : (\r\n                        s.value\r\n                      )}\r\n                    </div>\r\n                    <Avatar\r\n                      className=\"avatar\"\r\n                      style={{\r\n                        backgroundColor: \"#ffebee\",\r\n                        color: \"#b71c1c\",\r\n                      }}\r\n                    >\r\n                      <LocalLibraryRoundedIcon />\r\n                    </Avatar>\r\n                  </StyledDashboardItem>\r\n                </Grid>\r\n              ))}\r\n            </>\r\n          )}\r\n          <Grid item xs={12}>\r\n            <div className=\"schedule-container\">\r\n              <div className=\"container-title\">Schedule</div>\r\n              <LinearLoadingProgress show={fetch_logged_in_tutor_session_cal} />\r\n\r\n              {logged_in_tutor_session_cal && (\r\n                <FullCalendar\r\n                  schedulerLicenseKey={\r\n                    \"CC-Attribution-NonCommercial-NoDerivatives\"\r\n                  }\r\n                  initialView={\"timeGridFourDay\"}\r\n                  plugins={[resourceTimeGridPlugin, interactionPlugin]}\r\n                  views={{\r\n                    timeGridFourDay: {\r\n                      type: \"timeGrid\",\r\n                      duration: { days: 5 },\r\n                      buttonText: \"5 day\",\r\n                    },\r\n                  }}\r\n                  events={logged_in_tutor_session_cal}\r\n                  eventMinHeight={70}\r\n                  expandRows={true}\r\n                  stickyHeaderDates={true}\r\n                  slotMinTime=\"07:00\"\r\n                  slotMaxTime=\"21:00\"\r\n                  contentHeight={700}\r\n                  height={700}\r\n                  allDaySlot={false}\r\n                  eventContent={(e) => {\r\n                    console.log(`e`, e);\r\n\r\n                    const data = e.event;\r\n\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          boxShadow: `0 1px 2px rgba(0,0,0,.1)`,\r\n                          backgroundColor: data.backgroundColor,\r\n                          color: data.textColor,\r\n                          padding: `.5em`,\r\n                          fontSize: `.9em`,\r\n                          display: `grid`,\r\n                          gridAutoFlow: `column`,\r\n                          justifyContent: `start`,\r\n                          alignItems: `center`,\r\n                          alignContent: `center`,\r\n                          gridGap: `.87em`,\r\n                          borderRadius: 5,\r\n                          border: `.01em solid rgba(0,0,0,.1)`,\r\n                          letterSpacing: `.3pt`,\r\n                          wordSpacing: `.3pt`,\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: 900,\r\n                            textTransform: `uppercase`,\r\n                            color: data.backgroundColor,\r\n                            backgroundColor: data.textColor,\r\n                            padding: `5px`,\r\n                            borderRadius: `50%`,\r\n                            height: 20,\r\n                            width: 20,\r\n                            textAlign: `center`,\r\n                            display: `grid`,\r\n                            alignItems: `center`,\r\n                            alignContent: `center`,\r\n                            fontSize: `.8em`,\r\n                          }}\r\n                        >\r\n                          {data.extendedProps.sts_pk}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            fontWeight: 600,\r\n                            fontSize: `1em`,\r\n                          }}\r\n                        >\r\n                          {data.title}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {open_change_pass && (\r\n          <ChangePasswordDialog\r\n            handleClose={handleCloseChangePass}\r\n            open={open_change_pass}\r\n          />\r\n        )}\r\n\r\n        {loggedin_tutor && open_edit_picture && (\r\n          <EditTutorPicture\r\n            initial_form_values={loggedin_tutor}\r\n            handleClose={handleCloseEditPicture}\r\n            open={open_edit_picture}\r\n          />\r\n        )}\r\n\r\n        {loggedin_tutor && open_edit_bio && (\r\n          <EditTutorBiography\r\n            initial_form_values={loggedin_tutor}\r\n            handleClose={handleCloseEditBio}\r\n            open={open_edit_bio}\r\n          />\r\n        )}\r\n      </StyledDashboardTutor>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DashboardTutorView;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../../Component/Formik/FormikInputField\";\r\nimport { setSelectedClassAction } from \"../../../../Services/Actions/ClassActions\";\r\nimport ClassSessionActions, {\r\n  setSingleClassSession,\r\n} from \"../../../../Services/Actions/ClassSessionActions\";\r\nimport { ClassSessionModel } from \"../../../../Services/Models/ClassSessionModel\";\r\nimport { setGeneralPrompt } from \"../../../../Services/Actions/PageActions\";\r\n\r\ninterface IEditSessionStatusDialog {\r\n  new_sts: \"s\" | \"e\" | \"u\";\r\n  initial_values: ClassSessionModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  remarks: yup.string().required().max(255).label(\"Remarks\"),\r\n});\r\n\r\nexport const EditSessionStatusDialog: FC<IEditSessionStatusDialog> = memo(\r\n  ({ new_sts, initial_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (form_values: ClassSessionModel) => {\r\n        if (new_sts === \"s\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassSessionActions.startClassSession(\r\n                    form_values,\r\n                    (msg: string) => {\r\n                      dispatch(setSingleClassSession(form_values.session_pk));\r\n                      handleClose();\r\n                    }\r\n                  )\r\n                ),\r\n            })\r\n          );\r\n        } else if (new_sts === \"e\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassSessionActions.endClassSession(\r\n                    form_values,\r\n                    (msg: string) => {\r\n                      dispatch(setSingleClassSession(form_values.session_pk));\r\n                      handleClose();\r\n                    }\r\n                  )\r\n                ),\r\n            })\r\n          );\r\n        } else if (new_sts === \"u\") {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  ClassSessionActions.unattendedClassSession(\r\n                    form_values,\r\n                    (msg: string) => {\r\n                      dispatch(setSingleClassSession(form_values.session_pk));\r\n                      handleClose();\r\n                    }\r\n                  )\r\n                ),\r\n            })\r\n          );\r\n        }\r\n      },\r\n      [dispatch, handleClose, new_sts]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Update Class Session Remarks\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_values}\r\n                validationSchema={formSchema}\r\n                validateOnChange={false}\r\n                validateOnBlur={false}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {() => (\r\n                  <Form\r\n                    id=\"form-edit-class-session-status\"\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em 3em`,\r\n                    }}\r\n                  >\r\n                    <Grid container justify=\"center\" spacing={3}>\r\n                      <Grid xs={12} item>\r\n                        <FormikInputField\r\n                          name=\"remarks\"\r\n                          label=\"Class Remarks\"\r\n                          placeholder=\"Write the class remarks here\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          multiline={true}\r\n                          rows={15}\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                form=\"form-edit-class-session-status\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditSessionStatusDialog;\r\n","import { Button, Chip, Grid } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport CustomAvatar from \"../../../../Component/CustomAvatar\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport UseInterval from \"../../../../Hooks/UseInterval\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport EditSessionStatusDialog from \"./EditSessionStatusDialog\";\r\ninterface ISessionDtls {}\r\n\r\nexport const SessionDtls: FC<ISessionDtls> = memo(() => {\r\n  const single_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n  );\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n\r\n  const [open_dialog_end, set_open_dialog_end] = useState(false);\r\n  const [ellapsed_time, set_ellapsed_time] = useState<any>(\"\");\r\n\r\n  const handleSetDialogEnd = useCallback((open: boolean) => {\r\n    set_open_dialog_end(open);\r\n  }, []);\r\n\r\n  const [new_status, set_new_status] = useState<null | \"s\" | \"u\" | \"e\">(null);\r\n  const [open_edit_class_status, set_open_edit_class_status] = useState(false);\r\n\r\n  const handleOpenEditClassStatus = useCallback(() => {\r\n    set_open_edit_class_status(true);\r\n  }, []);\r\n\r\n  const handleCloseEditClassStatus = useCallback(() => {\r\n    set_open_edit_class_status(false);\r\n  }, []);\r\n\r\n  const handleChangeEllapseTime = useCallback(() => {\r\n    if (single_class_session?.began && !single_class_session.ended) {\r\n      const ellapse = moment.duration(\r\n        moment(new Date()).diff(moment(single_class_session?.began))\r\n      );\r\n      set_ellapsed_time(\r\n        ellapse.hours() +\r\n          \" hr, \" +\r\n          ellapse.minutes() +\r\n          \" min, \" +\r\n          ellapse.seconds() +\r\n          \" sec\"\r\n      );\r\n    }\r\n  }, [single_class_session]);\r\n\r\n  UseInterval(handleChangeEllapseTime, 1000);\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <div\r\n        style={{\r\n          backgroundColor: `#fff`,\r\n          padding: `1em`,\r\n          borderRadius: `10px`,\r\n          height: `100%`,\r\n          width: `100%`,\r\n        }}\r\n      >\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={3}>\r\n            <div className=\"main-details-container\">\r\n              <CustomAvatar\r\n                src={single_class_session?.class_info?.course_info?.picture}\r\n                errorMessage=\"No Photo\"\r\n                variant=\"square\"\r\n                heightSpacing={30}\r\n                widthSpacing={25}\r\n              />\r\n              <div className=\"actions\">\r\n                {/* <div\r\n                  className=\"rating-col\"\r\n                  style={{\r\n                    display: `grid`,\r\n                    gridAutoFlow: `column`,\r\n                    justifyContent: `start`,\r\n                    gridGap: `.5em`,\r\n                    alignItems: `center`,\r\n                    fontWeight: 600,\r\n                    fontSize: `.87em`,\r\n                  }}\r\n                >\r\n                  4 stars\r\n                  <Rating value={4} precision={0.1} readOnly />\r\n                </div> */}\r\n                {user?.user_type === \"tutor\" &&\r\n                  single_class_session?.sts_pk === \"p\" && (\r\n                    <>\r\n                      <Grid item>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            handleOpenEditClassStatus();\r\n                            set_new_status(\"s\");\r\n                          }}\r\n                        >\r\n                          Start Now\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            handleOpenEditClassStatus();\r\n                            set_new_status(\"u\");\r\n                          }}\r\n                        >\r\n                          Unattend/Absent\r\n                        </Button>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n\r\n                {user?.user_type === \"tutor\" &&\r\n                  single_class_session?.sts_pk === \"s\" && (\r\n                    <>\r\n                      <Grid item>\r\n                        <Button\r\n                          size=\"small\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            handleOpenEditClassStatus();\r\n                            set_new_status(\"e\");\r\n                          }}\r\n                        >\r\n                          End\r\n                        </Button>\r\n                      </Grid>\r\n                    </>\r\n                  )}\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <div className=\"sub-details-container\">\r\n              <div\r\n                style={{\r\n                  fontSize: `1.5em`,\r\n                  fontWeight: 600,\r\n                }}\r\n              >\r\n                {single_class_session?.class_desc}\r\n              </div>\r\n              <div\r\n                style={{\r\n                  fontSize: `1em`,\r\n                  fontWeight: 600,\r\n                  opacity: 0.7,\r\n                }}\r\n              >\r\n                {single_class_session?.course_desc}\r\n              </div>\r\n              <div className=\"sub-title-cntr\">\r\n                <div className=\"info-group\">\r\n                  <div className=\"label\">Status</div>\r\n                  <div className=\"value\">\r\n                    <Chip\r\n                      label={single_class_session?.status_info?.sts_desc}\r\n                      style={{\r\n                        color: single_class_session?.status_info?.sts_color,\r\n                        backgroundColor:\r\n                          single_class_session?.status_info?.sts_bgcolor,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"info-group\">\r\n                  <div className=\"label\">Started at</div>\r\n                  <div className=\"value\">\r\n                    <Chip\r\n                      label={parseDateTimeOrDefault(\r\n                        single_class_session?.began,\r\n                        \"TBD\"\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"info-group\">\r\n                  <div className=\"label\">Ended at </div>\r\n                  <div className=\"value\">\r\n                    <Chip\r\n                      label={parseDateTimeOrDefault(\r\n                        single_class_session?.ended,\r\n                        \"TBD\"\r\n                      )}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                {single_class_session?.sts_pk === \"s\" && (\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Ellapsed Time</div>\r\n                    <div className=\"value\">\r\n                      <Chip label={ellapsed_time} />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"remarks\">\r\n                {single_class_session?.class_info?.remarks}\r\n              </div>\r\n              <div className=\"remarks\">{single_class_session?.remarks}</div>\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      {new_status &&\r\n        open_edit_class_status &&\r\n        single_class_session?.class_info && (\r\n          <EditSessionStatusDialog\r\n            new_sts={new_status}\r\n            initial_values={single_class_session}\r\n            open={open_edit_class_status}\r\n            handleClose={handleCloseEditClassStatus}\r\n          />\r\n        )}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default SessionDtls;\r\n","import Badge from \"@material-ui/core/Badge\";\r\nimport { createStyles, Theme, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst StyledBadge = withStyles((theme: Theme) =>\r\n  createStyles({\r\n    badge: {\r\n      backgroundColor: \"#44b700\",\r\n      color: \"#44b700\",\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n      \"&::after\": {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        borderRadius: \"50%\",\r\n        animation: \"$ripple 1.2s infinite ease-in-out\",\r\n        border: \"1px solid currentColor\",\r\n        content: '\"\"',\r\n      },\r\n    },\r\n    \"@keyframes ripple\": {\r\n      \"0%\": {\r\n        transform: \"scale(.8)\",\r\n        opacity: 1,\r\n      },\r\n      \"100%\": {\r\n        transform: \"scale(2.4)\",\r\n        opacity: 0,\r\n      },\r\n    },\r\n  })\r\n)(Badge);\r\n\r\nexport default StyledBadge;\r\n","import { Grid, IconButton, TextField } from \"@material-ui/core\";\r\nimport SendRoundedIcon from \"@material-ui/icons/SendRounded\";\r\nimport React, {\r\n  FC,\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useRef,\r\n  useState,\r\n} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { io } from \"socket.io-client\";\r\nimport CustomAvatar from \"../../../../Component/CustomAvatar\";\r\nimport { API_BASE_URL, getAccessToken } from \"../../../../Helpers/AppConfig\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport ClassSessionApi from \"../../../../Services/Api/ClassSessionApi\";\r\nimport { ClassSesMsgModel } from \"../../../../Services/Models/ClassSessionModel\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport StyledBadge from \"../../../../Styles/MaterialStyles/StyledBadge\";\r\n\r\ninterface ISessionTabs {}\r\n\r\nexport const SessionTabs: FC<ISessionTabs> = memo(() => {\r\n  const socketRef = useRef<any>();\r\n  const messagesEndRef = useRef(null);\r\n  const ref = useRef<HTMLFormElement | null>();\r\n\r\n  const params = useParams<any>();\r\n\r\n  const [active_tab, set_active_tab] = useState<\"s\" | \"c\">(\"s\");\r\n  const [active_students, set_active_students] = useState<any>([]);\r\n  const [message_body, set_message_body] = useState(\"\");\r\n  const [message_table, set_message_table] = useState<Array<ClassSesMsgModel>>(\r\n    []\r\n  );\r\n  const [reload_messages, set_reload_messages] = useState(0);\r\n\r\n  const tbl_class_students = useSelector(\r\n    (store: RootStore) => store.ClassStudentReducer.tbl_class_students\r\n  );\r\n\r\n  const handleSetMessageBody = useCallback((e) => {\r\n    set_message_body(e.target.value);\r\n  }, []);\r\n\r\n  const handleSubmitMessage = useCallback(async () => {\r\n    const payload: ClassSesMsgModel = {\r\n      msg_body: message_body,\r\n      session_pk: params.session_pk,\r\n    };\r\n\r\n    const response = await ClassSessionApi.saveMessage(payload);\r\n\r\n    if (response.success) {\r\n      socketRef.current.emit(\"sendMessage\", params.session_pk);\r\n      set_message_body(\"\");\r\n    }\r\n  }, [message_body, params.session_pk]);\r\n\r\n  useEffect(() => {\r\n    socketRef.current = io(`${API_BASE_URL}socket/chat`, {\r\n      query: {\r\n        token: getAccessToken(),\r\n      },\r\n    });\r\n\r\n    socketRef.current.on(\"connected\", (data) => {});\r\n\r\n    socketRef.current.emit(\"joinSession\", params.session_pk);\r\n\r\n    socketRef.current.on(\"updateRoom\", (users) => {\r\n      set_active_students(users);\r\n    });\r\n\r\n    socketRef.current.on(\"allMessage\", () => {\r\n      set_reload_messages((prev) => prev + 1);\r\n    });\r\n\r\n    socketRef.current.on(\"failedMessage\", (error: string) => {\r\n      alert(error);\r\n    });\r\n\r\n    return () => {\r\n      socketRef?.current?.disconnect();\r\n    };\r\n  }, [params.session_pk]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const reloadMessages = async () => {\r\n      const response = await ClassSessionApi.getAllMessage(params.session_pk);\r\n\r\n      if (response.success) {\r\n        set_message_table(response.data);\r\n      }\r\n    };\r\n\r\n    mounted && reloadMessages();\r\n    return () => (mounted = false);\r\n  }, [params.session_pk, reload_messages]);\r\n\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView();\r\n  }, [message_table, active_tab]);\r\n\r\n  return (\r\n    <div className=\"info-ctnr\">\r\n      <div className=\"ctnr-title\">Meeting Details</div>\r\n      <div className=\"tabs\">\r\n        <div\r\n          className={`tab-item ${active_tab === \"s\" && \"active\"}`}\r\n          onClick={() => set_active_tab(\"s\")}\r\n        >\r\n          Students\r\n        </div>\r\n        <div\r\n          className={`tab-item ${active_tab === \"c\" && \"active\"}`}\r\n          onClick={() => set_active_tab(\"c\")}\r\n        >\r\n          Chat\r\n        </div>\r\n      </div>\r\n\r\n      {active_tab === \"s\" && (\r\n        <div className=\"student-tab\">\r\n          {tbl_class_students?.map((student, i) => (\r\n            <div key={i} className=\"student-item\">\r\n              {active_students.findIndex(\r\n                (stud) => stud.user_pk === student.student_details.user_id\r\n              ) === -1 ? (\r\n                <CustomAvatar\r\n                  src={student.student_details.picture}\r\n                  errorMessage={student.student_details.lastname.charAt(0)}\r\n                />\r\n              ) : (\r\n                <StyledBadge\r\n                  overlap=\"circle\"\r\n                  anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"right\",\r\n                  }}\r\n                  variant=\"dot\"\r\n                >\r\n                  <CustomAvatar\r\n                    src={student.student_details.picture}\r\n                    errorMessage={student.student_details.lastname.charAt(0)}\r\n                  />\r\n                </StyledBadge>\r\n              )}\r\n              {student.student_details.lastname}\r\n              {\", \"} {student.student_details.firstname}{\" \"}\r\n              {student.student_details.middlename}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {active_tab === \"c\" && (\r\n        <div className=\"chat-tab\">\r\n          <div className=\"sent-msg-ctnr\">\r\n            {message_table.map((msg, i) => (\r\n              <div key={i} ref={messagesEndRef} className=\"sent-msg-item\">\r\n                <CustomAvatar\r\n                  className=\"img\"\r\n                  src={msg.picture}\r\n                  errorMessage={msg.fullname?.charAt(0)}\r\n                />\r\n                <div className=\"name\">{msg.fullname}</div>\r\n                <div className=\"time\">\r\n                  {parseDateTimeOrDefault(msg.sent_at, \"-\")}\r\n                </div>\r\n                <div className=\"message\">{msg.msg_body}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <form\r\n            id=\"hook-form\"\r\n            ref={ref}\r\n            onSubmit={(e) => {\r\n              e.preventDefault();\r\n              handleSubmitMessage();\r\n            }}\r\n            className=\"write-msg-ctnr\"\r\n          >\r\n            <TextField\r\n              value={message_body}\r\n              onChange={handleSetMessageBody}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              placeholder=\"Write your message here...\"\r\n              multiline\r\n              rowsMax={2}\r\n              rows={2}\r\n              className=\"write-btn\"\r\n              onKeyDown={(event: React.KeyboardEvent<HTMLDivElement>): void => {\r\n                if (event.key === \"Enter\" && !event.shiftKey) {\r\n                  if (ref.current) {\r\n                    handleSubmitMessage();\r\n                  }\r\n                }\r\n              }}\r\n              InputProps={{\r\n                style: {\r\n                  backgroundColor: `#f1f3f8`,\r\n                },\r\n              }}\r\n              // rowsMax={1}\r\n            />\r\n            <IconButton form=\"hook-form\" type=\"submit\" color=\"primary\">\r\n              <SendRoundedIcon />\r\n            </IconButton>\r\n          </form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default SessionTabs;\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\nimport DeleteRoundedIcon from \"@material-ui/icons/DeleteRounded\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\nimport FormDialog from \"../../../../Component/FormDialog/FormDialog\";\r\nimport DateFieldHookForm from \"../../../../Component/HookForm/DateFieldHookForm\";\r\nimport TextFieldHookForm from \"../../../../Component/HookForm/TextFieldHookForm\";\r\nimport ClassSessionTaskActions from \"../../../../Services/Actions/ClassSessionTaskActions\";\r\nimport {\r\n  setGeneralPrompt,\r\n  setSnackbar,\r\n} from \"../../../../Services/Actions/PageActions\";\r\nimport {\r\n  SessionTaskModel,\r\n  SessionTaskQuesModel,\r\n} from \"../../../../Services/Models/ClassSessionTaskModels\";\r\ninterface IDialogAddTask {\r\n  open: boolean;\r\n  setOpen: (open: boolean) => void;\r\n}\r\n\r\nconst validationSchema = Yup.object({\r\n  task_title: Yup.string().required().label(\"Task Title\"),\r\n  task_desc: Yup.string().required().label(\"Task Description\"),\r\n  due_date: Yup.string().nullable().required().label(\"Due Date\"),\r\n});\r\n\r\nconst validate_add_task = Yup.object({\r\n  question: Yup.string().required().label(\"Question\"),\r\n  cor_answer: Yup.string().required().label(\"Correct Answert\"),\r\n  pnt: Yup.number().min(0).nullable().required().label(\"Point\"),\r\n});\r\n\r\nexport const DialogAddTask: FC<IDialogAddTask> = memo(({ open, setOpen }) => {\r\n  const params = useParams<any>();\r\n  const dispatch = useDispatch();\r\n  const form_create_task = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  });\r\n\r\n  const [open_add_ques, set_open_add_ques] = useState(false);\r\n\r\n  const [questions, set_questions] = useState<Array<SessionTaskQuesModel>>([]);\r\n\r\n  const handleSetOpenAddQuest = useCallback((open: boolean) => {\r\n    set_open_add_ques(open);\r\n  }, []);\r\n\r\n  const form_add_task = useForm({\r\n    resolver: yupResolver(validate_add_task),\r\n  });\r\n\r\n  const handleSubmitFormTask = useCallback(\r\n    (data) => {\r\n      const payload: SessionTaskModel = {\r\n        class_pk: params.class_pk,\r\n        ...data,\r\n        questions: questions,\r\n      };\r\n\r\n      dispatch(\r\n        setGeneralPrompt({\r\n          open: true,\r\n          continue_callback: () =>\r\n            dispatch(\r\n              ClassSessionTaskActions.addClassMaterialAction(\r\n                payload,\r\n                (msg: string) => {\r\n                  setOpen(false);\r\n                  form_create_task.reset();\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setAllClassTask(params.class_pk)\r\n                  );\r\n                }\r\n              )\r\n            ),\r\n        })\r\n      );\r\n    },\r\n    [dispatch, form_create_task, params.class_pk, questions, setOpen]\r\n  );\r\n\r\n  const handleSubmitFormAddTask = useCallback(\r\n    (form_data) => {\r\n      set_questions((q) => [...q, form_data]);\r\n\r\n      dispatch(setSnackbar(\"The question has been added\", \"success\"));\r\n\r\n      set_open_add_ques(false);\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <FormDialog\r\n      open={open}\r\n      title=\"Create a New Task\"\r\n      handleClose={() => setOpen(false)}\r\n      scroll=\"paper\"\r\n      body={\r\n        <div style={{ padding: `1em 0`, display: `grid`, gridGap: `2em` }}>\r\n          <FormProvider {...form_create_task}>\r\n            <form\r\n              id=\"remarks-form\"\r\n              onSubmit={form_create_task.handleSubmit(handleSubmitFormTask)}\r\n              noValidate\r\n            >\r\n              <Grid spacing={3} container>\r\n                <Grid item xs={6}>\r\n                  <TextFieldHookForm\r\n                    name=\"task_title\"\r\n                    defaultValue=\"\"\r\n                    label=\"Task Title\"\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    required\r\n                    InputLabelProps={{ shrink: true }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={6}>\r\n                  <DateFieldHookForm\r\n                    name=\"due_date\"\r\n                    type=\"datetime\"\r\n                    fullWidth={true}\r\n                    InputLabelProps={{ shrink: true }}\r\n                    inputVariant={\"outlined\"}\r\n                    disablePast\r\n                    defaultValue={null}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                  <TextFieldHookForm\r\n                    name=\"task_desc\"\r\n                    defaultValue=\"\"\r\n                    label=\"Task Description\"\r\n                    multiline={true}\r\n                    rows={3}\r\n                    fullWidth\r\n                    variant=\"outlined\"\r\n                    required\r\n                    InputLabelProps={{ shrink: true }}\r\n                    placeholder=\"Write the class description and/or instructions here...\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </FormProvider>\r\n\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} container justify=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    handleSetOpenAddQuest(true);\r\n                  }}\r\n                >\r\n                  Add Question\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TableContainer>\r\n                <Table size=\"small\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell width=\"5%\">#</TableCell>\r\n                      <TableCell width=\"85%\">Question Details</TableCell>\r\n                      <TableCell width=\"10%\">Actions</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {questions.map((q, i) => (\r\n                      <TableRow key={i}>\r\n                        <TableCell>{i + 1}</TableCell>\r\n                        <TableCell>\r\n                          <div\r\n                            style={{\r\n                              display: `grid`,\r\n                              gridGap: `.3em`,\r\n                              fontWeight: 500,\r\n                              fontSize: `.87em`,\r\n                            }}\r\n                          >\r\n                            <div>\r\n                              Q: <span className=\"ques\">{q.question}</span>\r\n                            </div>\r\n                            <div>\r\n                              A: <span className=\"ques\">{q.cor_answer}</span>\r\n                            </div>\r\n                            <div>\r\n                              P: <span className=\"ques\">{q.pnt}</span>\r\n                            </div>\r\n                          </div>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            color=\"secondary\"\r\n                            onClick={() => {\r\n                              set_questions((q) => {\r\n                                q.splice(i, 1);\r\n                                return [...q];\r\n                              });\r\n                            }}\r\n                          >\r\n                            <DeleteRoundedIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Grid>\r\n            <FormDialog\r\n              title={\"Add Question to the Task\"}\r\n              minWidth={450}\r\n              open={open_add_ques}\r\n              body={\r\n                <div style={{ padding: `1em` }}>\r\n                  <FormProvider {...form_add_task}>\r\n                    <form\r\n                      id=\"add-question-form\"\r\n                      onSubmit={form_add_task.handleSubmit(\r\n                        handleSubmitFormAddTask\r\n                      )}\r\n                      noValidate\r\n                    >\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                          <TextFieldHookForm\r\n                            name=\"question\"\r\n                            label=\"Question\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                            placeholder=\"Write the question here...\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                          <TextFieldHookForm\r\n                            name=\"cor_answer\"\r\n                            label=\"Answer\"\r\n                            multiline={true}\r\n                            rows={3}\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                            placeholder=\"Write the answer of the question here...\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                          <TextFieldHookForm\r\n                            name=\"pnt\"\r\n                            defaultValue={1}\r\n                            label=\"Point\"\r\n                            type=\"number\"\r\n                            fullWidth\r\n                            variant=\"outlined\"\r\n                            required\r\n                            InputLabelProps={{ shrink: true }}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </FormProvider>\r\n                </div>\r\n              }\r\n              handleClose={() => {\r\n                handleSetOpenAddQuest(false);\r\n              }}\r\n              actions={\r\n                <>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    form=\"add-question-form\"\r\n                    type=\"submit\"\r\n                  >\r\n                    Add Question\r\n                  </Button>\r\n                </>\r\n              }\r\n            />\r\n          </Grid>\r\n        </div>\r\n      }\r\n      actions={\r\n        <>\r\n          <Button\r\n            variant=\"contained\"\r\n            form=\"remarks-form\"\r\n            type=\"submit\"\r\n            onClick={() => {\r\n              // formRef.current?.submit();\r\n            }}\r\n            color=\"primary\"\r\n          >\r\n            Save Task\r\n          </Button>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n});\r\n\r\nexport default DialogAddTask;\r\n","import { Button, Chip, Grid } from \"@material-ui/core\";\r\nimport React, { memo, FC, useCallback, useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport LinearLoadingProgress from \"../../../../Component/LinearLoadingProgress\";\r\nimport { parseDateTimeOrDefault } from \"../../../../Hooks/UseDateParser\";\r\nimport ClassSessionTaskActions from \"../../../../Services/Actions/ClassSessionTaskActions\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport DialogAddTask from \"./DialogAddTask\";\r\n\r\ninterface ISessionTasks {}\r\n\r\nexport const SessionTasks: FC<ISessionTasks> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams<any>();\r\n  const [open_add_task, set_open_add_task] = useState(false);\r\n\r\n  const user_type = useSelector(\r\n    (store: RootStore) => store.UserReducer.user.user_type\r\n  );\r\n\r\n  const all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.all_class_task\r\n  );\r\n  const fetch_all_class_task = useSelector(\r\n    (store: RootStore) => store.ClassSessionTaskReducer.fetch_all_class_task\r\n  );\r\n\r\n  const handleSetOpenAddTask = useCallback((open: boolean) => {\r\n    set_open_add_task(open);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const fetchAllTasks = () => {\r\n      dispatch(ClassSessionTaskActions.setAllClassTask(params.class_pk));\r\n    };\r\n    mounted && fetchAllTasks();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch, params.class_pk]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"task-ctnr\">\r\n        <div className=\"ctnr-title\">Tasks</div>\r\n        {user_type === \"tutor\" && (\r\n          <div className=\"actions\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleSetOpenAddTask(true)}\r\n            >\r\n              Add Task\r\n            </Button>\r\n          </div>\r\n        )}\r\n\r\n        <LinearLoadingProgress show={fetch_all_class_task} />\r\n\r\n        <div className=\"task-data-ctnr\">\r\n          {all_class_task?.map((t, i) => (\r\n            <div className=\"task-item\">\r\n              <div\r\n                className=\"title link\"\r\n                onClick={() => {\r\n                  dispatch(\r\n                    ClassSessionTaskActions.setSingleClassTask(t.class_task_pk)\r\n                  );\r\n                }}\r\n              >\r\n                {t.task_title}\r\n              </div>\r\n              <div className=\"group\">\r\n                <div className=\"label\">Due Date:</div>\r\n                <div className=\"value\">\r\n                  {parseDateTimeOrDefault(t.due_date, \"-\")}\r\n                </div>\r\n              </div>\r\n              <Chip\r\n                size=\"small\"\r\n                label={t.status_dtls.sts_desc}\r\n                style={{\r\n                  color: t.status_dtls.sts_color,\r\n                  backgroundColor: t.status_dtls.sts_bgcolor,\r\n                  justifySelf: `start`,\r\n                }}\r\n              />\r\n              <div className=\"desc\">{t.task_desc}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <DialogAddTask open={open_add_task} setOpen={handleSetOpenAddTask} />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default SessionTasks;\r\n","import { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport React, { memo, FC } from \"react\";\r\nimport { Jutsu } from \"react-jutsu\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\n\r\ninterface SessionVideoConfProps {}\r\n\r\nexport const SessionVideoConf: FC<SessionVideoConfProps> = memo(() => {\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n  const single_class_session = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n  );\r\n\r\n  // console.log(`hash_pk`, single_class_session);\r\n\r\n  if (\r\n    single_class_session?.hash_pk &&\r\n    (single_class_session?.sts_pk === \"p\" ||\r\n      single_class_session?.sts_pk === \"u\")\r\n  ) {\r\n    return (\r\n      <div\r\n        style={{\r\n          fontWeight: 500,\r\n          fontSize: `1em`,\r\n          display: `grid`,\r\n          padding: `2em`,\r\n          justifyContent: `center`,\r\n          alignContent: `center`,\r\n          color: `#4caf50`,\r\n        }}\r\n      >\r\n        You need to start the class session to view the video conferencing!\r\n      </div>\r\n    );\r\n  } else if (\r\n    single_class_session?.hash_pk &&\r\n    single_class_session?.sts_pk === \"e\"\r\n  ) {\r\n    return (\r\n      <div\r\n        style={{\r\n          fontWeight: 600,\r\n          fontSize: `1.5em`,\r\n          padding: `2em`,\r\n          display: `grid`,\r\n          justifyContent: `center`,\r\n          alignContent: `center`,\r\n          color: `red`,\r\n        }}\r\n      >\r\n        The session has already beed ended!\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        {user?.user_type === \"tutor\" && (\r\n          <Jutsu\r\n            roomName={single_class_session?.hash_pk}\r\n            displayName={user?.fullname}\r\n            // password={single_class_session?.hash_pk}\r\n            containerStyles={{\r\n              height: `100%`,\r\n              width: `100%`,\r\n              border: `none`,\r\n            }}\r\n            loadingComponent={<CircularProgress />}\r\n            errorComponent={<p>Oops, something went wrong</p>}\r\n            configOverwrite={{\r\n              enableWelcomePage: false,\r\n              prejoinPageEnabled: false,\r\n              disableLogCollector: true,\r\n              defaultLogLevel: \"error\",\r\n            }}\r\n            onJitsi={(e) => {\r\n              console.log(`jitsi details -> `, e);\r\n            }}\r\n            loggerConfigOverwrite={{\r\n              disableLogCollector: true,\r\n            }}\r\n            interfaceConfigOverwrite={{\r\n              disableLogCollector: true,\r\n              defaultLogLevel: \"error\",\r\n              prejoinPageEnabled: false,\r\n              DISPLAY_WELCOME_FOOTER: false,\r\n              GENERATE_ROOMNAMES_ON_WELCOME_PAGE: false,\r\n              HIDE_INVITE_MORE_HEADER: true,\r\n              HIDE_DEEP_LINKING_LOGO: true,\r\n              SHOW_JITSI_WATERMARK: false,\r\n              SHOW_WATERMARK_FOR_GUESTS: false,\r\n              // JITSI_WATERMARK_LINK: \"\",\r\n              TOOLBAR_BUTTONS: [\r\n                \"microphone\",\r\n                \"camera\",\r\n                //   \"closedcaptions\",\r\n                \"desktop\",\r\n                \"fullscreen\",\r\n                \"fodeviceselection\",\r\n                \"hangup\",\r\n                \"profile\",\r\n                //   \"info\",\r\n                //   \"recording\",\r\n                //   \"livestreaming\",\r\n                \"etherpad\",\r\n                //   \"sharedvideo\",\r\n                \"settings\",\r\n                \"raisehand\",\r\n                //   \"videoquality\",\r\n                //   \"filmstrip\",\r\n                //   \"invite\",\r\n                //   \"feedback\",\r\n                \"stats\",\r\n                \"shortcuts\",\r\n                \"tileview\",\r\n                \"videobackgroundblur\",\r\n                //   \"download\",\r\n                //   \"help\",\r\n                \"mute-everyone\",\r\n                //   \"e2ee\",\r\n              ],\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {user?.user_type === \"student\" && (\r\n          <iframe\r\n            title=\"iframe-video\"\r\n            allow=\"camera; microphone; fullscreen; display-capture\"\r\n            src={`https://meet.jit.si/${single_class_session?.hash_pk}#jitsi_meet_external_api_id=0&config.enableWelcomePage=false&config.prejoinPageEnabled=false&interfaceConfig.prejoinPageEnabled=false&interfaceConfig.DISPLAY_WELCOME_FOOTER=false&interfaceConfig.GENERATE_ROOMNAMES_ON_WELCOME_PAGE=false&interfaceConfig.HIDE_INVITE_MORE_HEADER=true&interfaceConfig.HIDE_DEEP_LINKING_LOGO=true&interfaceConfig.SHOW_JITSI_WATERMARK=false&interfaceConfig.SHOW_WATERMARK_FOR_GUESTS=false&interfaceConfig.TOOLBAR_BUTTONS=%5B%22microphone%22%2C%22camera%22%2C%22desktop%22%2C%22fullscreen%22%2C%22fodeviceselection%22%2C%22hangup%22%2C%22profile%22%2C%22etherpad%22%2C%22settings%22%2C%22raisehand%22%2C%22stats%22%2C%22shortcuts%22%2C%22tileview%22%2C%22videobackgroundblur%22%2C%22mute-everyone%22%5D&appData.localStorageContent=null&userInfo.displayName=\"${user?.fullname}\"`}\r\n            // src={\r\n            //   \"https://meet.jit.si/c20ad4d76fe97759aa27a0c99bff6710#jitsi_meet_external_api_id=0&config.enableWelcomePage=false&config.prejoinPageEnabled=false&config.disableLogCollector=true&config.defaultLogLevel=%22error%22&interfaceConfig.disableLogCollector=true&interfaceConfig.defaultLogLevel=%22error%22&interfaceConfig.prejoinPageEnabled=false&interfaceConfig.DISPLAY_WELCOME_FOOTER=false&interfaceConfig.GENERATE_ROOMNAMES_ON_WELCOME_PAGE=false&interfaceConfig.HIDE_INVITE_MORE_HEADER=true&interfaceConfig.HIDE_DEEP_LINKING_LOGO=true&interfaceConfig.SHOW_JITSI_WATERMARK=false&interfaceConfig.SHOW_WATERMARK_FOR_GUESTS=false&interfaceConfig.TOOLBAR_BUTTONS=%5B%22microphone%22%2C%22camera%22%2C%22desktop%22%2C%22fullscreen%22%2C%22fodeviceselection%22%2C%22hangup%22%2C%22profile%22%2C%22etherpad%22%2C%22settings%22%2C%22raisehand%22%2C%22stats%22%2C%22shortcuts%22%2C%22tileview%22%2C%22videobackgroundblur%22%2C%22mute-everyone%22%5D&appData.localStorageContent=null\"\r\n            // }\r\n            style={{ height: `100%`, width: `100%` }}\r\n          ></iframe>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n});\r\n\r\nexport default SessionVideoConf;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledSelectedSession = styled.div`\r\n  /* color: #333; */\r\n\r\n  .main-details-container {\r\n    display: grid;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    grid-gap: 1em;\r\n\r\n    .actions {\r\n      display: grid;\r\n      grid-gap: 0.3em;\r\n      padding: 0 1.5em;\r\n      justify-content: center;\r\n      justify-items: center;\r\n    }\r\n  }\r\n\r\n  .sub-details-container {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    justify-content: start;\r\n    justify-items: start;\r\n    align-items: start;\r\n    align-content: start;\r\n    width: 100%;\r\n    .sub-title-cntr {\r\n      display: grid;\r\n      align-items: start;\r\n      align-content: start;\r\n      .sub-title {\r\n        font-size: 0.85em;\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        grid-gap: 0.5em;\r\n        align-items: center;\r\n        justify-content: start;\r\n        justify-items: start;\r\n      }\r\n    }\r\n\r\n    .remarks {\r\n      margin: 0.3em 0;\r\n      padding: 0.5em;\r\n      background-color: #f5f5f5;\r\n      border-radius: 10px;\r\n      font-size: 0.8em;\r\n    }\r\n  }\r\n\r\n  .task-ctnr {\r\n    background-color: #fff;\r\n    padding: 0.5em;\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    align-content: start;\r\n    height: 100%;\r\n    border-radius: 10px;\r\n    align-items: start;\r\n    .ctnr-title {\r\n      justify-content: start;\r\n      align-content: start;\r\n    }\r\n\r\n    .actions {\r\n      display: grid;\r\n      justify-content: end;\r\n      align-items: center;\r\n      padding: 0.5em 0;\r\n    }\r\n\r\n    .task-data-ctnr {\r\n      display: grid;\r\n      grid-gap: 1em;\r\n      align-self: start;\r\n      align-items: start;\r\n      align-content: start;\r\n\r\n      .task-item {\r\n        display: grid;\r\n        /* grid-gap: 0.3em; */\r\n        padding: 0.5em;\r\n        border: 0.01em solid rgba(0, 0, 0, 0.1);\r\n        border-radius: 7px;\r\n        .title {\r\n          font-weight: 600;\r\n          padding: 0.2em 0;\r\n        }\r\n        .group {\r\n          font-size: 0.8em;\r\n          font-weight: 400;\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          grid-gap: 0.3em;\r\n        }\r\n        .desc {\r\n          font-size: 0.85em;\r\n          padding: 1em 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .vid-ctnr {\r\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n    border: 1px solid rgba(0, 0, 0, 0.1);\r\n    border-radius: 10px;\r\n    height: 600px;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n  }\r\n  .info-ctnr {\r\n    background-color: #fff;\r\n    padding: 0.5em;\r\n    display: grid;\r\n    grid-gap: 1em;\r\n    border-radius: 10px;\r\n    align-content: start;\r\n    height: 100%;\r\n    min-height: 100%;\r\n    width: 100%;\r\n    grid-auto-rows: auto auto 1fr;\r\n\r\n    .tabs {\r\n      width: 100%;\r\n      .tab-item {\r\n        padding: 0.5em;\r\n        font-weight: 500;\r\n        text-transform: capitalize;\r\n        font-size: 0.87em;\r\n\r\n        &:hover {\r\n          cursor: pointer;\r\n          background-color: rgba(0, 0, 0, 0.05);\r\n          border-radius: 5px;\r\n        }\r\n\r\n        &.active {\r\n          transition: 0.3s all ease-in-out !important;\r\n          color: blue !important;\r\n          border-bottom: 1px solid blue !important;\r\n        }\r\n      }\r\n    }\r\n\r\n    .student-tab {\r\n      height: 100%;\r\n      overflow-y: auto;\r\n      .student-item {\r\n        display: grid;\r\n        grid-auto-flow: column;\r\n        align-items: center;\r\n        justify-content: start;\r\n        grid-gap: 0.5em;\r\n        padding: 0.3em 0;\r\n        border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n        .img {\r\n          font-size: 0.87em;\r\n          font-weight: 700;\r\n        }\r\n        .name {\r\n          font-weight: 500;\r\n          font-size: 0.9em;\r\n        }\r\n      }\r\n    }\r\n\r\n    .chat-tab {\r\n      display: grid;\r\n      align-items: start;\r\n      align-content: start;\r\n      grid-gap: 0.3em;\r\n      height: 100%;\r\n      max-height: 100%;\r\n      /* grid-auto-rows: calc(100%-100px) 100px; */\r\n\r\n      .sent-msg-ctnr {\r\n        overflow-y: auto;\r\n        display: grid;\r\n        align-items: start;\r\n        align-content: start;\r\n\r\n        max-height: calc(100%-100px) !important;\r\n        height: calc(100%-100px) !important;\r\n        min-height: calc(100%-100px) !important;\r\n        max-height: 700px;\r\n        .sent-msg-item {\r\n          display: grid;\r\n          padding: 0.7em;\r\n          grid-template-areas: \"img name time\" \"img msg msg\";\r\n          grid-auto-columns: auto 1fr;\r\n          grid-auto-rows: auto 1fr;\r\n          align-items: center;\r\n          align-content: start;\r\n          justify-content: start;\r\n          justify-items: start;\r\n          border-bottom: 0.01em solid rgba(0, 0, 0, 0.1);\r\n\r\n          .img {\r\n            margin-right: 0.5em;\r\n            align-self: end;\r\n          }\r\n          .time {\r\n            font-size: 0.67em;\r\n            justify-self: end;\r\n            align-self: center;\r\n            padding: 0 0.3em;\r\n          }\r\n          .name {\r\n            grid-area: name;\r\n            font-size: 0.75em;\r\n            font-weight: 600;\r\n            padding: 0 0.3em;\r\n            align-self: center;\r\n          }\r\n          .message {\r\n            grid-area: msg;\r\n            border-radius: 10px;\r\n            padding: 0.5em;\r\n            align-self: start;\r\n            font-weight: 500;\r\n            font-size: 0.9em;\r\n            background-color: #e4e6eb;\r\n          }\r\n        }\r\n      }\r\n\r\n      .write-msg-ctnr {\r\n        height: 100px;\r\n        padding: 0.3em 0;\r\n        display: grid;\r\n        align-self: start;\r\n        align-items: center;\r\n        align-content: center;\r\n        grid-auto-columns: 1fr auto;\r\n        grid-auto-flow: column;\r\n        grid-gap: 4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import {\r\n  Backdrop,\r\n  CircularProgress,\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { setSingleClassSession } from \"../../../../Services/Actions/ClassSessionActions\";\r\nimport ClassStudentActions from \"../../../../Services/Actions/ClassStudentActions\";\r\nimport { setPageLinks } from \"../../../../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../../../../Services/Store\";\r\nimport SessionDtls from \"./SessionDtls\";\r\nimport SessionTabs from \"./SessionTabs\";\r\nimport SessionTasks from \"./SessionTasks\";\r\nimport SessionConf from \"./SessionVideoConf\";\r\nimport { StyledSelectedSession } from \"./styles\";\r\n\r\ninterface ManageClassSelectedSessionTutorInterface {}\r\n\r\nexport const ManageClassSelectedSessionTutorView: FC<ManageClassSelectedSessionTutorInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const params = useParams<any>();\r\n    const theme = useTheme();\r\n\r\n    const fetch_single_class_session = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.fetch_single_class_session\r\n    );\r\n\r\n    const single_class_session = useSelector(\r\n      (store: RootStore) => store.ClassSessionReducer.single_class_session\r\n    );\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const initializingState = () => {\r\n        dispatch(\r\n          setPageLinks([\r\n            {\r\n              link: \"/tutor/class\",\r\n              title: \"Classes\",\r\n            },\r\n            {\r\n              link: `/tutor/class/${params.id}`,\r\n              title: \"Class Details\",\r\n            },\r\n            {\r\n              link: \"/tutor/class/11/session\",\r\n              title: \"Session\",\r\n            },\r\n            {\r\n              link: window.location.pathname,\r\n              title: \"Manage Session\",\r\n            },\r\n          ])\r\n        );\r\n      };\r\n\r\n      mounted && initializingState();\r\n      return () => (mounted = false);\r\n    }, [dispatch, params.id]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetchClassStudents = () => {\r\n        dispatch(\r\n          ClassStudentActions.setTblClassStudentsAction(params.class_pk)\r\n        );\r\n      };\r\n\r\n      mounted && fetchClassStudents();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, params.class_pk]);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetchSingleClassSession = () => {\r\n        dispatch(setSingleClassSession(params.session_pk));\r\n      };\r\n\r\n      mounted && fetchSingleClassSession();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [dispatch, params.session_pk]);\r\n\r\n    if (fetch_single_class_session) {\r\n      return (\r\n        <Backdrop\r\n          style={{\r\n            zIndex: theme.zIndex.modal + 100,\r\n            color: \"#fff\",\r\n            display: \"grid\",\r\n            gridAutoFlow: \"column\",\r\n            gridGap: \"1em\",\r\n          }}\r\n          open={true}\r\n        >\r\n          <CircularProgress color=\"inherit\" />\r\n          <Typography variant=\"subtitle1\">\r\n            Preparing the data, thank you for your patience!\r\n          </Typography>\r\n        </Backdrop>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Container maxWidth=\"xl\">\r\n        {single_class_session ? (\r\n          <StyledSelectedSession>\r\n            <Grid container spacing={4}>\r\n              <Grid item sm={12} md={9}>\r\n                <Grid container spacing={4}>\r\n                  <SessionDtls />\r\n                  <Grid item xs={12} md={3}>\r\n                    <SessionTasks />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n                    <div className=\"vid-ctnr\">\r\n                      <SessionConf />\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item sm={12} md={3}>\r\n                <SessionTabs />\r\n              </Grid>\r\n            </Grid>\r\n          </StyledSelectedSession>\r\n        ) : (\r\n          <CircularProgress />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n);\r\n\r\nexport default ManageClassSelectedSessionTutorView;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DataClassTutorView from \"../Views/TutorViews/ClassTutorViews/DataClassTutorView\";\r\nimport DashboardTutorView from \"../Views/TutorViews/DashboardTutorView\";\r\nimport ManageClassSelectedSessionTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassSession\";\r\nimport ManageClassAdminView from \"../Views/SharedViews/Class/ManageClassView\";\r\n\r\nconst TutorRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/tutor/dashboard\" exact>\r\n        <DashboardTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class\" exact>\r\n        <DataClassTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class/:class_pk/session/:session_pk\" strict exact>\r\n        <ManageClassSelectedSessionTutorView />\r\n      </Route>\r\n\r\n      <Route path=\"/tutor/class/:class_pk\" strict>\r\n        <ManageClassAdminView />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default TutorRoutes;\r\n","import {\r\n  Avatar,\r\n  Button,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Slide,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport React, { memo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { setPageSuccessPromptAction } from \"../Services/Actions/PageActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\n\r\nconst Transition: any = React.forwardRef(function Transition(\r\n  props: any,\r\n  ref: any\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const PageSuccessPrompt = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const page_success_prompt = useSelector(\r\n    (store: RootStore) => store.PageReducer.page_success_prompt\r\n  );\r\n\r\n  return (\r\n    <StyledSuccessDialog\r\n      open={page_success_prompt?.show ? page_success_prompt?.show : false}\r\n      scroll=\"body\"\r\n      disableBackdropClick={true}\r\n      disableEscapeKeyDown={true}\r\n      TransitionComponent={Transition}\r\n      PaperProps={{\r\n        style: {\r\n          margin: 0,\r\n          padding: 0,\r\n          borderRadius: 10,\r\n          width: 400,\r\n          overflowY: \"visible\",\r\n        },\r\n      }}\r\n    >\r\n      <DialogTitle>\r\n        <div\r\n          style={{\r\n            display: \"grid\",\r\n            justifyItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: \"-50px\",\r\n          }}\r\n        >\r\n          <Avatar\r\n            style={{\r\n              height: \"3.5em\",\r\n              width: \"3.5em\",\r\n              backgroundColor: \"#8bc34a\",\r\n            }}\r\n          >\r\n            <CheckRoundedIcon fontSize=\"large\" />\r\n          </Avatar>\r\n        </div>\r\n      </DialogTitle>\r\n\r\n      <DialogContent className=\"dialog-content\">\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Successful!\r\n        </Typography>\r\n        <div\r\n          style={{\r\n            fontSize: `1rem`,\r\n            fontWeight: 900,\r\n            color: `#2196f3`,\r\n          }}\r\n        >\r\n          {page_success_prompt?.message}\r\n        </div>\r\n      </DialogContent>\r\n      <div className=\"dialog-actions\">\r\n        <small>What do you want to do next?</small>\r\n\r\n        {page_success_prompt?.action_buttons?.map((b, i) => (\r\n          <Button\r\n            key={i}\r\n            color={b.color}\r\n            disableElevation={false}\r\n            onClick={() => {\r\n              if (typeof b.handleClick === \"function\") {\r\n                dispatch(\r\n                  setPageSuccessPromptAction({\r\n                    show: false,\r\n                  })\r\n                );\r\n                b.handleClick();\r\n              }\r\n            }}\r\n          >\r\n            <span\r\n              style={{\r\n                fontWeight: 700,\r\n                fontSize: `.9em`,\r\n              }}\r\n            >\r\n              {b.text}\r\n            </span>\r\n          </Button>\r\n        ))}\r\n      </div>\r\n    </StyledSuccessDialog>\r\n  );\r\n});\r\n\r\nexport default PageSuccessPrompt;\r\n\r\nconst StyledSuccessDialog = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-top: -15px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n  .dialog-actions {\r\n    margin: 1em;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    width: 100%;\r\n    justify-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledRateTutorDialog = styled.div`\r\n  .tutor-info-container {\r\n    display: grid;\r\n    /* justify-content: center; */\r\n    justify-items: center;\r\n    grid-gap: 0.3em;\r\n\r\n    .name {\r\n      font-size: 1.3em;\r\n      font-weight: 500;\r\n    }\r\n    .position {\r\n      font-size: 1em;\r\n      opacity: 0.7;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .bio {\r\n      background-color: #f5f5f5;\r\n      border-radius: 10px;\r\n      padding: 1em;\r\n      font-size: 0.78em;\r\n    }\r\n\r\n    .info-group-container {\r\n      justify-self: start;\r\n      padding: 1em 2em;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import { Button, CircularProgress, Switch } from \"@material-ui/core\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport React, { FC, memo, useCallback, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport SharedActions from \"../../../Services/Actions/SharedActions\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { getSingleTutorApi } from \"../../../Services/Api/TutorApi\";\r\nimport { TutorFavModel } from \"../../../Services/Models/TutorFavModel\";\r\nimport { TutorRatingsModel } from \"../../../Services/Models/TutorRatingsModel\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledRateTutorDialog } from \"./styles\";\r\n\r\ninterface IRateTutorDialog {}\r\n\r\nexport const RateTutorDialog: FC<IRateTutorDialog> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const single_tutor_to_student = useSelector(\r\n    (store: RootStore) => store.TutorReducer.single_tutor_to_student\r\n  );\r\n\r\n  const fetch_single_tutor_to_student = useSelector(\r\n    (store: RootStore) => store.TutorReducer.fetch_single_tutor_to_student\r\n  );\r\n\r\n  const handleCloseDialog = useCallback(() => {\r\n    dispatch(TutorActions.getSingTutorToStudent(null));\r\n  }, [dispatch]);\r\n\r\n  //   console.log(`selected_tutor_rate`, selected_tutor_rate);\r\n\r\n  //   const [reload_tutor_info, set_reload_tutor_info] = useState(0);\r\n\r\n  //   useEffect(() => {\r\n  //     let mounted = true;\r\n\r\n  //     const fetch_tutor = async () => {\r\n  //       const response = await getSingleTutorApi(selected_tutor_rate?.tutor_pk);\r\n\r\n  //       if (response.success) {\r\n  //         dispatch(SharedActions.selected_tutor_rate(response.data));\r\n  //       }\r\n  //     };\r\n\r\n  //     mounted && reload_tutor_info > 0 && fetch_tutor();\r\n\r\n  //     return () => {\r\n  //       mounted = false;\r\n  //     };\r\n  //   }, [reload_tutor_info, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <FormDialog\r\n        open={!!single_tutor_to_student}\r\n        title=\"Tutor's Information\"\r\n        handleClose={handleCloseDialog}\r\n        minWidth={500}\r\n        maxWidth=\"xs\"\r\n        body={\r\n          <StyledRateTutorDialog>\r\n            {fetch_single_tutor_to_student && !single_tutor_to_student ? (\r\n              <div\r\n                style={{\r\n                  display: `grid`,\r\n                  justifyContent: `center`,\r\n                  justifyItems: `center`,\r\n                  padding: `5em`,\r\n                }}\r\n              >\r\n                <CircularProgress size={30} />\r\n              </div>\r\n            ) : (\r\n              <div className=\"tutor-info-container\">\r\n                <CustomAvatar\r\n                  src={single_tutor_to_student?.picture}\r\n                  heightSpacing={20}\r\n                  widthSpacing={20}\r\n                  errorMessage={single_tutor_to_student?.firstname?.charAt(0)}\r\n                />\r\n\r\n                <div className=\"name\">\r\n                  {single_tutor_to_student?.firstname}{\" \"}\r\n                  {single_tutor_to_student?.middlename}{\" \"}\r\n                  {single_tutor_to_student?.lastname}{\" \"}\r\n                  {single_tutor_to_student?.suffix}\r\n                </div>\r\n                <div className=\"position\">\r\n                  {single_tutor_to_student?.position}\r\n                </div>\r\n\r\n                <div className=\"bio\">{single_tutor_to_student?.bio}</div>\r\n\r\n                <div className=\"info-group-container\">\r\n                  <div className=\"info-group bordered\">\r\n                    <div className=\"label\">Gender</div>\r\n                    <div className=\"value\">\r\n                      {single_tutor_to_student?.gender === \"f\"\r\n                        ? \"Female\"\r\n                        : \"Male\"}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"info-group bordered\">\r\n                    <div className=\"label\">Rating</div>\r\n                    <div className=\"value\">\r\n                      <Rating\r\n                        value={single_tutor_to_student?.rating}\r\n                        onChange={(event, newValue) => {\r\n                          const payload: TutorRatingsModel = {\r\n                            rating: newValue,\r\n                            tutor_pk: parseInt(\r\n                              single_tutor_to_student.tutor_pk\r\n                            ),\r\n                          };\r\n\r\n                          dispatch(\r\n                            TutorActions.rateTutor(payload, () => {\r\n                              dispatch(\r\n                                TutorActions.getSingTutorToStudent(\r\n                                  parseInt(single_tutor_to_student.tutor_pk)\r\n                                )\r\n                              );\r\n                            })\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"info-group bordered\">\r\n                    <div className=\"label\">Favorited</div>\r\n                    <div className=\"value\">\r\n                      <Switch\r\n                        color=\"primary\"\r\n                        checked={single_tutor_to_student?.favorited === \"y\"}\r\n                        onChange={() => {\r\n                          const payload: TutorFavModel = {\r\n                            tutor_pk: parseInt(\r\n                              single_tutor_to_student.tutor_pk\r\n                            ),\r\n                          };\r\n                          dispatch(\r\n                            TutorActions.favoriteTutor(payload, () => {\r\n                              dispatch(\r\n                                TutorActions.getSingTutorToStudent(\r\n                                  parseInt(single_tutor_to_student.tutor_pk)\r\n                                )\r\n                              );\r\n                            })\r\n                          );\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </StyledRateTutorDialog>\r\n        }\r\n        actions={\r\n          <>\r\n            <Button color=\"primary\" variant=\"contained\">\r\n              Save Changes\r\n            </Button>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n});\r\n\r\nexport default RateTutorDialog;\r\n","import { Chip, Grid, TablePagination } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport ClassActions, {\r\n  setStudentEnrolledClassTable,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface IEndedClassTableStudentView {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const EndedClassTableStudentView: FC<IEndedClassTableStudentView> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetch_student_ended_class_table\r\n    );\r\n    const data_table: Array<ClassModel> = useSelector(\r\n      (store: RootStore) => store.ClassReducer.student_ended_class_table?.table\r\n    );\r\n\r\n    const [refetchUnenrolledClasses, setRefetchUnenrolledClasses] = useState(0);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(ClassActions.getStudentEndedClassTable(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      refetchUnenrolledClasses,\r\n    ]);\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={3}>\r\n            <LinearLoadingProgress show={table_loading} />\r\n            {data_table?.length < 1 && (\r\n              <span className=\"empty-rows\">No records found!</span>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                className=\"class-container\"\r\n                style={{\r\n                  display: `grid`,\r\n                  gridGap: `2em`,\r\n                  alignItems: `start`,\r\n                  alignContent: `start`,\r\n                  // gridTemplateColumns: `repeat(auto-fit, minmax(min(270px, 100%), 1fr))`,\r\n                  gridTemplateColumns: `repeat(auto-fill, minmax(270px, 1fr))`,\r\n                }}\r\n              >\r\n                {data_table?.map((v, i) => (\r\n                  <StyledClassContainer key={i}>\r\n                    <div className=\"image\">\r\n                      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                      <img\r\n                        src={`data:image/jpg;base64,${v.course_info.picture}`}\r\n                        alt={`no image found`}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"info-container\">\r\n                      <NavLink\r\n                        to={`/student/class/${v.class_pk}/session`}\r\n                        className=\"title\"\r\n                      >\r\n                        {v.class_desc}\r\n                        {\" - \"}\r\n                        {v.course_desc}\r\n                      </NavLink>\r\n                      <div className=\"status\">\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            justifyContent: `start`,\r\n                            justifyItems: `start`,\r\n                            alignItems: `center`,\r\n                            gridAutoFlow: `column`,\r\n                            gridAutoColumns: `1fr auto`,\r\n                          }}\r\n                        >\r\n                          <Chip\r\n                            label={v.status.sts_desc}\r\n                            style={{\r\n                              backgroundColor: v.status.sts_bgcolor,\r\n                              color: v.status.sts_color,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"time item\">\r\n                        {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                        {\" - \"}\r\n                        {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"item\"\r\n                        style={{ textTransform: `capitalize` }}\r\n                      >\r\n                        {v.tutor_name}\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"value\">\r\n                          {v.closed_sessions} of {v.session_count} completed\r\n                          sessions\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </StyledClassContainer>\r\n                ))}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EndedClassTableStudentView;\r\n","import { Chip, Grid, TablePagination } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface IOngoingClassTableStudentView {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const OngoingClassTableStudentView: FC<IOngoingClassTableStudentView> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) => store.ClassReducer.fetch_student_ongoing_class_table\r\n    );\r\n    const data_table: Array<ClassModel> = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.student_ongoing_class_table?.table\r\n    );\r\n\r\n    const [refetchUnenrolledClasses, setRefetchUnenrolledClasses] = useState(0);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(ClassActions.getStudentOngoingClassTable(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      refetchUnenrolledClasses,\r\n    ]);\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n          justify=\"flex-start\"\r\n        >\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={3}>\r\n            <LinearLoadingProgress show={table_loading} />\r\n            {data_table?.length < 1 && (\r\n              <span className=\"empty-rows\">No records found!</span>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                className=\"class-container\"\r\n                style={{\r\n                  display: `grid`,\r\n                  gridGap: `2em`,\r\n                  alignItems: `start`,\r\n                  alignContent: `start`,\r\n                  justifyContent: `start`,\r\n                  justifyItems: `start`,\r\n                  gridTemplateColumns: `repeat(auto-fill, minmax(270px, 1fr))`,\r\n                  //   gridTemplateColumns: `1fr fit-content(20%)`,\r\n                }}\r\n              >\r\n                {data_table?.map((v, i) => (\r\n                  <StyledClassContainer key={i}>\r\n                    <div className=\"image\">\r\n                      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                      <img\r\n                        src={`data:image/jpg;base64,${v.course_info.picture}`}\r\n                        alt={`no image found`}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"info-container\">\r\n                      <NavLink\r\n                        to={`/student/class/${v.class_pk}/session`}\r\n                        className=\"title\"\r\n                      >\r\n                        {v.class_desc}\r\n                        {\" - \"}\r\n                        {v.course_desc}\r\n                      </NavLink>\r\n                      <div className=\"status\">\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            justifyContent: `start`,\r\n                            justifyItems: `start`,\r\n                            alignItems: `center`,\r\n                            gridAutoFlow: `column`,\r\n                            gridAutoColumns: `1fr auto`,\r\n                          }}\r\n                        >\r\n                          <Chip\r\n                            label={v.status.sts_desc}\r\n                            style={{\r\n                              backgroundColor: v.status.sts_bgcolor,\r\n                              color: v.status.sts_color,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"time item\">\r\n                        {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                        {\" - \"}\r\n                        {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"item\"\r\n                        style={{ textTransform: `capitalize` }}\r\n                      >\r\n                        {v.tutor_name}\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"value\">\r\n                          {v.closed_sessions} of {v.session_count} completed\r\n                          sessions\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </StyledClassContainer>\r\n                ))}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default OngoingClassTableStudentView;\r\n","import { Chip, Grid, TablePagination } from \"@material-ui/core\";\r\nimport moment from \"moment\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport DataTableSearch from \"../../../Component/DataTableSearch\";\r\nimport DataTableSort from \"../../../Component/DataTableSort\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport useFilter from \"../../../Hooks/useFilter\";\r\nimport ClassActions, {\r\n  setStudentEnrolledClassTable,\r\n} from \"../../../Services/Actions/ClassActions\";\r\nimport ITableInitialSort from \"../../../Services/Interface/ITableInitialSort\";\r\nimport { ClassModel } from \"../../../Services/Models/ClassModel\";\r\nimport { PaginationModel } from \"../../../Services/Models/PaginationModels\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StyledClassContainer } from \"../../../Styles/GlobalStyles\";\r\n\r\ninterface IAvailableClassTableStudentView {}\r\n\r\nconst initialSearch = {\r\n  search: \"\",\r\n};\r\n\r\nconst initialTableSort: Array<ITableInitialSort> = [\r\n  {\r\n    label: \"Newest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Oldest first\",\r\n    value: {\r\n      column: \"encoded_at\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"A-Z\",\r\n    value: {\r\n      column: \"class_desc\",\r\n      direction: \"asc\",\r\n    },\r\n  },\r\n  {\r\n    label: \"Z-A\",\r\n    value: {\r\n      column: \"course_desc\",\r\n      direction: \"desc\",\r\n    },\r\n  },\r\n];\r\n\r\nexport const AvailableClassTableStudentView: FC<IAvailableClassTableStudentView> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const table_loading = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.fetch_student_available_class_table\r\n    );\r\n    const data_table: Array<ClassModel> = useSelector(\r\n      (store: RootStore) =>\r\n        store.ClassReducer.student_available_class_table?.table\r\n    );\r\n\r\n    // const enrolled_courses_table: Array<ClassModel> = useSelector(\r\n    //   (store: RootStore) => store.ClassReducer.student_enrolled_class_table\r\n    // );\r\n    // const fetch_enrolled_courses_table = useSelector(\r\n    //   (store: RootStore) =>\r\n    //     store.ClassReducer.fetch_student_enrolled_class_table\r\n    // );\r\n\r\n    const [refetchUnenrolledClasses, setRefetchUnenrolledClasses] = useState(0);\r\n\r\n    const [\r\n      tableSearch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableCount,\r\n      activeSort,\r\n      searchField,\r\n      selectedSortIndex,\r\n      handleSetTableSearch,\r\n      handleChangePage,\r\n      handleChangeRowsPerPage,\r\n      handleChagenSelectedSortIndex,\r\n      handleSetSearchField,\r\n    ] = useFilter(initialSearch, initialTableSort, 50);\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n      const fetchTableData = () => {\r\n        const filters: PaginationModel = {\r\n          page: {\r\n            begin: tablePage,\r\n            limit: tableLimit,\r\n          },\r\n          sort: activeSort,\r\n          filters: tableSearch,\r\n        };\r\n\r\n        dispatch(ClassActions.getStudentAvailableClassTable(filters));\r\n      };\r\n\r\n      mounted && activeSort && fetchTableData();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, [\r\n      activeSort,\r\n      dispatch,\r\n      tableLimit,\r\n      tablePage,\r\n      tableSearch,\r\n      refetchUnenrolledClasses,\r\n    ]);\r\n\r\n    return (\r\n      <>\r\n        <Grid\r\n          container\r\n          style={{\r\n            backgroundColor: `#fff`,\r\n            borderRadius: 10,\r\n            marginTop: `1em`,\r\n            marginBottom: `1em`,\r\n            minHeight: `90vh`,\r\n          }}\r\n          spacing={3}\r\n          alignItems=\"flex-start\"\r\n          alignContent=\"flex-start\"\r\n        >\r\n          <Grid\r\n            xs={12}\r\n            item\r\n            container\r\n            spacing={1}\r\n            alignItems=\"center\"\r\n            alignContent=\"center\"\r\n          >\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={2}\r\n              justify=\"flex-start\"\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n            >\r\n              <Grid item>\r\n                <TablePagination\r\n                  rowsPerPageOptions={[50, 100, 250]}\r\n                  component=\"div\"\r\n                  count={tableCount}\r\n                  rowsPerPage={tableLimit}\r\n                  page={tablePage}\r\n                  onChangePage={handleChangePage}\r\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={6}\r\n              container\r\n              spacing={3}\r\n              alignContent=\"center\"\r\n              alignItems=\"center\"\r\n              justify=\"flex-end\"\r\n            >\r\n              <Grid item>\r\n                <DataTableSort\r\n                  handleChagenSelectedSortIndex={handleChagenSelectedSortIndex}\r\n                  initialTableSort={initialTableSort}\r\n                  selectedSortIndex={selectedSortIndex}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item>\r\n                <DataTableSearch\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    handleSetTableSearch({\r\n                      ...tableSearch,\r\n                      search: searchField,\r\n                    });\r\n                  }}\r\n                  handleSetSearchField={handleSetSearchField}\r\n                  searchField={searchField}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid xs={12} container item spacing={3}>\r\n            <LinearLoadingProgress show={table_loading} />\r\n            {data_table?.length < 1 && (\r\n              <span className=\"empty-rows\">No records found!</span>\r\n            )}\r\n\r\n            <Grid item xs={12}>\r\n              <div\r\n                className=\"class-container\"\r\n                style={{\r\n                  display: `grid`,\r\n                  gridGap: `2em`,\r\n                  alignItems: `start`,\r\n                  alignContent: `start`,\r\n                  // gridTemplateColumns: `repeat(auto-fit, minmax(min(270px, 100%), 1fr))`,\r\n                  gridTemplateColumns: `repeat(auto-fill, minmax(270px, 1fr))`,\r\n                }}\r\n              >\r\n                {data_table?.map((v, i) => (\r\n                  <StyledClassContainer key={i}>\r\n                    <div className=\"image\">\r\n                      {/* eslint-disable-next-line jsx-a11y/img-redundant-alt */}\r\n                      <img\r\n                        src={`data:image/jpg;base64,${v.course_info.picture}`}\r\n                        alt={`no image found`}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"info-container\">\r\n                      <NavLink\r\n                        to={`/student/class/${v.class_pk}/session`}\r\n                        className=\"title\"\r\n                      >\r\n                        {v.class_desc}\r\n                        {\" - \"}\r\n                        {v.course_desc}\r\n                      </NavLink>\r\n                      <div className=\"status\">\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            justifyContent: `start`,\r\n                            justifyItems: `start`,\r\n                            alignItems: `center`,\r\n                            gridAutoFlow: `column`,\r\n                            gridAutoColumns: `1fr auto`,\r\n                          }}\r\n                        >\r\n                          <Chip\r\n                            label={v.status.sts_desc}\r\n                            style={{\r\n                              backgroundColor: v.status.sts_bgcolor,\r\n                              color: v.status.sts_color,\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"time item\">\r\n                        {moment(v.start_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                        {\" - \"}\r\n                        {moment(v.end_time, \"HH:mm:ss\").format(\"hh:mma\")}\r\n                      </div>\r\n                      <div\r\n                        className=\"item\"\r\n                        style={{ textTransform: `capitalize` }}\r\n                      >\r\n                        {v.tutor_name}\r\n                      </div>\r\n                      <div className=\"item\">\r\n                        <div className=\"value\">\r\n                          {v.closed_sessions} of {v.session_count} completed\r\n                          sessions\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </StyledClassContainer>\r\n                ))}\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default AvailableClassTableStudentView;\r\n","import { Container } from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route, Switch } from \"react-router\";\r\nimport LinkTabs from \"../../../Component/LinkTabs\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport EndedClassTableStudentView from \"./EndedClassTableStudentView\";\r\nimport OngoingClassTableStudentView from \"./OngoingClassTableStudentView\";\r\nimport AvailableClassTableStudentView from \"./AvailableClassTableStudentView\";\r\n\r\ninterface IDataClassStudentView {}\r\n\r\nexport const DataClassStudentView: FC<IDataClassStudentView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const initializingState = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/student/class/records\",\r\n            title: \"Classes\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && initializingState();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        style={{\r\n          backgroundColor: `#fff`,\r\n          borderRadius: 10,\r\n        }}\r\n        maxWidth=\"lg\"\r\n      >\r\n        <LinkTabs\r\n          tabs={[\r\n            {\r\n              label: \"Enrolled/Ongoing Class\",\r\n              link: `/student/class/records/ongoing-class`,\r\n            },\r\n            {\r\n              label: \"Available Class\",\r\n              link: `/student/class/records/available-class`,\r\n            },\r\n            {\r\n              label: \"Ended Class\",\r\n              link: `/student/class/records/ended-class`,\r\n            },\r\n          ]}\r\n          RenderSwitchComponent={\r\n            <Switch>\r\n              <Route path={`/student/class/records/ongoing-class`} exact>\r\n                <OngoingClassTableStudentView />\r\n              </Route>\r\n              <Route path={`/student/class/records/available-class`} exact>\r\n                <AvailableClassTableStudentView />\r\n              </Route>\r\n              <Route path={`/student/class/records/ended-class`} exact>\r\n                <EndedClassTableStudentView />\r\n              </Route>\r\n            </Switch>\r\n          }\r\n        />\r\n      </Container>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DataClassStudentView;\r\n","import { Container } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledDashboardStudent = styled(Container)`\r\n  .prof-pic {\r\n    grid-area: img;\r\n    margin-right: 1em;\r\n    display: grid;\r\n    align-items: center;\r\n    align-content: center;\r\n    justify-items: center;\r\n    justify-content: center;\r\n  }\r\n  .profile-container {\r\n    display: grid;\r\n    grid-template-areas: \"img greeting\" \"img bio\" \"img info\";\r\n    grid-gap: 0.3em;\r\n    grid-auto-columns: auto 1fr;\r\n    align-content: start;\r\n    align-items: start;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    border-radius: 10px;\r\n\r\n    .greeting {\r\n      grid-area: greeting;\r\n      font-size: 1.8em;\r\n      font-weight: 500;\r\n    }\r\n\r\n    .bio {\r\n      grid-area: bio;\r\n      padding: 0.7em;\r\n      background-color: #f5f5f5;\r\n      font-size: 0.83em;\r\n      border-radius: 10px;\r\n      justify-self: start;\r\n      display: grid;\r\n      justify-content: start;\r\n    }\r\n\r\n    .info-group-container {\r\n      grid-area: info;\r\n      display: grid;\r\n      align-items: start;\r\n      align-content: start;\r\n      font-size: 1em;\r\n\r\n      .value {\r\n        font-weight: 500;\r\n        display: grid;\r\n        align-items: center;\r\n        grid-auto-flow: column;\r\n        align-content: center;\r\n        justify-content: start;\r\n        grid-gap: 0.5em;\r\n      }\r\n    }\r\n  }\r\n\r\n  .recommendation-cntr {\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    border-radius: 10px;\r\n\r\n    .body {\r\n      min-height: 600px;\r\n      max-height: 600px;\r\n      font-size: 0.8em;\r\n      display: grid;\r\n      grid-gap: 1em;\r\n      align-content: start;\r\n      align-items: start;\r\n      overflow-y: auto;\r\n\r\n      .rec-class-item {\r\n        display: grid;\r\n        grid-gap: 0.3em;\r\n        justify-items: start;\r\n        margin: 0 1em;\r\n        /* justify-content: start; */\r\n        padding: 0.5em 1em;\r\n        background-color: #fafafa;\r\n        border-radius: 7px;\r\n\r\n        .class,\r\n        .tutor {\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          justify-content: start;\r\n          justify-items: start;\r\n          grid-gap: 0.5em;\r\n          align-items: center;\r\n          align-content: center;\r\n          .title {\r\n            font-weight: 600;\r\n          }\r\n          .name {\r\n            font-weight: 500;\r\n          }\r\n        }\r\n\r\n        .class-sub {\r\n          display: grid;\r\n          grid-auto-flow: column;\r\n          width: 100%;\r\n          grid-gap: 1em;\r\n          align-items: center;\r\n          align-content: center;\r\n          grid-auto-columns: 1fr 1fr;\r\n          .status {\r\n            justify-self: end;\r\n          }\r\n          .rating {\r\n            justify-self: start;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .schedule-container {\r\n    /* height: 700px; */\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 1em;\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n","import { Button, Grid, MenuItem, TextField } from \"@material-ui/core\";\r\nimport { Form, Formik } from \"formik\";\r\nimport React, { FC, memo, useCallback } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport * as yup from \"yup\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport FormikInputField from \"../../../Component/Formik/FormikInputField\";\r\nimport FormikRadio from \"../../../Component/Formik/FormikRadio\";\r\nimport MaskedPhoneNumber from \"../../../Component/Mask/MaskedPhoneNumber\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport StudentActions from \"../../../Services/Actions/StudentActions\";\r\nimport { StudentModel } from \"../../../Services/Models/StudentModel\";\r\nimport { DbGradeLevels } from \"../../../Storage/LocalDatabase\";\r\ninterface IEditStudentInfo {\r\n  initial_form_values: StudentModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nconst formSchema = yup.object({\r\n  firstname: yup.string().required().max(150).label(\"First Name\"),\r\n  middlename: yup.string().max(100).label(\"Midle Name\"),\r\n  lastname: yup.string().required().max(150).label(\"Last Name\"),\r\n  suffix: yup.string().max(10).label(\"Suffix\"),\r\n  grade: yup\r\n    .number()\r\n    .nullable()\r\n    .required()\r\n    .moreThan(0)\r\n    .lessThan(20)\r\n    .label(\"Grade Level\"),\r\n  email: yup.string().required().email().label(\"Email Address\"),\r\n  mob_no: yup\r\n    .string()\r\n    .required()\r\n    .matches(\r\n      /^(09|\\+639)\\d{9}$/,\r\n      \"Mobile number must be a valid philippine mobile number.\"\r\n    ),\r\n  gender: yup.string().nullable().required().max(1).label(\"Gender\"),\r\n  complete_address: yup.string().required().max(255).label(\"Complete Address\"),\r\n});\r\n\r\nexport const EditStudentInfo: FC<IEditStudentInfo> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleFormSubmit = useCallback(\r\n      async (payload: StudentModel) => {\r\n        payload.student_pk = initial_form_values.student_pk;\r\n\r\n        if (initial_form_values?.student_pk) {\r\n          dispatch(\r\n            setGeneralPrompt({\r\n              open: true,\r\n              continue_callback: () =>\r\n                dispatch(\r\n                  StudentActions.updateStudent(payload, (msg: string) => {\r\n                    dispatch(StudentActions.getLoggedStudentInfo());\r\n                    handleClose();\r\n                  })\r\n                ),\r\n            })\r\n          );\r\n        }\r\n      },\r\n      [dispatch, handleClose, initial_form_values]\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Update Your Basic Information\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Formik\r\n                initialValues={initial_form_values}\r\n                validationSchema={formSchema}\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                {({ values, errors, touched, setFieldValue, submitCount }) => (\r\n                  <Form className=\"form\" id=\"form-update-student-info\">\r\n                    <Grid container spacing={3}>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"First Name\"\r\n                          placeholder=\"Enter firstname name\"\r\n                          name=\"firstname\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Middle Name (optional)\"\r\n                          placeholder=\"Enter middle name\"\r\n                          name=\"middlename\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Last Name\"\r\n                          placeholder=\"Enter last name\"\r\n                          name=\"lastname\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Suffix (optional)\"\r\n                          placeholder=\"Enter suffix\"\r\n                          name=\"suffix\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        {(() => {\r\n                          const name = \"grade\";\r\n                          const errorText =\r\n                            errors[name] && touched[name] ? errors[name] : \"\";\r\n                          const handleChange = (e: any) => {\r\n                            setFieldValue(name, e.target.value);\r\n                          };\r\n                          return (\r\n                            <TextField\r\n                              value={values[name] ? values[name] : \"\"}\r\n                              label=\"Grade Level\"\r\n                              select\r\n                              onChange={handleChange}\r\n                              placeholder=\"Enter position/designation\"\r\n                              variant=\"outlined\"\r\n                              InputLabelProps={{ shrink: true }}\r\n                              fullWidth\r\n                              error={!!errorText}\r\n                              helperText={errorText}\r\n                            >\r\n                              {DbGradeLevels.map((val, index) => (\r\n                                <MenuItem key={index} value={val.id}>\r\n                                  {val.label}\r\n                                </MenuItem>\r\n                              ))}\r\n                            </TextField>\r\n                          );\r\n                        })()}\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikRadio\r\n                          name=\"gender\"\r\n                          label=\"Gender\"\r\n                          variant=\"vertical\"\r\n                          required={true}\r\n                          data={[\r\n                            {\r\n                              id: \"m\",\r\n                              label: \"Male\",\r\n                            },\r\n                            {\r\n                              id: \"f\",\r\n                              label: \"Female\",\r\n                            },\r\n                          ]}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Mobile Number\"\r\n                          placeholder=\"Mobile Number\"\r\n                          name=\"mob_no\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                          InputProps={{\r\n                            inputComponent: MaskedPhoneNumber,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <FormikInputField\r\n                          label=\"Email Address\"\r\n                          placeholder=\"Enter email address\"\r\n                          name=\"email\"\r\n                          type=\"email\"\r\n                          variant=\"outlined\"\r\n                          InputLabelProps={{ shrink: true }}\r\n                          fullWidth\r\n                        />\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Grid item xs={12}>\r\n                          <FormikInputField\r\n                            label=\"Complete Address\"\r\n                            placeholder=\"Enter complete address\"\r\n                            name=\"complete_address\"\r\n                            type=\"text\"\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{ shrink: true }}\r\n                            fullWidth\r\n                            multiline={true}\r\n                            rows={3}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                form=\"form-update-student-info\"\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditStudentInfo;\r\n","import { Button, Grid } from \"@material-ui/core\";\r\nimport React, { FC, memo, useCallback, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\nimport PhotoField from \"../../../Component/PhotoField/PhotoField\";\r\nimport { fileToBase64 } from \"../../../Hooks/UseFileConverter\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport StudentActions from \"../../../Services/Actions/StudentActions\";\r\nimport { StudentModel } from \"../../../Services/Models/StudentModel\";\r\ninterface IEditStudentPicture {\r\n  initial_form_values: StudentModel;\r\n  open: boolean;\r\n  handleClose: () => void;\r\n}\r\n\r\nexport const EditStudentPicture: FC<IEditStudentPicture> = memo(\r\n  ({ initial_form_values, open, handleClose }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [pic, setPic] = useState<File | null>(null);\r\n    const handleSetPic = useCallback((logo) => {\r\n      setPic(logo);\r\n    }, []);\r\n\r\n    const handleFormSubmit = useCallback(async () => {\r\n      const base64_pic = await fileToBase64(pic);\r\n\r\n      if (base64_pic && initial_form_values?.student_pk) {\r\n        const payload: StudentModel = {\r\n          student_pk: initial_form_values.student_pk,\r\n          picture: base64_pic,\r\n        };\r\n\r\n        dispatch(\r\n          setGeneralPrompt({\r\n            open: true,\r\n            continue_callback: () =>\r\n              dispatch(\r\n                StudentActions.updateStudentImage(payload, (msg: string) => {\r\n                  dispatch(StudentActions.getLoggedStudentInfo());\r\n                  handleClose();\r\n                })\r\n              ),\r\n          })\r\n        );\r\n      }\r\n    }, [dispatch, handleClose, initial_form_values, pic]);\r\n\r\n    return (\r\n      <>\r\n        <FormDialog\r\n          open={open}\r\n          title=\"Update Your Profile Picture\"\r\n          handleClose={() => handleClose()}\r\n          minWidth={500}\r\n          maxWidth=\"xs\"\r\n          body={\r\n            <div>\r\n              <Grid container justify=\"center\" spacing={3}>\r\n                <Grid xs={12} container justify=\"center\" item>\r\n                  <div style={{ padding: \"1.5em 0\" }}>\r\n                    <PhotoField\r\n                      label=\"\"\r\n                      height={180}\r\n                      width={300}\r\n                      selectedFile={pic}\r\n                      name=\"pic\"\r\n                      variant=\"rounded\"\r\n                      handleChange={handleSetPic}\r\n                    />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          }\r\n          actions={\r\n            <>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                onClick={handleFormSubmit}\r\n              >\r\n                Save Changes\r\n              </Button>\r\n            </>\r\n          }\r\n        />\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nexport default EditStudentPicture;\r\n","import FullCalendar from \"@fullcalendar/react\";\r\nimport resourceTimeGridPlugin from \"@fullcalendar/resource-timegrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport \"@fullcalendar/timegrid/main.css\";\r\nimport \"@fullcalendar/daygrid/main.css\";\r\nimport \"../../../Component/Calendar/calendar.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Chip,\r\n  CircularProgress,\r\n  Grid,\r\n  Table,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Tooltip,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport React, { memo, FC, useEffect, useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CustomAvatar from \"../../../Component/CustomAvatar\";\r\nimport { setPageLinks } from \"../../../Services/Actions/PageActions\";\r\nimport { StyledDashboardStudent } from \"./styles\";\r\nimport { StyledDashboardItem } from \"../../../Styles/GlobalStyles\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport LocalLibraryRoundedIcon from \"@material-ui/icons/LocalLibraryRounded\";\r\nimport ChangePasswordDialog from \"../../SharedViews/ChangePasswordDialog\";\r\nimport EditTutorBiography, { EditStudentInfo } from \"./EditStudentInfo\";\r\nimport EditTutorPicture from \"./EditStudentPicture\";\r\nimport TutorActions from \"../../../Services/Actions/TutorActions\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { StringEmptyToDefault } from \"../../../Hooks/UseStringFormatter\";\r\nimport ClassActions from \"../../../Services/Actions/ClassActions\";\r\nimport ClassSessionActions from \"../../../Services/Actions/ClassSessionActions\";\r\nimport LinearLoadingProgress from \"../../../Component/LinearLoadingProgress\";\r\nimport StudentActions from \"../../../Services/Actions/StudentActions\";\r\nimport { Bar, Pie } from \"react-chartjs-2\";\r\nimport \"chartjs-plugin-labels\";\r\ninterface IDashboardTutorView {}\r\nexport const DashboardTutorView: FC<IDashboardTutorView> = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const theme = useTheme();\r\n  const desktop = useMediaQuery(theme.breakpoints.up(\"md\"));\r\n\r\n  const [open_change_pass, set_open_change_pass] = useState(false);\r\n\r\n  const handleOpenChangePass = useCallback(() => {\r\n    set_open_change_pass(true);\r\n  }, []);\r\n\r\n  const handleCloseChangePass = useCallback(() => {\r\n    set_open_change_pass(false);\r\n  }, []);\r\n\r\n  const [open_edit_picture, set_open_edit_picture] = useState(false);\r\n\r\n  const handleOpenEditPicture = useCallback(() => {\r\n    set_open_edit_picture(true);\r\n  }, []);\r\n\r\n  const handleCloseEditPicture = useCallback(() => {\r\n    set_open_edit_picture(false);\r\n  }, []);\r\n\r\n  const [open_edit_student_info, set_open_edit_student_info] = useState(false);\r\n\r\n  const handleOpenEditStudentInfo = useCallback(() => {\r\n    set_open_edit_student_info(true);\r\n  }, []);\r\n\r\n  const handleCloseEditStudentInfo = useCallback(() => {\r\n    set_open_edit_student_info(false);\r\n  }, []);\r\n\r\n  const logged_student_info = useSelector(\r\n    (store: RootStore) => store.StudentReducer.logged_student_info\r\n  );\r\n  const fetch_logged_student_info = useSelector(\r\n    (store: RootStore) => store.StudentReducer.fetch_logged_student_info\r\n  );\r\n\r\n  const total_student_class_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.total_student_class_stats\r\n  );\r\n  const fetch_total_student_class_stats = useSelector(\r\n    (store: RootStore) => store.ClassReducer.fetch_total_student_class_stats\r\n  );\r\n\r\n  const logged_student_calendar = useSelector(\r\n    (store: RootStore) => store.ClassSessionReducer.logged_student_calendar\r\n  );\r\n\r\n  const fetch_logged_student_calendar = useSelector(\r\n    (store: RootStore) =>\r\n      store.ClassSessionReducer.fetch_logged_student_calendar\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(StudentActions.getLoggedStudentInfo());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassActions.getTotalStudentClassStats());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(ClassSessionActions.getLoggedStudentCalendar());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    const settingPageLinks = () => {\r\n      dispatch(\r\n        setPageLinks([\r\n          {\r\n            link: \"/tutor/dashboard\",\r\n            title: \"Dashboard\",\r\n          },\r\n        ])\r\n      );\r\n    };\r\n\r\n    mounted && settingPageLinks();\r\n    return () => (mounted = false);\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <StyledDashboardStudent theme={theme}>\r\n        <Grid container spacing={4}>\r\n          <Grid item xs={12} md={8}>\r\n            <Grid container spacing={4}>\r\n              {fetch_logged_student_info && !logged_student_info ? (\r\n                <CircularProgress />\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Grid\r\n                    container\r\n                    style={{\r\n                      backgroundColor: `#fff`,\r\n                      borderRadius: 10,\r\n                      padding: `1em`,\r\n                    }}\r\n                  >\r\n                    <Grid item xs={12} md={3}>\r\n                      <div className=\"prof-pic\">\r\n                        <CustomAvatar\r\n                          heightSpacing={15}\r\n                          widthSpacing={15}\r\n                          src={logged_student_info?.picture}\r\n                          errorMessage={`${logged_student_info?.firstname?.charAt(\r\n                            0\r\n                          )} ${logged_student_info?.lastname?.charAt(0)}`}\r\n                        />\r\n                        <div\r\n                          style={{\r\n                            display: `grid`,\r\n                            gridGap: `.5em`,\r\n                            marginTop: `1em`,\r\n                            alignContent: `center`,\r\n                            alignItems: `center`,\r\n                            justifyContent: `center`,\r\n                            justifyItems: `center`,\r\n                            borderTop: `.01em solid rgba(0,0,0,.1)`,\r\n                            height: `100%`,\r\n                          }}\r\n                        >\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleOpenEditStudentInfo();\r\n                            }}\r\n                          >\r\n                            Edit Basic Info\r\n                          </Button>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleOpenEditPicture();\r\n                            }}\r\n                          >\r\n                            Change Picture\r\n                          </Button>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            onClick={() => {\r\n                              handleOpenChangePass();\r\n                            }}\r\n                          >\r\n                            Change Password\r\n                          </Button>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={9}>\r\n                      <div className=\"profile-container\">\r\n                        <div className=\"greeting\">\r\n                          Greetings, {logged_student_info?.firstname}{\" \"}\r\n                          {logged_student_info?.lastname}{\" \"}\r\n                          {logged_student_info?.suffix}\r\n                        </div>\r\n\r\n                        <div className=\"bio\">\r\n                          Grade {logged_student_info?.grade}\r\n                        </div>\r\n\r\n                        <div className=\"info-group-container\">\r\n                          <div className=\"info-group\">\r\n                            <div className=\"label\">Gender</div>\r\n                            <div className=\"value\">\r\n                              {logged_student_info?.gender === \"m\"\r\n                                ? \"Male\"\r\n                                : \"Female\"}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"info-group\">\r\n                            <div className=\"label\">Email Address</div>\r\n                            <div className=\"value\">\r\n                              {logged_student_info?.email}\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"info-group\">\r\n                            <div className=\"label\">Mobile Number</div>\r\n                            <div className=\"value\">\r\n                              {logged_student_info?.mob_no}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              )}\r\n\r\n              {fetch_total_student_class_stats && !total_student_class_stats ? (\r\n                <Grid item xs={12}>\r\n                  <CircularProgress />\r\n                </Grid>\r\n              ) : (\r\n                <>\r\n                  <Grid item xs={12}>\r\n                    <Grid container spacing={4}>\r\n                      {total_student_class_stats?.map((s, i) => (\r\n                        <Grid item xs={12} md={4} key={i}>\r\n                          <StyledDashboardItem>\r\n                            <div className=\"label\" style={{ color: `#333` }}>\r\n                              {s.label}\r\n                            </div>\r\n                            <div className=\"stat-value\">\r\n                              {fetch_total_student_class_stats ? (\r\n                                <CircularProgress size={20} />\r\n                              ) : (\r\n                                s.value\r\n                              )}\r\n                            </div>\r\n                            <Avatar\r\n                              className=\"avatar\"\r\n                              style={{\r\n                                backgroundColor: \"#ffebee\",\r\n                                color: \"#b71c1c\",\r\n                              }}\r\n                            >\r\n                              <LocalLibraryRoundedIcon />\r\n                            </Avatar>\r\n                          </StyledDashboardItem>\r\n                        </Grid>\r\n                      ))}\r\n                    </Grid>\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12}>\r\n                    <div\r\n                      style={{\r\n                        backgroundColor: `#fff`,\r\n                        borderRadius: 10,\r\n                        padding: `1em`,\r\n                      }}\r\n                    >\r\n                      <Pie\r\n                        type=\"pie\"\r\n                        height={70}\r\n                        data={{\r\n                          labels: total_student_class_stats?.map(\r\n                            ({ label }) => label\r\n                          ),\r\n                          datasets: [\r\n                            {\r\n                              labels: total_student_class_stats?.map(\r\n                                ({ label }) => label\r\n                              ),\r\n                              data: total_student_class_stats?.map(\r\n                                ({ value }) => value\r\n                              ),\r\n                              backgroundColor: total_student_class_stats?.map(\r\n                                ({ backgroundColor }) => backgroundColor\r\n                              ),\r\n                              borderColor: \"#fff\",\r\n                            },\r\n                          ],\r\n                        }}\r\n                        options={{\r\n                          responsiveAnimationDuration: 1,\r\n                          tooltips: {\r\n                            enabled: false,\r\n                          },\r\n                          plugins: {\r\n                            labels: {\r\n                              render: \"percentage\",\r\n                              precision: 0,\r\n                              showZero: true,\r\n                              fontSize: 12,\r\n                              fontColor: \"#fff\",\r\n                            },\r\n                          },\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <div className=\"recommendation-cntr\">\r\n              <div className=\"container-title\">Classes you may like</div>\r\n\r\n              <div className=\"body\">\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"rec-class-item\">\r\n                  <div className=\"class\">\r\n                    <CustomAvatar\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      src=\"\"\r\n                      errorMessage=\"C\"\r\n                    />\r\n                    <div className=\"title\">Math 501</div>\r\n                  </div>\r\n\r\n                  <div className=\"class-sub\">\r\n                    <Chip className=\"status\" label=\"Approved\" />\r\n\r\n                    <div className=\"rating\">\r\n                      <Tooltip title=\"4 stars\">\r\n                        <Rating\r\n                          size=\"small\"\r\n                          readOnly\r\n                          name=\"rating\"\r\n                          value={4}\r\n                          precision={0.1}\r\n                        />\r\n                      </Tooltip>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"tutor\">\r\n                    <CustomAvatar\r\n                      src=\"\"\r\n                      heightSpacing={4}\r\n                      widthSpacing={4}\r\n                      errorMessage=\"JD\"\r\n                    />\r\n                    <div className=\"name\">John Doe</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Date</div>\r\n                    <div className=\"value\">July 28, 1998</div>\r\n                  </div>\r\n                  <div className=\"info-group\">\r\n                    <div className=\"label\">Time Interval</div>\r\n                    <div className=\"value\">09:00 am - 11:00 am</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <div className=\"schedule-container\">\r\n              <div className=\"container-title\">Schedule</div>\r\n              <LinearLoadingProgress show={fetch_logged_student_calendar} />\r\n\r\n              {logged_student_calendar && (\r\n                <FullCalendar\r\n                  schedulerLicenseKey={\r\n                    \"CC-Attribution-NonCommercial-NoDerivatives\"\r\n                  }\r\n                  initialView={\"timeGridFourDay\"}\r\n                  plugins={[resourceTimeGridPlugin, interactionPlugin]}\r\n                  views={{\r\n                    timeGridFourDay: {\r\n                      type: \"timeGrid\",\r\n                      duration: { days: 5 },\r\n                      buttonText: \"5 day\",\r\n                    },\r\n                  }}\r\n                  events={logged_student_calendar}\r\n                  eventMinHeight={70}\r\n                  expandRows={true}\r\n                  stickyHeaderDates={true}\r\n                  slotMinTime=\"07:00\"\r\n                  slotMaxTime=\"21:00\"\r\n                  contentHeight={700}\r\n                  height={700}\r\n                  allDaySlot={false}\r\n                  eventContent={(e) => {\r\n                    const data = e.event;\r\n\r\n                    return (\r\n                      <div\r\n                        style={{\r\n                          boxShadow: `0 1px 2px rgba(0,0,0,.1)`,\r\n                          backgroundColor: data.backgroundColor,\r\n                          color: data.textColor,\r\n                          padding: `.5em`,\r\n                          fontSize: `.9em`,\r\n                          display: `grid`,\r\n                          gridAutoFlow: `column`,\r\n                          justifyContent: `start`,\r\n                          alignItems: `center`,\r\n                          alignContent: `center`,\r\n                          gridGap: `.87em`,\r\n                          borderRadius: 5,\r\n                          border: `.01em solid rgba(0,0,0,.1)`,\r\n                          letterSpacing: `.3pt`,\r\n                          wordSpacing: `.3pt`,\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            fontWeight: 900,\r\n                            textTransform: `uppercase`,\r\n                            color: data.backgroundColor,\r\n                            backgroundColor: data.textColor,\r\n                            padding: `5px`,\r\n                            borderRadius: `50%`,\r\n                            height: 20,\r\n                            width: 20,\r\n                            textAlign: `center`,\r\n                            display: `grid`,\r\n                            alignItems: `center`,\r\n                            alignContent: `center`,\r\n                            fontSize: `.8em`,\r\n                          }}\r\n                        >\r\n                          {data.extendedProps.sts_pk}\r\n                        </div>\r\n                        <div\r\n                          style={{\r\n                            fontWeight: 600,\r\n                            fontSize: `1em`,\r\n                          }}\r\n                        >\r\n                          {data.title}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {open_change_pass && (\r\n          <ChangePasswordDialog\r\n            handleClose={handleCloseChangePass}\r\n            open={open_change_pass}\r\n          />\r\n        )}\r\n\r\n        {logged_student_info && open_edit_picture && (\r\n          <EditTutorPicture\r\n            initial_form_values={logged_student_info}\r\n            handleClose={handleCloseEditPicture}\r\n            open={open_edit_picture}\r\n          />\r\n        )}\r\n\r\n        {logged_student_info && open_edit_student_info && (\r\n          <EditStudentInfo\r\n            initial_form_values={logged_student_info}\r\n            handleClose={handleCloseEditStudentInfo}\r\n            open={open_edit_student_info}\r\n          />\r\n        )}\r\n      </StyledDashboardStudent>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default DashboardTutorView;\r\n","import { Avatar, Button, Chip, Container } from \"@material-ui/core\";\r\nimport React, { FC, memo, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport FormDialog from \"../../../Component/FormDialog/FormDialog\";\r\n\r\nimport styled from \"styled-components\";\r\nimport { Rating } from \"@material-ui/lab\";\r\nimport { getDummyTutorsApi } from \"../../../Services/Api/TutorApi\";\r\nimport { RootStore } from \"../../../Services/Store\";\r\nimport { TutorRatingsModel } from \"../../../Services/Models/TutorRatingsModel\";\r\nimport { setGeneralPrompt } from \"../../../Services/Actions/PageActions\";\r\nimport { insertDummyTutorRatingsAction } from \"../../../Services/Actions/TutorActions\";\r\nimport { SetCurrentUserAction } from \"../../../Services/Actions/UserActions\";\r\ninterface TutorRatingStudentViewInterface {}\r\n\r\ninterface RateTutorInterface {\r\n  picture: any;\r\n  tutor_pk: number;\r\n  name: string;\r\n  bio: string;\r\n  rating: number;\r\n}\r\n\r\nexport const TutorRatingStudentView: FC<TutorRatingStudentViewInterface> = memo(\r\n  () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n    const [\r\n      rateTutors,\r\n      setRateTutors,\r\n    ] = useState<Array<TutorRatingsModel> | null>();\r\n\r\n    const [steps, setSteps] = useState(0);\r\n\r\n    const handleNextStep = () => {\r\n      setSteps((step) => {\r\n        if (step !== 4) {\r\n          return step + 1;\r\n        }\r\n\r\n        return step;\r\n      });\r\n    };\r\n    const handlePrevStep = () => {\r\n      setSteps((step) => {\r\n        if (step !== 0) {\r\n          return step - 1;\r\n        }\r\n\r\n        return step;\r\n      });\r\n    };\r\n\r\n    useEffect(() => {\r\n      let mounted = true;\r\n\r\n      const fetch_dummy_tutors = async () => {\r\n        const response = await getDummyTutorsApi();\r\n\r\n        if (response.success) {\r\n          setRateTutors(response.data);\r\n        }\r\n      };\r\n\r\n      mounted && fetch_dummy_tutors();\r\n\r\n      return () => {\r\n        mounted = false;\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <FormDialog\r\n        title=\"Please rate these tutors to let us find the best one for you.\"\r\n        open={user?.rated_tutor === \"n\"}\r\n        minWidth={400}\r\n        hideCloseButton={true}\r\n        body={\r\n          <>\r\n            {rateTutors &&\r\n              rateTutors.map((t, i) =>\r\n                i === steps ? (\r\n                  <StyledTutorRatingStudentView key={i}>\r\n                    <Avatar\r\n                      className=\"pic\"\r\n                      src={`data:image/jpg;base64,${t.picture}`}\r\n                      variant=\"square\"\r\n                    />\r\n\r\n                    <div className=\"name\">{t.name}</div>\r\n\r\n                    <div className=\"bio\">\r\n                      <small>{t.bio}</small>\r\n                    </div>\r\n\r\n                    <div className=\"stars\">\r\n                      <Rating\r\n                        value={t.rating}\r\n                        name={t.name}\r\n                        onChange={(event, newValue) => {\r\n                          setRateTutors((prevTutor) => {\r\n                            const temp = prevTutor;\r\n                            const foundTutor = temp.findIndex(\r\n                              (item, k) => k === i\r\n                            );\r\n\r\n                            temp[foundTutor].rating = newValue;\r\n                            return [...temp];\r\n                          });\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </StyledTutorRatingStudentView>\r\n                ) : null\r\n              )}\r\n          </>\r\n        }\r\n        actions={\r\n          rateTutors && (\r\n            <>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                onClick={() => {\r\n                  handlePrevStep();\r\n                }}\r\n                disabled={steps === 0}\r\n              >\r\n                Previous\r\n              </Button>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                disabled={rateTutors[steps]?.rating === 0}\r\n                onClick={() => {\r\n                  if (steps === 4) {\r\n                    let payload = [];\r\n\r\n                    rateTutors.forEach((t) => {\r\n                      payload.push({\r\n                        ...t,\r\n                        picture: \"\",\r\n                      });\r\n                    });\r\n\r\n                    dispatch(\r\n                      setGeneralPrompt({\r\n                        open: true,\r\n                        continue_callback: () =>\r\n                          dispatch(\r\n                            insertDummyTutorRatingsAction(\r\n                              payload,\r\n                              (msg: string) => {\r\n                                dispatch(SetCurrentUserAction());\r\n                              }\r\n                            )\r\n                          ),\r\n                      })\r\n                    );\r\n                  } else {\r\n                    handleNextStep();\r\n                  }\r\n                }}\r\n              >\r\n                {steps === 4 ? \"Submit\" : \"Next\"}\r\n              </Button>\r\n            </>\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default TutorRatingStudentView;\r\n\r\nconst StyledTutorRatingStudentView = styled.div`\r\n  display: grid;\r\n  justify-items: center;\r\n  grid-gap: 1em;\r\n  .pic {\r\n    height: 220px;\r\n    width: 350px;\r\n  }\r\n  .name {\r\n    font-weight: 700;\r\n  }\r\n  .specialties {\r\n    display: grid;\r\n    grid-gap: 0.5em;\r\n    grid-auto-flow: column;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport ManageClassAdminView from \"../Views/SharedViews/Class/ManageClassView\";\r\nimport RateTutorDialog from \"../Views/SharedViews/Tutor/RateTutorDIalog\";\r\nimport DataClassStudentView from \"../Views/StudentViews/DataClassStudentView\";\r\nimport HomeStudentView from \"../Views/StudentViews/DashboardStudentView\";\r\nimport TutorRatingView from \"../Views/StudentViews/TutorRatingStudentView/TutorRatingStudentView\";\r\nimport ManageClassSelectedSessionTutorView from \"../Views/TutorViews/ManageClassTutorViews/ManageClassSession\";\r\n\r\nconst StudentRoutes = () => {\r\n  return (\r\n    <>\r\n      <RateTutorDialog />\r\n      <Switch>\r\n        <Route path=\"/student/dashboard\" exact>\r\n          <HomeStudentView />\r\n        </Route>\r\n        {/* <Route path=\"/student/class\" exact>\r\n          <DataTableClassStudentView />\r\n        </Route> */}\r\n\r\n        {/* <Route\r\n          path={`/student/class/:class_pk/session/:session_pk`}\r\n          strict\r\n          exact\r\n        >\r\n          <ManageClassSelectedSessionTutorView />\r\n        </Route> */}\r\n\r\n        <Route path=\"/student/class/records\" strict>\r\n          <DataClassStudentView />\r\n        </Route>\r\n\r\n        <Route path=\"/student/class/:class_pk/session/:session_pk\" strict>\r\n          <ManageClassSelectedSessionTutorView />\r\n        </Route>\r\n\r\n        <Route path=\"/student/class/:class_pk\" strict>\r\n          <ManageClassAdminView />\r\n        </Route>\r\n\r\n        {/* <Route path=\"/tutor/class/:class_pk/session/:session_pk\" strict exact>\r\n        <ManageClassSelectedSessionTutorView />\r\n      </Route> */}\r\n        {/* <Route path=\"/student/class/:class_pk\" strict>\r\n          <ManageClassTutorView />\r\n        </Route> */}\r\n      </Switch>\r\n      <TutorRatingView />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentRoutes;\r\n","import React, { memo, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport LoginPortal from \"../Views/LoginPortal/LoginPortal\";\r\nimport { SetCurrentUserAction } from \"../Services/Actions/UserActions\";\r\nimport { RootStore } from \"../Services/Store\";\r\nimport PageLoader from \"../Component/PageLoader\";\r\nimport PagePrompt from \"../Component/PagePrompt\";\r\nimport PageSnackbar from \"../Component/PageSnackbar\";\r\nimport SysAdminRoutes from \"./AdminRoutes\";\r\nimport Layout from \"./Layout/Layout\";\r\nimport RegisterSTudentView from \"../Views/RegisterStudentViews/RegisterStudentView\";\r\nimport TutorRoutes from \"./TutorRoutes\";\r\nimport PageSuccessPrompt from \"../Component/PageSuccessPrompt\";\r\nimport StudentRoutes from \"./StudentRoutes\";\r\n\r\nconst Routes = memo(() => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((store: RootStore) => store.UserReducer.user);\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const getUserInfo = async () => {\r\n      dispatch(SetCurrentUserAction());\r\n    };\r\n\r\n    mounted && getUserInfo();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <PageLoader />\r\n        <PagePrompt />\r\n        <PageSnackbar />\r\n        <PageSuccessPrompt />\r\n        <Switch>\r\n          {/* <Route path=\"/\" exact component={LoginPortal} /> */}\r\n          <Route path=\"/login\" exact component={LoginPortal} />\r\n          <Route\r\n            path=\"/student-registration\"\r\n            exact\r\n            component={RegisterSTudentView}\r\n          />\r\n          {/* <Route path=\"/notfound\" exact component={PageNotFound} /> */}\r\n          <Layout>\r\n            {user?.user_type === \"admin\" && <SysAdminRoutes />}\r\n            {user?.user_type === \"tutor\" && <TutorRoutes />}\r\n            {user?.user_type === \"student\" && <StudentRoutes />}\r\n          </Layout>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n});\r\nexport default Routes;\r\n","import { UserReducerModel, UserReducerTypes } from \"../Types/UserTypes\";\r\n\r\nconst defaultState: UserReducerModel = {\r\n  user: null,\r\n  userLoading: false,\r\n};\r\n\r\nconst UserReducer = (\r\n  state: UserReducerModel = defaultState,\r\n  action: UserReducerTypes\r\n) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_USER\": {\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    }\r\n\r\n    case \"SET_LOADING_USER\": {\r\n      return {\r\n        ...state,\r\n        userLoading: action.isLoading,\r\n      };\r\n    }\r\n\r\n    case \"user_logs\": {\r\n      return {\r\n        ...state,\r\n        user_logs: action.user_logs,\r\n      };\r\n    }\r\n\r\n    case \"fetching_user_logs\": {\r\n      return {\r\n        ...state,\r\n        fetching_user_logs: action.fetching_user_logs,\r\n      };\r\n    }\r\n    //\r\n    case \"all_logs\": {\r\n      return {\r\n        ...state,\r\n        all_logs: action.all_logs,\r\n      };\r\n    }\r\n\r\n    case \"fetching_all_logs\": {\r\n      return {\r\n        ...state,\r\n        fetching_all_logs: action.fetching_all_logs,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default UserReducer;\r\n","import { PageReducerModel, PageReducerTypes } from \"../Types/PageTypes\";\r\n\r\nconst defaultState: PageReducerModel = {\r\n  page_prompt: {\r\n    open: false,\r\n    custom_title: null,\r\n    custom_subtitle: null,\r\n    continue_callback: null,\r\n    close_callback: null,\r\n  },\r\n  page_loading: {\r\n    show: false,\r\n  },\r\n  page_snackbar: {\r\n    message: null,\r\n  },\r\n  page_links: [],\r\n};\r\n\r\nconst PageReducer = (\r\n  state: PageReducerModel = defaultState,\r\n  action: PageReducerTypes\r\n): PageReducerModel => {\r\n  switch (action.type) {\r\n    case \"SET_PAGE_PROMPT\":\r\n      return { ...state, page_prompt: action.page_prompt };\r\n    case \"SET_PAGE_LOADING\":\r\n      return { ...state, page_loading: action.page_loading };\r\n    case \"SET_PAGE_SNACKBAR\":\r\n      return { ...state, page_snackbar: action.page_snackbar };\r\n\r\n    case \"SET_PAGE_LINKS\":\r\n      return { ...state, page_links: action.page_links };\r\n\r\n    case \"SET_PAGE_SUCCESS_PROMPT\":\r\n      return { ...state, page_success_prompt: action.page_success_prompt };\r\n\r\n    case \"toggle_activity_sidebar\":\r\n      return {\r\n        ...state,\r\n        toggle_activity_sidebar: action.toggle_activity_sidebar,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default PageReducer;\r\n","import { TutorReducerModel, TutorReducerTypes } from \"../Types/TutorTypes\";\r\n\r\nconst defaultState: TutorReducerModel = {\r\n  reload_single_tutor: 0,\r\n  reload_tutor_paging: 0,\r\n  fetching_single_tutor: false,\r\n  fetching_tutor_data_table: false,\r\n};\r\n\r\nconst TutorReducer = (\r\n  state: TutorReducerModel = defaultState,\r\n  action: TutorReducerTypes\r\n): TutorReducerModel => {\r\n  switch (action.type) {\r\n    case \"TUTOR_DATA_TABLE\": {\r\n      return {\r\n        ...state,\r\n        tutor_data_table: action.tutor_data_table,\r\n      };\r\n    }\r\n    case \"FETCHING_TUTOR_DATA_TABLE\": {\r\n      return {\r\n        ...state,\r\n        fetching_tutor_data_table: action.fetching_tutor_data_table,\r\n      };\r\n    }\r\n    case \"RELOAD_TUTOR_PAGING\": {\r\n      return {\r\n        ...state,\r\n        reload_tutor_paging: state.reload_tutor_paging++,\r\n      };\r\n    }\r\n\r\n    case \"SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        single_tutor: action.single_tutor,\r\n      };\r\n    }\r\n    case \"FETCHING_SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        fetching_single_tutor: state.fetching_single_tutor,\r\n      };\r\n    }\r\n    case \"RELOAD_SINGLE_TUTOR\": {\r\n      return {\r\n        ...state,\r\n        reload_single_tutor: state.reload_single_tutor++,\r\n      };\r\n    }\r\n    //\r\n    case \"loggedin_tutor\": {\r\n      return {\r\n        ...state,\r\n        loggedin_tutor: action.loggedin_tutor,\r\n      };\r\n    }\r\n    case \"fetch_loggedin_tutor\": {\r\n      return {\r\n        ...state,\r\n        fetch_loggedin_tutor: action.fetch_loggedin_tutor,\r\n      };\r\n    }\r\n    //\r\n    case \"single_tutor_to_student\": {\r\n      return {\r\n        ...state,\r\n        single_tutor_to_student: action.single_tutor_to_student,\r\n      };\r\n    }\r\n    case \"fetch_single_tutor_to_student\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_tutor_to_student: action.fetch_single_tutor_to_student,\r\n      };\r\n    }\r\n\r\n    //\r\n    case \"most_rated_tutors\": {\r\n      return {\r\n        ...state,\r\n        most_rated_tutors: action.most_rated_tutors,\r\n      };\r\n    }\r\n    case \"fetch_most_rated_tutors\": {\r\n      return {\r\n        ...state,\r\n        fetch_most_rated_tutors: action.fetch_most_rated_tutors,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TutorReducer;\r\n","import { CourseReducerModel, CourseReducerTypes } from \"../Types/CourseTypes\";\r\n\r\nconst defaultState: CourseReducerModel = {\r\n  fetching_course_data_table: false,\r\n  fetching_selected_course: false,\r\n};\r\n\r\nconst CourseReducer = (\r\n  state: CourseReducerModel = defaultState,\r\n  action: CourseReducerTypes\r\n): CourseReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_course_data_table\": {\r\n      return {\r\n        ...state,\r\n        course_data_table: action.course_data_table,\r\n      };\r\n    }\r\n    case \"fetching_course_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_course_data_table: action.fetching_course_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_course\": {\r\n      return {\r\n        ...state,\r\n        selected_course: action.selected_course,\r\n      };\r\n    }\r\n    case \"fetching_selected_course\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_course: action.fetching_selected_course,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default CourseReducer;\r\n","import { RoomReducerModel, RoomReducerTypes } from \"../Types/RoomTypes\";\r\n\r\nconst defaultState: RoomReducerModel = {\r\n  fetching_selected_room: false,\r\n  fetching_room_data_table: false,\r\n};\r\n\r\nconst RoomReducer = (\r\n  state: RoomReducerModel = defaultState,\r\n  action: RoomReducerTypes\r\n): RoomReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_room_data_table\": {\r\n      return {\r\n        ...state,\r\n        room_data_table: action.room_data_table,\r\n      };\r\n    }\r\n    case \"fetching_room_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_room_data_table: action.fetching_room_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_room\": {\r\n      return {\r\n        ...state,\r\n        selected_room: action.selected_room,\r\n      };\r\n    }\r\n    case \"fetching_selected_room\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_room: action.fetching_selected_room,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RoomReducer;\r\n","import { AdminReducerModel, AdminReducerTypes } from \"../Types/AdminTypes\";\r\n\r\nconst defaultState: AdminReducerModel = {\r\n  fetching_admin_data_table: false,\r\n  fetching_selected_admin: false,\r\n};\r\n\r\nconst AdminReducer = (\r\n  state: AdminReducerModel = defaultState,\r\n  action: AdminReducerTypes\r\n): AdminReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        admin_data_table: action.admin_data_table,\r\n      };\r\n    }\r\n    case \"fetching_admin_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_admin_data_table: action.fetching_admin_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        selected_admin: action.selected_admin,\r\n      };\r\n    }\r\n    case \"fetching_selected_admin\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_admin: action.fetching_selected_admin,\r\n      };\r\n    }\r\n\r\n    case \"set_logged_admin\": {\r\n      return {\r\n        ...state,\r\n        logged_admin: action.logged_admin,\r\n      };\r\n    }\r\n    case \"fetching_logged_admin\": {\r\n      return {\r\n        ...state,\r\n        fetching_logged_admin: action.fetching_logged_admin,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AdminReducer;\r\n","import { ClassReducerModel, ClassReducerTypes } from \"../Types/ClassTypes\";\r\n\r\nconst defaultState: ClassReducerModel = {\r\n  fetching_class_data_table: false,\r\n  fetching_selected_class: false,\r\n  fetch_tutor_class_table: false,\r\n};\r\n\r\nconst ClassReducer = (\r\n  state: ClassReducerModel = defaultState,\r\n  action: ClassReducerTypes\r\n): ClassReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_class_data_table\": {\r\n      return {\r\n        ...state,\r\n        class_data_table: action.class_data_table,\r\n      };\r\n    }\r\n    case \"fetching_class_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_class_data_table: action.fetching_class_data_table,\r\n      };\r\n    }\r\n\r\n    case \"set_selected_class\": {\r\n      return {\r\n        ...state,\r\n        selected_class: action.selected_class,\r\n      };\r\n    }\r\n    case \"fetching_selected_class\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_class: action.fetching_selected_class,\r\n      };\r\n    }\r\n\r\n    case \"set_tutor_class_table\": {\r\n      return {\r\n        ...state,\r\n        tutor_class_table: action.tutor_class_table,\r\n      };\r\n    }\r\n\r\n    case \"set_fetch_tutor_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_tutor_class_table: action.fetch_tutor_class_table,\r\n      };\r\n    }\r\n\r\n    case \"student_unenrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_unenrolled_class_table: action.student_unenrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"fetch_student_unenrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_unenrolled_class_table:\r\n          action.fetch_student_unenrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"student_enrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_enrolled_class_table: action.student_enrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"fetch_student_enrolled_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_enrolled_class_table:\r\n          action.fetch_student_enrolled_class_table,\r\n      };\r\n    }\r\n\r\n    case \"all_tutor_classes\": {\r\n      return {\r\n        ...state,\r\n        all_tutor_classes: action.all_tutor_classes,\r\n      };\r\n    }\r\n\r\n    case \"fetch_all_tutor_classes\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_tutor_classes: action.fetch_all_tutor_classes,\r\n      };\r\n    }\r\n\r\n    //\r\n    case \"student_class_by_student_pk\": {\r\n      return {\r\n        ...state,\r\n        student_class_by_student_pk: action.student_class_by_student_pk,\r\n      };\r\n    }\r\n\r\n    case \"fetch_student_class_by_student_pk\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_class_by_student_pk:\r\n          action.fetch_student_class_by_student_pk,\r\n      };\r\n    }\r\n    //\r\n    case \"class_summary_status\": {\r\n      return {\r\n        ...state,\r\n        class_summary_status: action.class_summary_status,\r\n      };\r\n    }\r\n\r\n    case \"fetch_class_summary_status\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_summary_status: action.fetch_class_summary_status,\r\n      };\r\n    }\r\n    //\r\n    case \"open_class_progress_stats\": {\r\n      return {\r\n        ...state,\r\n        open_class_progress_stats: action.open_class_progress_stats,\r\n      };\r\n    }\r\n\r\n    case \"fetch_open_class_progress_stats\": {\r\n      return {\r\n        ...state,\r\n        fetch_open_class_progress_stats: action.fetch_open_class_progress_stats,\r\n      };\r\n    }\r\n    //\r\n    case \"total_tutor_class_stats\": {\r\n      return {\r\n        ...state,\r\n        total_tutor_class_stats: action.total_tutor_class_stats,\r\n      };\r\n    }\r\n    case \"fetch_total_tutor_class_stats\": {\r\n      return {\r\n        ...state,\r\n        fetch_total_tutor_class_stats: action.fetch_total_tutor_class_stats,\r\n      };\r\n    }\r\n\r\n    case \"total_student_class_stats\": {\r\n      return {\r\n        ...state,\r\n        total_student_class_stats: action.total_student_class_stats,\r\n      };\r\n    }\r\n    case \"fetch_total_student_class_stats\": {\r\n      return {\r\n        ...state,\r\n        fetch_total_student_class_stats: action.fetch_total_student_class_stats,\r\n      };\r\n    }\r\n    //new\r\n    //\r\n    case \"student_available_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_available_class_table: action.student_available_class_table,\r\n      };\r\n    }\r\n    case \"fetch_student_available_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_available_class_table:\r\n          action.fetch_student_available_class_table,\r\n      };\r\n    }\r\n    //\r\n    case \"student_ongoing_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_ongoing_class_table: action.student_ongoing_class_table,\r\n      };\r\n    }\r\n    case \"fetch_student_ongoing_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_ongoing_class_table:\r\n          action.fetch_student_ongoing_class_table,\r\n      };\r\n    }\r\n    //\r\n    case \"student_ended_class_table\": {\r\n      return {\r\n        ...state,\r\n        student_ended_class_table: action.student_ended_class_table,\r\n      };\r\n    }\r\n    case \"fetch_student_ended_class_table\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_ended_class_table: action.fetch_student_ended_class_table,\r\n      };\r\n    }\r\n    //\r\n    case \"ended_class_rating_stats\": {\r\n      return {\r\n        ...state,\r\n        ended_class_rating_stats: action.ended_class_rating_stats,\r\n      };\r\n    }\r\n    case \"fetch_ended_class_rating_stats\": {\r\n      return {\r\n        ...state,\r\n        fetch_ended_class_rating_stats: action.fetch_ended_class_rating_stats,\r\n      };\r\n    }\r\n\r\n    //\r\n    case \"class_ratings\": {\r\n      return {\r\n        ...state,\r\n        class_ratings: action.class_ratings,\r\n      };\r\n    }\r\n    case \"fetch_class_ratings\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_ratings: action.fetch_class_ratings,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassReducer;\r\n","import {\r\n  StudentReducerModel,\r\n  StudentReducerTypes,\r\n} from \"../Types/StudentTypes\";\r\n\r\nconst defaultState: StudentReducerModel = {\r\n  fetching_selected_student: false,\r\n  fetching_student_data_table: false,\r\n};\r\n\r\nconst StudentReducer = (\r\n  state: StudentReducerModel = defaultState,\r\n  action: StudentReducerTypes\r\n): StudentReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_student_data_table\": {\r\n      return {\r\n        ...state,\r\n        student_data_table: action.student_data_table,\r\n      };\r\n    }\r\n    case \"fetching_student_data_table\": {\r\n      return {\r\n        ...state,\r\n        fetching_student_data_table: action.fetching_student_data_table,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_selected_student\": {\r\n      return {\r\n        ...state,\r\n        selected_student: action.selected_student,\r\n      };\r\n    }\r\n    case \"fetching_selected_student\": {\r\n      return {\r\n        ...state,\r\n        fetching_selected_student: action.fetching_selected_student,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"logged_student_info\": {\r\n      return {\r\n        ...state,\r\n        logged_student_info: action.logged_student_info,\r\n      };\r\n    }\r\n\r\n    case \"fetch_logged_student_info\": {\r\n      return {\r\n        ...state,\r\n        fetch_logged_student_info: action.fetch_logged_student_info,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default StudentReducer;\r\n","import {\r\n  ClassSessionReducerModel,\r\n  ClassSessionReducerTypes,\r\n} from \"../Types/ClassSessionTypes\";\r\n\r\nconst defaultState: ClassSessionReducerModel = {\r\n  fetch_stats_class_session: false,\r\n  fetch_tutor_class_sessions: false,\r\n  fetch_class_sessions: false,\r\n};\r\n\r\nconst ClassSessionReducer = (\r\n  state: ClassSessionReducerModel = defaultState,\r\n  action: ClassSessionReducerTypes\r\n): ClassSessionReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_fetch_tutor_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        fetch_tutor_class_sessions: action.fetch_tutor_class_sessions,\r\n      };\r\n    }\r\n    case \"set_tutor_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        tutor_class_sessions: action.tutor_class_sessions,\r\n      };\r\n    }\r\n\r\n    //--\r\n\r\n    case \"set_fetch_stats_class_session\": {\r\n      return {\r\n        ...state,\r\n        fetch_stats_class_session: action.fetch_stats_class_session,\r\n      };\r\n    }\r\n    case \"set_stats_class_session\": {\r\n      return {\r\n        ...state,\r\n        stats_class_session: action.stats_class_session,\r\n      };\r\n    }\r\n\r\n    case \"set_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        class_sessions: action.class_sessions,\r\n      };\r\n    }\r\n    case \"set_fetch_class_sessions\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_sessions: action.fetch_class_sessions,\r\n      };\r\n    }\r\n\r\n    case \"single_class_session\": {\r\n      return {\r\n        ...state,\r\n        single_class_session: action.single_class_session,\r\n      };\r\n    }\r\n    case \"fetch_single_class_session\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_session: action.fetch_single_class_session,\r\n      };\r\n    }\r\n\r\n    case \"tutor_session_cal\": {\r\n      return {\r\n        ...state,\r\n        tutor_session_cal: action.tutor_session_cal,\r\n      };\r\n    }\r\n    case \"fetch_tutor_session_cal\": {\r\n      return {\r\n        ...state,\r\n        fetch_tutor_session_cal: action.fetch_tutor_session_cal,\r\n      };\r\n    }\r\n\r\n    //\r\n    case \"student_session_cal\": {\r\n      return {\r\n        ...state,\r\n        student_session_cal: action.student_session_cal,\r\n      };\r\n    }\r\n    case \"fetch_student_session_cal\": {\r\n      return {\r\n        ...state,\r\n        fetch_student_session_cal: action.fetch_student_session_cal,\r\n      };\r\n    }\r\n    //\r\n    //\r\n    case \"logged_in_tutor_session_cal\": {\r\n      return {\r\n        ...state,\r\n        logged_in_tutor_session_cal: action.logged_in_tutor_session_cal,\r\n      };\r\n    }\r\n    case \"fetch_logged_in_tutor_session_cal\": {\r\n      return {\r\n        ...state,\r\n        fetch_logged_in_tutor_session_cal:\r\n          action.fetch_logged_in_tutor_session_cal,\r\n      };\r\n    }\r\n    //\r\n    case \"logged_student_calendar\": {\r\n      return {\r\n        ...state,\r\n        logged_student_calendar: action.logged_student_calendar,\r\n      };\r\n    }\r\n    case \"fetch_logged_student_calendar\": {\r\n      return {\r\n        ...state,\r\n        fetch_logged_student_calendar: action.fetch_logged_student_calendar,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassSessionReducer;\r\n","import {\r\n  ClassStudentReducerModel,\r\n  ClassStudentReducerTypes,\r\n} from \"../Types/ClassStudentTypes\";\r\n\r\nconst defaultState: ClassStudentReducerModel = {\r\n  fetch_tbl_class_students: false,\r\n};\r\n\r\nconst ClassStudentReducer = (\r\n  state: ClassStudentReducerModel = defaultState,\r\n  action: ClassStudentReducerTypes\r\n): ClassStudentReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_tbl_class_students\": {\r\n      return {\r\n        ...state,\r\n        tbl_class_students: action.tbl_class_students,\r\n      };\r\n    }\r\n    case \"set_fetch_tbl_class_students\": {\r\n      return {\r\n        ...state,\r\n        fetch_tbl_class_students: action.fetch_tbl_class_students,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassStudentReducer;\r\n","import {\r\n  ClassMaterialReducerModel,\r\n  ClassMaterialReducerTypes,\r\n} from \"../Types/ClassMaterialTypes\";\r\n\r\nconst defaultState: ClassMaterialReducerModel = {\r\n  fetch_class_material: false,\r\n};\r\n\r\nconst ClassMaterialReducer = (\r\n  state: ClassMaterialReducerModel = defaultState,\r\n  action: ClassMaterialReducerTypes\r\n): ClassMaterialReducerModel => {\r\n  switch (action.type) {\r\n    case \"set_tbl_class_materials\": {\r\n      return {\r\n        ...state,\r\n        tbl_class_materials: action.tbl_class_materials,\r\n      };\r\n    }\r\n    case \"set_fetch_class_material\": {\r\n      return {\r\n        ...state,\r\n        fetch_class_material: action.fetch_class_material,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassMaterialReducer;\r\n","import {\r\n  ClassSessionTaskReducerModel,\r\n  ClassSessionTaskReducerTypes,\r\n} from \"../Types/ClassSessionTaskTypes\";\r\n\r\nconst defaultState: ClassSessionTaskReducerModel = {};\r\n\r\nconst ClassSessionTaskReducer = (\r\n  state: ClassSessionTaskReducerModel = defaultState,\r\n  action: ClassSessionTaskReducerTypes\r\n): ClassSessionTaskReducerModel => {\r\n  switch (action.type) {\r\n    case \"all_class_task\": {\r\n      return {\r\n        ...state,\r\n        all_class_task: action.all_class_task,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task: action.fetch_all_class_task,\r\n      };\r\n    }\r\n\r\n    case \"single_class_task\": {\r\n      return {\r\n        ...state,\r\n        single_class_task: action.single_class_task,\r\n      };\r\n    }\r\n    case \"fetch_single_class_task\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_task: action.fetch_single_class_task,\r\n      };\r\n    }\r\n\r\n    case \"all_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        all_class_task_ques: action.all_class_task_ques,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task_ques: action.fetch_all_class_task_ques,\r\n      };\r\n    }\r\n\r\n    case \"single_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        single_class_task_ques: action.single_class_task_ques,\r\n      };\r\n    }\r\n    case \"fetch_single_class_task_ques\": {\r\n      return {\r\n        ...state,\r\n        fetch_single_class_task_ques: action.fetch_single_class_task_ques,\r\n      };\r\n    }\r\n\r\n    case \"all_class_task_sub\": {\r\n      return {\r\n        ...state,\r\n        all_class_task_sub: action.all_class_task_sub,\r\n      };\r\n    }\r\n    case \"fetch_all_class_task_sub\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_class_task_sub: action.fetch_all_class_task_sub,\r\n      };\r\n    }\r\n\r\n    case \"all_student_submit\": {\r\n      return {\r\n        ...state,\r\n        all_student_submit: action.all_student_submit,\r\n      };\r\n    }\r\n    case \"fetch_all_student_submit\": {\r\n      return {\r\n        ...state,\r\n        fetch_all_student_submit: action.fetch_all_student_submit,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ClassSessionTaskReducer;\r\n","import { SharedReducerModel, SharedReducerTypes } from \"../Types/SharedTypes\";\r\n\r\nconst defaultState: SharedReducerModel = {};\r\n\r\nconst SharedReducer = (\r\n  state: SharedReducerModel = defaultState,\r\n  action: SharedReducerTypes\r\n): SharedReducerModel => {\r\n  switch (action.type) {\r\n    case \"selected_tutor_rate\": {\r\n      return {\r\n        ...state,\r\n        selected_tutor_rate: action.selected_tutor_rate,\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default SharedReducer;\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport UserReducer from \"./UserReducer\";\r\nimport PageReducer from \"./PageReducer\";\r\nimport TutorReducer from \"./TutorReducer\";\r\nimport CourseReducer from \"./CourseReducer\";\r\nimport RoomReducer from \"./RoomReducer\";\r\nimport AdminReducer from \"./AdminReducer\";\r\nimport ClassReducer from \"./ClassReducer\";\r\nimport StudentReducer from \"./StudentReducer\";\r\nimport ClassSessionReducer from \"./ClassSessionReducer\";\r\nimport ClassStudentReducer from \"./ClassStudentReducer\";\r\nimport ClassMaterialReducer from \"./ClassMaterialReducer\";\r\nimport ClassSessionTaskReducer from \"./ClassSessionTaskReducer\";\r\nimport SharedReducer from \"./SharedReducer\";\r\n\r\nconst RootReducer = combineReducers({\r\n  UserReducer,\r\n  PageReducer,\r\n  TutorReducer,\r\n  CourseReducer,\r\n  RoomReducer,\r\n  AdminReducer,\r\n  ClassReducer,\r\n  StudentReducer,\r\n  ClassSessionReducer,\r\n  ClassStudentReducer,\r\n  ClassMaterialReducer,\r\n  ClassSessionTaskReducer,\r\n  SharedReducer,\r\n});\r\n\r\nexport default RootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport RootReducer from \"./Reducers/RootReducer\";\r\n\r\nconst Store = createStore(RootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootStore = ReturnType<typeof RootReducer>;\r\n\r\nexport default Store;\r\n","import { Color } from \"@material-ui/core\";\r\nimport {\r\n  createMuiTheme,\r\n  responsiveFontSizes,\r\n  Theme,\r\n} from \"@material-ui/core/styles\";\r\n\r\ninterface ThemeProp {\r\n  appbar: IAppBar;\r\n}\r\n\r\ninterface IAppBar {\r\n  bgColor: string;\r\n  color: string;\r\n  height: number;\r\n}\r\n\r\ninterface IBodyStyles {\r\n  backgroundColor: string;\r\n}\r\n\r\nexport interface StyledComponentTheme {\r\n  theme: Theme;\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createMuiTheme\" {\r\n  interface ThemeOptions {\r\n    header?: IHeader;\r\n    sidebar?: ISidebar;\r\n    body?: IBodyStyles;\r\n  }\r\n\r\n  interface IHeader {\r\n    height: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n    fontFamily: string;\r\n  }\r\n\r\n  interface ISidebar {\r\n    maxWidth: number;\r\n    minWidth: number;\r\n    backgroundColor: string;\r\n    color: string;\r\n  }\r\n}\r\n\r\ndeclare module \"@material-ui/core/styles/createPalette\" {\r\n  interface Palette {\r\n    blue: Color;\r\n    bg: Color;\r\n  }\r\n\r\n  interface PaletteOptions {\r\n    blue?: PaletteOptions[\"primary\"];\r\n  }\r\n}\r\n\r\nlet theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // main: `#1e2a78`,\r\n      main: `#581b98`,\r\n    },\r\n    secondary: {\r\n      // main: `#ff1f5a`,\r\n      main: `#f3558e`,\r\n    },\r\n  },\r\n  typography: {\r\n    button: {\r\n      // textTransform: \"unset\",\r\n      fontWeight: 500,\r\n      fontSize: `.8em`,\r\n    },\r\n    fontFamily: [\r\n      \"montserrat\",\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n  header: {\r\n    backgroundColor: \"#fff\",\r\n    height: 65,\r\n    color: \"black\",\r\n    fontFamily: \"Lato\",\r\n  },\r\n  sidebar: {\r\n    maxWidth: 300,\r\n    minWidth: 65,\r\n    backgroundColor: \"#black\",\r\n    color: \"black\",\r\n  },\r\n  body: {\r\n    backgroundColor: \" #e1f5fe\",\r\n  },\r\n});\r\n\r\ntheme = responsiveFontSizes(theme);\r\nexport default theme;\r\n","import { IconButton } from \"@material-ui/core\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport CloseRoundedIcon from \"@material-ui/icons/CloseRounded\";\nimport { SnackbarProvider } from \"notistack\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport Routes from \"./Routes/Routes\";\nimport Store from \"./Services/Store\";\nimport \"./Styles/App.css\";\nimport \"./Styles/PageCustomize.css\";\nimport theme from \"./Theme/MuiTheme\";\n\nconst App: React.FC = () => {\n  const notistackRef = React.createRef<SnackbarProvider>();\n  const onClickDismiss = (key: React.ReactText) => () => {\n    if (notistackRef.current) {\n      notistackRef.current.closeSnackbar(key);\n    }\n  };\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Provider store={Store}>\n        <SnackbarProvider\n          maxSnack={5}\n          dense\n          ref={notistackRef}\n          hideIconVariant\n          action={(event: React.ReactText) => (\n            <IconButton\n              style={{ backgroundColor: \"rgba(255,255,255,.8)\" }}\n              size=\"small\"\n              onClick={onClickDismiss(event)}\n            >\n              <CloseRoundedIcon color=\"error\" />\n            </IconButton>\n          )}\n        >\n          <Routes />\n        </SnackbarProvider>\n      </Provider>\n    </MuiThemeProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n// import \"typeface-montserrat\";\n// import \"typeface-lato\";\nimport \"typeface-montserrat\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport StudentApi from \"../Api/StudentApi\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\nimport { StudentModel } from \"../Models/StudentModel\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { StudentReducerTypes } from \"../Types/StudentTypes\";\r\n\r\nexport const setStudentDataTableApi = (payload: PaginationModel) => async (\r\n  dispatch: Dispatch<StudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_student_data_table\",\r\n      fetching_student_data_table: true,\r\n    });\r\n    const response: IServerResponse = await StudentApi.getStudentDataTableApi(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"fetching_student_data_table\",\r\n      fetching_student_data_table: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_student_data_table\",\r\n        student_data_table: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const setSelectedStudentAction = (student_pk: string) => async (\r\n  dispatch: Dispatch<StudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_selected_student\",\r\n      fetching_selected_student: true,\r\n    });\r\n    const response: IServerResponse = await StudentApi.getSingleStudentApi(\r\n      student_pk\r\n    );\r\n\r\n    dispatch({\r\n      type: \"fetching_selected_student\",\r\n      fetching_selected_student: false,\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"set_selected_student\",\r\n        selected_student: response.data,\r\n      });\r\n    } else {\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getLoggedStudentInfo = () => async (\r\n  dispatch: Dispatch<StudentReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetch_logged_student_info\",\r\n      fetch_logged_student_info: true,\r\n    });\r\n    const response: IServerResponse = await StudentApi.getLoggedStudentInfo();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"logged_student_info\",\r\n        logged_student_info: response.data,\r\n      });\r\n    }\r\n    dispatch({\r\n      type: \"fetch_logged_student_info\",\r\n      fetch_logged_student_info: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const addStudentAction = (\r\n  payload: StudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.addStudentApi(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst approveStudent = (\r\n  student_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.approveStudent(\r\n      student_pk\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateStudent = (\r\n  payload: StudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.updateStudent(payload);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst updateStudentImage = (\r\n  payload: StudentModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.updateStudentImage(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst blockStudent = (\r\n  student_pk: number,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await StudentApi.blockStudent(student_pk);\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  approveStudent,\r\n  blockStudent,\r\n  getLoggedStudentInfo,\r\n  updateStudent,\r\n  updateStudentImage,\r\n};\r\n","import { Dispatch } from \"react\";\r\nimport helperErrorMessage from \"../../Helpers/helperErrorMessage\";\r\nimport UserApi, { CurrentUserApi } from \"../Api/UserApi\";\r\nimport IUserAuthenticate from \"../Interface/IAuth\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { UserModel } from \"../Models/UserModel\";\r\nimport { PageReducerTypes } from \"../Types/PageTypes\";\r\nimport { UserReducerTypes } from \"../Types/UserTypes\";\r\n\r\ninterface IActionAuthenticateUser {\r\n  user: IUserAuthenticate;\r\n  resetForm: () => void;\r\n}\r\n\r\nexport const SetCurrentUserAction = () => async (\r\n  dispatch: Dispatch<UserReducerTypes | PageReducerTypes>\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: true,\r\n        loading_message: \"Loading, please wait...\",\r\n      },\r\n    });\r\n    const response: IServerResponse = await CurrentUserApi();\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n        // loading_message: \"Loading, please wait...\"\r\n      },\r\n    });\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_CURRENT_USER\",\r\n        user: response.data,\r\n      });\r\n\r\n      const user_type = response?.data?.user_type;\r\n      if (\r\n        window.location.pathname === \"/login\" ||\r\n        window.location.pathname === \"/\"\r\n      ) {\r\n        if (user_type === \"admin\") {\r\n          window.location.href = \"/admin/dashboard\";\r\n        } else if (user_type === \"tutor\") {\r\n          window.location.href = \"/tutor/dashboard\";\r\n        } else if (user_type === \"student\") {\r\n          window.location.href = \"/student/dashboard\";\r\n        }\r\n      }\r\n    } else {\r\n      if (window.location.pathname !== \"/login\") {\r\n        window.location.href = \"/login\";\r\n      }\r\n    }\r\n  } catch (error) {}\r\n};\r\n\r\nconst getUserLogs = () => async (dispatch: Dispatch<UserReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_user_logs\",\r\n      fetching_user_logs: true,\r\n    });\r\n    const response: IServerResponse = await UserApi.getUserLogs();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"user_logs\",\r\n        user_logs: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetching_user_logs\",\r\n      fetching_user_logs: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nconst getAllLogs = () => async (dispatch: Dispatch<UserReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"fetching_all_logs\",\r\n      fetching_all_logs: true,\r\n    });\r\n    const response: IServerResponse = await UserApi.getAllLogs();\r\n\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"all_logs\",\r\n        all_logs: response.data,\r\n      });\r\n    }\r\n\r\n    dispatch({\r\n      type: \"fetching_all_logs\",\r\n      fetching_all_logs: false,\r\n    });\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport const changeAdminPassword = (\r\n  payload: UserModel,\r\n  onSuccess: (msg: string) => any\r\n) => async (dispatch: Dispatch<UserReducerTypes | PageReducerTypes>) => {\r\n  try {\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        loading_message: \"Loading, thank you for your patience!\",\r\n        show: true,\r\n      },\r\n    });\r\n    const response: IServerResponse = await UserApi.changeAdminPassword(\r\n      payload\r\n    );\r\n    dispatch({\r\n      type: \"SET_PAGE_LOADING\",\r\n      page_loading: {\r\n        show: false,\r\n      },\r\n    });\r\n    if (response.success) {\r\n      dispatch({\r\n        type: \"SET_PAGE_SNACKBAR\",\r\n        page_snackbar: {\r\n          message: response.message.toString(),\r\n          options: {\r\n            variant: \"success\",\r\n          },\r\n        },\r\n      });\r\n      if (typeof onSuccess === \"function\") {\r\n        onSuccess(response.message.toString());\r\n      }\r\n    } else {\r\n      helperErrorMessage(dispatch, response);\r\n    }\r\n  } catch (error) {\r\n    console.error(`action error`, error);\r\n  }\r\n};\r\n\r\nexport default {\r\n  getUserLogs,\r\n  changeAdminPassword,\r\n  getAllLogs,\r\n};\r\n","import { Slide } from \"@material-ui/core\";\r\nimport {\r\n  Avatar,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport CheckRoundedIcon from \"@material-ui/icons/CheckRounded\";\r\nimport React, { FC, memo } from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface ISuccessDialog {\r\n  open: boolean;\r\n  message: string;\r\n}\r\n\r\nconst Transition: any = React.forwardRef(function Transition(\r\n  props: any,\r\n  ref: any\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const SuccessDialog: FC<ISuccessDialog> = memo(\r\n  ({ children, open, message }) => {\r\n    return (\r\n      <StyledSuccessDialog\r\n        open={open}\r\n        scroll=\"body\"\r\n        disableBackdropClick={true}\r\n        disableEscapeKeyDown={true}\r\n        TransitionComponent={Transition}\r\n        PaperProps={{\r\n          style: {\r\n            margin: 0,\r\n            padding: 0,\r\n            borderRadius: 10,\r\n            width: 400,\r\n            overflowY: \"visible\",\r\n          },\r\n        }}\r\n      >\r\n        <DialogTitle>\r\n          <div\r\n            style={{\r\n              display: \"grid\",\r\n              justifyItems: \"center\",\r\n              justifyContent: \"center\",\r\n              marginTop: \"-50px\",\r\n            }}\r\n          >\r\n            <Avatar\r\n              style={{\r\n                height: \"3.5em\",\r\n                width: \"3.5em\",\r\n                backgroundColor: \"#8bc34a\",\r\n              }}\r\n            >\r\n              <CheckRoundedIcon fontSize=\"large\" />\r\n            </Avatar>\r\n          </div>\r\n        </DialogTitle>\r\n\r\n        <DialogContent className=\"dialog-content\">\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            Successful!\r\n          </Typography>\r\n          <Typography gutterBottom>{message}</Typography>\r\n        </DialogContent>\r\n        <div className=\"dialog-actions\">\r\n          <small>What do you want to do next?</small>\r\n          <>{children}</>\r\n        </div>\r\n      </StyledSuccessDialog>\r\n    );\r\n  }\r\n);\r\n\r\nexport default SuccessDialog;\r\n\r\nconst StyledSuccessDialog = styled(Dialog)`\r\n  .dialog-content {\r\n    margin-top: -15px;\r\n    margin-bottom: 1em;\r\n    text-align: center;\r\n  }\r\n  .dialog-actions {\r\n    margin: 1em;\r\n    display: grid;\r\n    grid-gap: 0.3em;\r\n    grid-auto-flow: row;\r\n    width: 100%;\r\n    justify-items: start;\r\n    justify-content: start;\r\n  }\r\n`;\r\n","import {\r\n  Checkbox,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormControlProps,\r\n  FormGroup,\r\n  FormHelperText,\r\n  FormLabel,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n} from \"@material-ui/core\";\r\nimport { useField } from \"formik\";\r\nimport React, { memo } from \"react\";\r\n\r\ninterface IOptions {\r\n  id: string | number;\r\n  label: string | number;\r\n}\r\n\r\ninterface IFormikRadio {\r\n  data: Array<IOptions>;\r\n  label: string;\r\n  name: string;\r\n  variant: \"vertical\" | \"horizontal\";\r\n  required?: boolean;\r\n}\r\n\r\nconst FormikRadio: React.FC<IFormikRadio> = memo(\r\n  ({ name, variant, label, data, required, ...props }) => {\r\n    const [field, meta] = useField(name);\r\n    const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n\r\n    return (\r\n      <FormControl\r\n        required={required ? true : false}\r\n        error={!!errorText}\r\n        component=\"fieldset\"\r\n      >\r\n        <FormLabel\r\n          style={{\r\n            transform: \"translate(14px, -6px) scale(0.75)\",\r\n            transformOrigin: \" top left\",\r\n          }}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n        <RadioGroup\r\n          aria-label={name}\r\n          {...field}\r\n          value={field.value ? field.value : \"\"}\r\n          style={\r\n            variant === \"vertical\"\r\n              ? {\r\n                  display: \"grid\",\r\n                  gridAutoFlow: \"column\",\r\n                  alignItems: \"center\",\r\n                  alignContent: \"center\",\r\n                  marginTop: `-5px`,\r\n                }\r\n              : null\r\n          }\r\n        >\r\n          {data.map((option, index) => (\r\n            <FormControlLabel\r\n              key={index}\r\n              value={option.id}\r\n              control={<Radio size=\"small\" color=\"primary\" />}\r\n              label={option.label}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n        <FormHelperText>{errorText}</FormHelperText>\r\n      </FormControl>\r\n    );\r\n  }\r\n);\r\n\r\nexport default FormikRadio;\r\n","import React, { memo } from \"react\";\r\nimport MaskedInput from \"react-text-mask\";\r\n\r\nconst MaskedPhoneNumber = memo((props: any) => {\r\n  const { inputRef, ...other } = props;\r\n\r\n  return (\r\n    <MaskedInput\r\n      {...other}\r\n      ref={(ref) => {\r\n        inputRef(ref ? ref.inputElement : null);\r\n      }}\r\n      placeholder={\"+639\"}\r\n      mask={[\r\n        \"+\",\r\n        \"6\",\r\n        \"3\",\r\n        \"9\",\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n        /\\d/,\r\n      ]}\r\n      showMask\r\n      guide={false}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MaskedPhoneNumber;\r\n","import { PostFetch } from \"../../Hooks/UseFetch\";\r\nimport IServerResponse from \"../Interface/IServerResponse\";\r\nimport { StudentModel } from \"../Models/StudentModel\";\r\nimport { PaginationModel } from \"../Models/PaginationModels\";\r\n\r\nconst BASE_URL = `api/student/`;\r\n\r\nconst getStudentDataTableApi = async (\r\n  payload: PaginationModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getStudentDataTable\", payload);\r\n  return response;\r\n};\r\n\r\nconst addStudentApi = async (\r\n  payload: StudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"addStudent\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateStudent = async (\r\n  payload: StudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"updateStudent\", payload);\r\n  return response;\r\n};\r\n\r\nconst updateStudentImage = async (\r\n  payload: StudentModel\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"updateStudentImage\", payload);\r\n  return response;\r\n};\r\n\r\nconst getSingleStudentApi = async (\r\n  student_pk: string\r\n): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getSingleStudent\", {\r\n    student_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst approveStudent = async (student_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"approveStudent\", {\r\n    student_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst blockStudent = async (student_pk: number): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"blockStudent\", {\r\n    student_pk,\r\n  });\r\n  return response;\r\n};\r\n\r\nconst getTotalStudents = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getTotalStudents\", {});\r\n  return response;\r\n};\r\n\r\nconst getLoggedStudentInfo = async (): Promise<IServerResponse> => {\r\n  const response = await PostFetch(BASE_URL + \"getLoggedStudentInfo\", {});\r\n  return response;\r\n};\r\n\r\nexport default {\r\n  getStudentDataTableApi,\r\n  addStudentApi,\r\n  getSingleStudentApi,\r\n  approveStudent,\r\n  blockStudent,\r\n  getTotalStudents,\r\n  getLoggedStudentInfo,\r\n  updateStudent,\r\n  updateStudentImage,\r\n};\r\n"],"sourceRoot":""}